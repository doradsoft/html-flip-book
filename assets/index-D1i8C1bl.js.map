{"version":3,"mappings":"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","names":["f","require$$0","k","l","m","n","p","q","c","a","g","b","d","e","h","reactJsxRuntime_production_min","jsxRuntimeModule","createRoot","t","i","s","r","o","u","v","y","T","E","A","P","x","I","D","S","C","L","F","R","M","_","N","O","X","z","Y","W","$","H","j","U","B","V","G","Z","J","K","Q","tt","et","it","nt","st","ht","at","ot","rt","ct","ut","lt","pt","ft","dt","vt","gt","mt","yt","Tt","bt","Et","wt","At","Pt","xt","Dt","St","Ct","It","Lt","Ft","Rt","Mt","kt","_t","Nt","Ot","Xt","zt","Yt","qt","Wt","$t","Ht","jt","Ut","Bt","Vt","Gt","Zt","Jt","Kt","Qt","te","ee","w","__publicField","_a","_b","FlipBookReact","pages","className","debug","direction","pageSemantics","flipBook","useRef","FlipBookBase","useEffect","jsx","page","index","stringify","values","options","settings","nameRe","nameReJsx","emptyOptions","name","re","whitespace","thing","empty","value","Schema","property","normal","space","merge","definitions","normalize","Info","attribute","powers","boolean","increment","booleanish","overloadedBoolean","number","spaceSeparated","commaSeparated","commaOrSpaceSeparated","checks","types","DefinedInfo","mask","mark","check","key","own","create","definition","prop","info","xlink","xml","caseSensitiveTransform","attributes","caseInsensitiveTransform","xmlns","aria","html","svg","valid","dash","cap","find","schema","Type","rest","camelcase","dashes","kebab","$0","hastToReact","htmlBase","svgBase","COMMENT_REGEX","NEWLINE_REGEX","WHITESPACE_REGEX","PROPERTY_REGEX","COLON_REGEX","VALUE_REGEX","SEMICOLON_REGEX","TRIM_REGEX","NEWLINE","FORWARD_SLASH","ASTERISK","EMPTY_STRING","TYPE_COMMENT","TYPE_DECLARATION","inlineStyleParser","style","lineno","column","updatePosition","str","lines","position","start","node","Position","error","msg","err","match","comments","rules","comment","pos","declaration","val","ret","trim","declarations","decls","decl","__importDefault","this","mod","cjs","inline_style_parser_1","StyleToObject","iterator","styleObject","hasIterator","_default","styleToObject","pointEnd","point","pointStart","type","end","stringifyPosition","VFileMessage","causeOrReason","optionsOrParentOrPlace","origin","reason","legacyCause","parent","emptyMap","dashSomething","tableElements","tableCellElement","docs","toJsxRuntime","tree","filePath","developmentCreate","productionCreate","state","result","one","element","mdxExpression","mdxJsxElement","mdxEsm","root","text","parentSchema","findComponentFromName","props","createElementProps","children","createChildren","child","addNode","addChildren","expression","assert","crashEstree","createJsxElementProps","jsxs","fn","jsxDEV","isStaticChildren","alignValue","createProperty","objectExpression","countsByName","count","commas","spaces","parseStyle","transformStylesToCssCasing","replacer","cause","message","toCamel","allowExpression","identifiers","isIdentifierName","place","domCasing","cssCasing","from","transformStyleToCssCasing","to","toDash","$1","urlAttributes","toString","includeImageAlt","includeHtml","all","decodeNamedCharacterReference","characterReference","char","splice","list","remove","items","chunkStart","parameters","push","hasOwnProperty","combineExtensions","extensions","syntaxExtension","extension","hook","left","right","code","constructs","existing","before","decodeNumericCharacterReference","base","normalizeIdentifier","asciiAlpha","regexCheck","asciiAlphanumeric","asciiAtext","asciiControl","asciiDigit","asciiHexDigit","asciiPunctuation","markdownLineEnding","markdownLineEndingOrSpace","markdownSpace","unicodePunctuation","unicodeWhitespace","regex","normalizeUri","skip","replace","next","factorySpace","effects","ok","max","limit","size","prefix","content","initializeContent","contentStart","afterContentStartConstruct","paragraphInitial","previous","lineStart","token","data","document","initializeDocument","containerConstruct","tokenizeContainer","self","stack","continued","childFlow","childToken","lineStartOffset","item","documentContinue","checkNewContainers","closeFlow","indexBeforeExits","indexBeforeFlow","exitContainers","documentContinued","flowStart","thereIsANewContainer","thereIsNoNewContainer","containerContinue","flowContinue","writeToChild","eof","stream","seen","entry","nok","classifyCharacter","resolveAll","events","context","called","resolve","attention","tokenizeAttention","resolveAllAttention","open","group","openingSequence","closingSequence","use","nextEvents","offset","movePoint","attentionMarkers","marker","inside","after","close","autolink","tokenizeAutolink","schemeOrEmailAtext","emailAtext","schemeInsideOrEmailAtext","urlInside","emailAtSignOrDot","emailLabel","emailValue","blankLine","tokenizeBlankLine","blockQuote","tokenizeBlockQuoteStart","tokenizeBlockQuoteContinuation","exit","contStart","contBefore","characterEscape","tokenizeCharacterEscape","tokenizeCharacterReference","test","numeric","nonLazyContinuation","tokenizeNonLazyContinuation","codeFenced","tokenizeCodeFenced","closeStart","tokenizeCloseStart","initialPrefix","sizeOpen","beforeSequenceOpen","tail","sequenceOpen","infoBefore","atNonLazyBreak","metaBefore","meta","contentBefore","beforeContentChunk","contentChunk","startBefore","beforeSequenceClose","sequenceClose","sequenceCloseAfter","codeIndented","tokenizeCodeIndented","furtherStart","tokenizeFurtherStart","afterPrefix","atBreak","codeText","tokenizeCodeText","resolveCodeText","tailExitIndex","headEnterIndex","enter","between","SpliceBuffer","initial","stop","deleteCount","removed","chunkedPush","subtokenize","eventsArray","jumps","event","lineIndex","otherIndex","otherEvent","subevents","more","subcontent","eventIndex","startPosition","startPositions","tokenizer","childEvents","gaps","current","adjust","breaks","slice","tokenizeContent","resolveContent","continuationConstruct","tokenizeContinuation","chunkInside","contentEnd","contentContinue","startLookahead","prefixed","factoryDestination","literalType","literalMarkerType","rawType","stringType","balance","enclosedBefore","raw","enclosed","enclosedEscape","rawEscape","factoryLabel","markerType","labelInside","labelEscape","factoryTitle","begin","escape","factoryWhitespace","tokenizeDefinition","titleBefore","tokenizeTitleBefore","identifier","labelAfter","markerAfter","destinationBefore","destinationAfter","afterWhitespace","beforeMarker","titleAfter","titleAfterOptionalWhitespace","hardBreakEscape","tokenizeHardBreakEscape","headingAtx","tokenizeHeadingAtx","resolveHeadingAtx","sequenceFurther","htmlBlockNames","htmlRawNames","htmlFlow","tokenizeHtmlFlow","resolveToHtmlFlow","blankLineBefore","tokenizeBlankLineBefore","nonLazyContinuationStart","tokenizeNonLazyContinuationStart","closingTag","buffer","markerB","declarationOpen","tagCloseStart","continuationDeclarationInside","tagName","commentOpenInside","cdataOpenInside","continuation","slash","basicSelfClosing","completeClosingTagAfter","completeAttributeNameBefore","completeEnd","completeAttributeName","completeAttributeNameAfter","completeAttributeValueBefore","completeAttributeValueQuoted","completeAttributeValueUnquoted","completeAttributeValueQuotedAfter","completeAfter","continuationCommentInside","continuationRawTagOpen","continuationClose","continuationCdataInside","continuationAfter","continuationStart","continuationStartNonLazy","continuationBefore","continuationRawEndTag","htmlText","tokenizeHtmlText","returnState","instruction","tagOpen","commentEnd","commentClose","lineEndingBefore","cdata","cdataClose","cdataEnd","instructionClose","tagClose","tagCloseBetween","tagOpenBetween","tagOpenAttributeName","tagOpenAttributeNameAfter","tagOpenAttributeValueBefore","tagOpenAttributeValueQuoted","tagOpenAttributeValueUnquoted","tagOpenAttributeValueQuotedAfter","lineEndingAfter","lineEndingAfterPrefix","labelEnd","tokenizeLabelEnd","resolveToLabelEnd","resolveAllLabelEnd","resourceConstruct","tokenizeResource","referenceFullConstruct","tokenizeReferenceFull","referenceCollapsedConstruct","tokenizeReferenceCollapsed","media","label","labelStart","defined","labelEndNok","labelEndOk","referenceNotFull","resourceStart","resourceBefore","resourceOpen","resourceEnd","resourceDestinationAfter","resourceDestinationMissing","resourceBetween","resourceTitleAfter","referenceFull","referenceFullAfter","referenceFullMissing","referenceCollapsedStart","referenceCollapsedOpen","labelStartImage","tokenizeLabelStartImage","labelStartLink","tokenizeLabelStartLink","lineEnding","tokenizeLineEnding","thematicBreak","tokenizeThematicBreak","sequence","tokenizeListStart","tokenizeListContinuation","tokenizeListEnd","listItemPrefixWhitespaceConstruct","tokenizeListItemPrefixWhitespace","indentConstruct","tokenizeIndent","initialSize","kind","atMarker","onBlank","endOfPrefix","otherPrefix","notBlank","notInCurrentItem","setextUnderline","tokenizeSetextUnderline","resolveToSetextUnderline","heading","paragraph","flow","initializeFlow","atBlankEnding","afterConstruct","resolver","createResolver","string","initializeFactory","field","initializeText","resolveAllLineSuffixes","notText","extraResolver","resolveAllText","chunks","bufferIndex","tabs","chunk","createTokenizer","parser","initialize","columnStart","resolveAllConstructs","consume","constructFactory","onsuccessfulconstruct","onsuccessfulcheck","sliceStream","sliceSerialize","now","defineSkip","write","main","addResult","expandTabs","serializeChunks","sliceChunks","line","_index","_bufferIndex","accountForPotentialSkip","chunkIndex","go","fields","construct","onreturn","bogusState","listOfConstructs","constructIndex","currentConstruct","handleListOfConstructs","handleMapOfConstructs","map","def","handleConstruct","store","startPoint","startPrevious","startCurrentConstruct","startEventsIndex","startStack","restore","startIndex","startBufferIndex","endIndex","endBufferIndex","view","head","atTab","contentInitial","flowInitial","insideSpan","resolveText","disable","parse","defaultConstructs","creator","postprocess","search","preprocess","atCarriageReturn","preprocessor","encoding","endPosition","characterEscapeOrReference","decodeString","decode","$2","hex","fromMarkdown","compiler","config","opener","link","onenterdata","codeFlow","emphasis","hardBreak","image","listItem","onenterlistitemvalue","onenterlistordered","onenterreference","strong","closer","onexitatxheadingsequence","onexitautolinkemail","onexitautolinkprotocol","onexitdata","onexitcharacterreferencemarker","onexitcharacterreferencevalue","onexitcharacterreference","onexitcodefenced","onexitcodefencedfence","onexitcodefencedfenceinfo","onexitcodefencedfencemeta","onexitcodeindented","onexitcodetext","onexitdefinitiondestinationstring","onexitdefinitionlabelstring","onexitdefinitiontitlestring","onexithardbreak","onexithtmlflow","onexithtmltext","onexitimage","onexitlabel","onexitlabeltext","onexitlineending","onexitlink","onexitreferencestring","onexitresourcedestinationstring","onexitresourcetitlestring","onexitresource","onexitsetextheading","onexitsetextheadinglinesequence","onexitsetextheadingtext","configure","compile","resume","listStack","prepareList","handler","defaultOnError","length","containerBalance","listSpread","firstBlankLineIndex","tailIndex","tailEvent","and","errorHandler","onExitError","ancestor","depth","siblings","referenceType","fragment","combined","remarkParse","doc","blockquote","properties","strikethrough","footnoteReference","clobberPrefix","id","safeId","counter","reuseCounter","sup","revert","subtype","suffix","contents","imageReference","inlineCode","linkReference","results","loose","listLoose","listItemLoose","spread","table","rows","firstRow","tableContent","body","tableRow","align","cellIndex","cells","cell","tableCell","tab","trimLines","source","last","trimLine","handlers","ignore","VOID","PRIMITIVE","ARRAY","OBJECT","DATE","REGEXP","MAP","SET","ERROR","BIGINT","env","deserializer","as","out","unpair","arr","object","flags","set","deserialize","serialized","EMPTY","keys","typeOf","asString","shouldSkip","TYPE","serializer","strict","json","pair","entries","serialize","lossy","structuredClone$1","any","defaultFootnoteBackContent","rereferenceIndex","defaultFootnoteBackLabel","referenceIndex","footer","footnoteBackContent","footnoteBackLabel","footnoteLabel","footnoteLabelTagName","footnoteLabelProperties","listItems","backReferences","counts","tailTail","structuredClone","convert","castFactory","anyFactory","propsFactory","typeFactory","tests","checkAsRecord","nodeAsRecord","testFunction","looksLikeANode","CONTINUE","EXIT","SKIP","visitParents","visitor","reverse","is","step","factory","parents","visit","subresult","grandparents","toResult","nodeAsParent","testOrVisitor","visitorOrReverse","maybeReverse","overload","createState","definitionById","footnoteById","footnoteCounts","defaultHandlers","applyData","patch","wrap","handle","shallow","defaultUnknownHandler","nodes","trimMarkdownSpaceStart","hName","hChildren","hProperties","toHast","foot","remarkRehype","destination","file","hastTree","bail","hasOwn","toStr","defineProperty","gOPD","isArray","isPlainObject","obj","hasOwnConstructor","hasIsPrototypeOf","setProperty","target","getProperty","extend","src","copy","copyIsArray","clone","deep","prototype","trough","fns","pipeline","run","middlewareIndex","callback","output","middelware","middleware","wrapped","fnExpectsCallback","done","exception","then","path","basename","dirname","extname","join","ext","assertPath","seenNonSlash","firstNonSlashEnd","extIndex","unmatchedSlash","startPart","startDot","preDotState","segments","joined","absolute","normalizeString","allowAboveRoot","lastSegmentLength","lastSlash","dots","lastSlashIndex","proc","cwd","isUrl","fileUrlOrPath","urlToPath","getPathFromURLPosix","url","pathname","third","order","VFile","isUint8Array","assertNonEmpty","assertPart","stem","part","CallableInstance","proto","func","apply","names","descriptor","Processor","attacher","assertUnfrozen","transformer","realFile","vfile","assertParser","assertCompiler","executor","reject","parseTree","realDone","compileTree","compileResult","looksLikeAValue","complete","assertDone","assertNode","transformers","outputTree","resultingTree","attachers","namespace","addPlugin","addList","addPreset","add","plugin","plugins","entryIndex","primary","currentPrimary","isPlainObj","unified","frozen","asyncName","looksLikeAVFile","changelog","emptyPlugins","emptyRemarkRehypeOptions","safeProtocol","deprecations","Markdown","allowedElements","allowElement","components","disallowedElements","rehypePlugins","remarkPlugins","remarkRehypeOptions","skipHtml","unwrapDisallowed","urlTransform","defaultUrlTransform","processor","deprecation","mdastTree","transform","Fragment","colon","questionMark","numberSign","markdownFiles","EnBook","enPages","setEnPages","useState","assertIsMarkdownModule","module","FlipBook","hePages","hePageSemanticsDict","hePageSemantics","pageIndex","semanticPageName","chapter","HeBook","App","ReactDOM.createRoot","React"],"ignoreList":[0,1,2,3,4,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137],"sources":["../../node_modules/react/cjs/react-jsx-runtime.production.min.js","../../node_modules/react/jsx-runtime.js","../../node_modules/react-dom/client.js","../../../node_modules/react/cjs/react-jsx-runtime.production.min.js","../../../node_modules/react/jsx-runtime.js","../../../../base/dist/flipbook.js","../../../src/FlipBook.tsx","../../node_modules/comma-separated-tokens/index.js","../../node_modules/estree-util-is-identifier-name/lib/index.js","../../node_modules/hast-util-whitespace/lib/index.js","../../node_modules/property-information/lib/util/schema.js","../../node_modules/property-information/lib/util/merge.js","../../node_modules/property-information/lib/normalize.js","../../node_modules/property-information/lib/util/info.js","../../node_modules/property-information/lib/util/types.js","../../node_modules/property-information/lib/util/defined-info.js","../../node_modules/property-information/lib/util/create.js","../../node_modules/property-information/lib/xlink.js","../../node_modules/property-information/lib/xml.js","../../node_modules/property-information/lib/util/case-sensitive-transform.js","../../node_modules/property-information/lib/util/case-insensitive-transform.js","../../node_modules/property-information/lib/xmlns.js","../../node_modules/property-information/lib/aria.js","../../node_modules/property-information/lib/html.js","../../node_modules/property-information/lib/svg.js","../../node_modules/property-information/lib/find.js","../../node_modules/property-information/lib/hast-to-react.js","../../node_modules/property-information/index.js","../../node_modules/space-separated-tokens/index.js","../../node_modules/inline-style-parser/index.js","../../node_modules/style-to-object/cjs/index.js","../../node_modules/style-to-object/esm/index.mjs","../../node_modules/unist-util-position/lib/index.js","../../node_modules/unist-util-stringify-position/lib/index.js","../../node_modules/vfile-message/lib/index.js","../../node_modules/hast-util-to-jsx-runtime/lib/index.js","../../node_modules/html-url-attributes/lib/index.js","../../node_modules/mdast-util-to-string/lib/index.js","../../node_modules/decode-named-character-reference/index.dom.js","../../node_modules/micromark-util-chunked/index.js","../../node_modules/micromark-util-combine-extensions/index.js","../../node_modules/micromark-util-decode-numeric-character-reference/index.js","../../node_modules/micromark-util-normalize-identifier/index.js","../../node_modules/micromark-util-character/index.js","../../node_modules/micromark-util-sanitize-uri/index.js","../../node_modules/micromark-factory-space/index.js","../../node_modules/micromark/lib/initialize/content.js","../../node_modules/micromark/lib/initialize/document.js","../../node_modules/micromark-util-classify-character/index.js","../../node_modules/micromark-util-resolve-all/index.js","../../node_modules/micromark-core-commonmark/lib/attention.js","../../node_modules/micromark-core-commonmark/lib/autolink.js","../../node_modules/micromark-core-commonmark/lib/blank-line.js","../../node_modules/micromark-core-commonmark/lib/block-quote.js","../../node_modules/micromark-core-commonmark/lib/character-escape.js","../../node_modules/micromark-core-commonmark/lib/character-reference.js","../../node_modules/micromark-core-commonmark/lib/code-fenced.js","../../node_modules/micromark-core-commonmark/lib/code-indented.js","../../node_modules/micromark-core-commonmark/lib/code-text.js","../../node_modules/micromark-util-subtokenize/lib/splice-buffer.js","../../node_modules/micromark-util-subtokenize/index.js","../../node_modules/micromark-core-commonmark/lib/content.js","../../node_modules/micromark-factory-destination/index.js","../../node_modules/micromark-factory-label/index.js","../../node_modules/micromark-factory-title/index.js","../../node_modules/micromark-factory-whitespace/index.js","../../node_modules/micromark-core-commonmark/lib/definition.js","../../node_modules/micromark-core-commonmark/lib/hard-break-escape.js","../../node_modules/micromark-core-commonmark/lib/heading-atx.js","../../node_modules/micromark-util-html-tag-name/index.js","../../node_modules/micromark-core-commonmark/lib/html-flow.js","../../node_modules/micromark-core-commonmark/lib/html-text.js","../../node_modules/micromark-core-commonmark/lib/label-end.js","../../node_modules/micromark-core-commonmark/lib/label-start-image.js","../../node_modules/micromark-core-commonmark/lib/label-start-link.js","../../node_modules/micromark-core-commonmark/lib/line-ending.js","../../node_modules/micromark-core-commonmark/lib/thematic-break.js","../../node_modules/micromark-core-commonmark/lib/list.js","../../node_modules/micromark-core-commonmark/lib/setext-underline.js","../../node_modules/micromark/lib/initialize/flow.js","../../node_modules/micromark/lib/initialize/text.js","../../node_modules/micromark/lib/create-tokenizer.js","../../node_modules/micromark/lib/constructs.js","../../node_modules/micromark/lib/parse.js","../../node_modules/micromark/lib/postprocess.js","../../node_modules/micromark/lib/preprocess.js","../../node_modules/micromark-util-decode-string/index.js","../../node_modules/mdast-util-from-markdown/lib/index.js","../../node_modules/remark-parse/lib/index.js","../../node_modules/mdast-util-to-hast/lib/handlers/blockquote.js","../../node_modules/mdast-util-to-hast/lib/handlers/break.js","../../node_modules/mdast-util-to-hast/lib/handlers/code.js","../../node_modules/mdast-util-to-hast/lib/handlers/delete.js","../../node_modules/mdast-util-to-hast/lib/handlers/emphasis.js","../../node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js","../../node_modules/mdast-util-to-hast/lib/handlers/heading.js","../../node_modules/mdast-util-to-hast/lib/handlers/html.js","../../node_modules/mdast-util-to-hast/lib/revert.js","../../node_modules/mdast-util-to-hast/lib/handlers/image-reference.js","../../node_modules/mdast-util-to-hast/lib/handlers/image.js","../../node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","../../node_modules/mdast-util-to-hast/lib/handlers/link-reference.js","../../node_modules/mdast-util-to-hast/lib/handlers/link.js","../../node_modules/mdast-util-to-hast/lib/handlers/list-item.js","../../node_modules/mdast-util-to-hast/lib/handlers/list.js","../../node_modules/mdast-util-to-hast/lib/handlers/paragraph.js","../../node_modules/mdast-util-to-hast/lib/handlers/root.js","../../node_modules/mdast-util-to-hast/lib/handlers/strong.js","../../node_modules/mdast-util-to-hast/lib/handlers/table.js","../../node_modules/mdast-util-to-hast/lib/handlers/table-row.js","../../node_modules/mdast-util-to-hast/lib/handlers/table-cell.js","../../node_modules/trim-lines/index.js","../../node_modules/mdast-util-to-hast/lib/handlers/text.js","../../node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js","../../node_modules/mdast-util-to-hast/lib/handlers/index.js","../../node_modules/@ungap/structured-clone/esm/types.js","../../node_modules/@ungap/structured-clone/esm/deserialize.js","../../node_modules/@ungap/structured-clone/esm/serialize.js","../../node_modules/@ungap/structured-clone/esm/index.js","../../node_modules/mdast-util-to-hast/lib/footer.js","../../node_modules/unist-util-is/lib/index.js","../../node_modules/unist-util-visit-parents/lib/index.js","../../node_modules/unist-util-visit/lib/index.js","../../node_modules/mdast-util-to-hast/lib/state.js","../../node_modules/mdast-util-to-hast/lib/index.js","../../node_modules/remark-rehype/lib/index.js","../../node_modules/bail/index.js","../../node_modules/extend/index.js","../../node_modules/is-plain-obj/index.js","../../node_modules/trough/lib/index.js","../../node_modules/vfile/lib/minpath.browser.js","../../node_modules/vfile/lib/minproc.browser.js","../../node_modules/vfile/lib/minurl.shared.js","../../node_modules/vfile/lib/minurl.browser.js","../../node_modules/vfile/lib/index.js","../../node_modules/unified/lib/callable-instance.js","../../node_modules/unified/lib/index.js","../../node_modules/react-markdown/lib/index.js","../../src/EnBook.tsx","../../src/HeBook.tsx","../../src/App.tsx","../../src/index.tsx"],"sourcesContent":["/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","/*! For license information please see flipbook.js.LICENSE.txt */\nvar t={168:(t,e,i)=>{var n;!function(s,r,o,a){var h,c=[\"\",\"webkit\",\"Moz\",\"MS\",\"ms\",\"o\"],u=r.createElement(\"div\"),l=\"function\",p=Math.round,f=Math.abs,d=Date.now;function v(t,e,i){return setTimeout(w(t,i),e)}function g(t,e,i){return!!Array.isArray(t)&&(m(t,i[e],i),!0)}function m(t,e,i){var n;if(t)if(t.forEach)t.forEach(e,i);else if(t.length!==a)for(n=0;n<t.length;)e.call(i,t[n],n,t),n++;else for(n in t)t.hasOwnProperty(n)&&e.call(i,t[n],n,t)}function y(t,e,i){var n=\"DEPRECATED METHOD: \"+e+\"\\n\"+i+\" AT \\n\";return function(){var e=new Error(\"get-stack-trace\"),i=e&&e.stack?e.stack.replace(/^[^\\(]+?[\\n$]/gm,\"\").replace(/^\\s+at\\s+/gm,\"\").replace(/^Object.<anonymous>\\s*\\(/gm,\"{anonymous}()@\"):\"Unknown Stack Trace\",r=s.console&&(s.console.warn||s.console.log);return r&&r.call(s.console,n,i),t.apply(this,arguments)}}h=\"function\"!=typeof Object.assign?function(t){if(t===a||null===t)throw new TypeError(\"Cannot convert undefined or null to object\");for(var e=Object(t),i=1;i<arguments.length;i++){var n=arguments[i];if(n!==a&&null!==n)for(var s in n)n.hasOwnProperty(s)&&(e[s]=n[s])}return e}:Object.assign;var T=y((function(t,e,i){for(var n=Object.keys(e),s=0;s<n.length;)(!i||i&&t[n[s]]===a)&&(t[n[s]]=e[n[s]]),s++;return t}),\"extend\",\"Use `assign`.\"),b=y((function(t,e){return T(t,e,!0)}),\"merge\",\"Use `assign`.\");function E(t,e,i){var n,s=e.prototype;(n=t.prototype=Object.create(s)).constructor=t,n._super=s,i&&h(n,i)}function w(t,e){return function(){return t.apply(e,arguments)}}function A(t,e){return typeof t==l?t.apply(e&&e[0]||a,e):t}function P(t,e){return t===a?e:t}function x(t,e,i){m(I(e),(function(e){t.addEventListener(e,i,!1)}))}function D(t,e,i){m(I(e),(function(e){t.removeEventListener(e,i,!1)}))}function S(t,e){for(;t;){if(t==e)return!0;t=t.parentNode}return!1}function C(t,e){return t.indexOf(e)>-1}function I(t){return t.trim().split(/\\s+/g)}function L(t,e,i){if(t.indexOf&&!i)return t.indexOf(e);for(var n=0;n<t.length;){if(i&&t[n][i]==e||!i&&t[n]===e)return n;n++}return-1}function F(t){return Array.prototype.slice.call(t,0)}function R(t,e,i){for(var n=[],s=[],r=0;r<t.length;){var o=e?t[r][e]:t[r];L(s,o)<0&&n.push(t[r]),s[r]=o,r++}return i&&(n=e?n.sort((function(t,i){return t[e]>i[e]})):n.sort()),n}function M(t,e){for(var i,n,s=e[0].toUpperCase()+e.slice(1),r=0;r<c.length;){if((n=(i=c[r])?i+s:e)in t)return n;r++}return a}var k=1;function _(t){var e=t.ownerDocument||t;return e.defaultView||e.parentWindow||s}var N=\"ontouchstart\"in s,O=M(s,\"PointerEvent\")!==a,X=N&&/mobile|tablet|ip(ad|hone|od)|android/i.test(navigator.userAgent),z=\"touch\",Y=\"mouse\",q=25,W=1,$=4,H=8,j=1,U=2,B=4,V=8,G=16,Z=U|B,J=V|G,K=Z|J,Q=[\"x\",\"y\"],tt=[\"clientX\",\"clientY\"];function et(t,e){var i=this;this.manager=t,this.callback=e,this.element=t.element,this.target=t.options.inputTarget,this.domHandler=function(e){A(t.options.enable,[t])&&i.handler(e)},this.init()}function it(t,e,i){var n=i.pointers.length,s=i.changedPointers.length,r=e&W&&n-s==0,o=e&($|H)&&n-s==0;i.isFirst=!!r,i.isFinal=!!o,r&&(t.session={}),i.eventType=e,function(t,e){var i=t.session,n=e.pointers,s=n.length;i.firstInput||(i.firstInput=nt(e)),s>1&&!i.firstMultiple?i.firstMultiple=nt(e):1===s&&(i.firstMultiple=!1);var r=i.firstInput,o=i.firstMultiple,h=o?o.center:r.center,c=e.center=st(n);e.timeStamp=d(),e.deltaTime=e.timeStamp-r.timeStamp,e.angle=ht(h,c),e.distance=at(h,c),function(t,e){var i=e.center,n=t.offsetDelta||{},s=t.prevDelta||{},r=t.prevInput||{};e.eventType!==W&&r.eventType!==$||(s=t.prevDelta={x:r.deltaX||0,y:r.deltaY||0},n=t.offsetDelta={x:i.x,y:i.y}),e.deltaX=s.x+(i.x-n.x),e.deltaY=s.y+(i.y-n.y)}(i,e),e.offsetDirection=ot(e.deltaX,e.deltaY);var u,l,p=rt(e.deltaTime,e.deltaX,e.deltaY);e.overallVelocityX=p.x,e.overallVelocityY=p.y,e.overallVelocity=f(p.x)>f(p.y)?p.x:p.y,e.scale=o?(u=o.pointers,at((l=n)[0],l[1],tt)/at(u[0],u[1],tt)):1,e.rotation=o?function(t,e){return ht(e[1],e[0],tt)+ht(t[1],t[0],tt)}(o.pointers,n):0,e.maxPointers=i.prevInput?e.pointers.length>i.prevInput.maxPointers?e.pointers.length:i.prevInput.maxPointers:e.pointers.length,function(t,e){var i,n,s,r,o=t.lastInterval||e,h=e.timeStamp-o.timeStamp;if(e.eventType!=H&&(h>q||o.velocity===a)){var c=e.deltaX-o.deltaX,u=e.deltaY-o.deltaY,l=rt(h,c,u);n=l.x,s=l.y,i=f(l.x)>f(l.y)?l.x:l.y,r=ot(c,u),t.lastInterval=e}else i=o.velocity,n=o.velocityX,s=o.velocityY,r=o.direction;e.velocity=i,e.velocityX=n,e.velocityY=s,e.direction=r}(i,e);var v=t.element;S(e.srcEvent.target,v)&&(v=e.srcEvent.target),e.target=v}(t,i),t.emit(\"hammer.input\",i),t.recognize(i),t.session.prevInput=i}function nt(t){for(var e=[],i=0;i<t.pointers.length;)e[i]={clientX:p(t.pointers[i].clientX),clientY:p(t.pointers[i].clientY)},i++;return{timeStamp:d(),pointers:e,center:st(e),deltaX:t.deltaX,deltaY:t.deltaY}}function st(t){var e=t.length;if(1===e)return{x:p(t[0].clientX),y:p(t[0].clientY)};for(var i=0,n=0,s=0;s<e;)i+=t[s].clientX,n+=t[s].clientY,s++;return{x:p(i/e),y:p(n/e)}}function rt(t,e,i){return{x:e/t||0,y:i/t||0}}function ot(t,e){return t===e?j:f(t)>=f(e)?t<0?U:B:e<0?V:G}function at(t,e,i){i||(i=Q);var n=e[i[0]]-t[i[0]],s=e[i[1]]-t[i[1]];return Math.sqrt(n*n+s*s)}function ht(t,e,i){i||(i=Q);var n=e[i[0]]-t[i[0]],s=e[i[1]]-t[i[1]];return 180*Math.atan2(s,n)/Math.PI}et.prototype={handler:function(){},init:function(){this.evEl&&x(this.element,this.evEl,this.domHandler),this.evTarget&&x(this.target,this.evTarget,this.domHandler),this.evWin&&x(_(this.element),this.evWin,this.domHandler)},destroy:function(){this.evEl&&D(this.element,this.evEl,this.domHandler),this.evTarget&&D(this.target,this.evTarget,this.domHandler),this.evWin&&D(_(this.element),this.evWin,this.domHandler)}};var ct={mousedown:W,mousemove:2,mouseup:$},ut=\"mousedown\",lt=\"mousemove mouseup\";function pt(){this.evEl=ut,this.evWin=lt,this.pressed=!1,et.apply(this,arguments)}E(pt,et,{handler:function(t){var e=ct[t.type];e&W&&0===t.button&&(this.pressed=!0),2&e&&1!==t.which&&(e=$),this.pressed&&(e&$&&(this.pressed=!1),this.callback(this.manager,e,{pointers:[t],changedPointers:[t],pointerType:Y,srcEvent:t}))}});var ft={pointerdown:W,pointermove:2,pointerup:$,pointercancel:H,pointerout:H},dt={2:z,3:\"pen\",4:Y,5:\"kinect\"},vt=\"pointerdown\",gt=\"pointermove pointerup pointercancel\";function mt(){this.evEl=vt,this.evWin=gt,et.apply(this,arguments),this.store=this.manager.session.pointerEvents=[]}s.MSPointerEvent&&!s.PointerEvent&&(vt=\"MSPointerDown\",gt=\"MSPointerMove MSPointerUp MSPointerCancel\"),E(mt,et,{handler:function(t){var e=this.store,i=!1,n=t.type.toLowerCase().replace(\"ms\",\"\"),s=ft[n],r=dt[t.pointerType]||t.pointerType,o=r==z,a=L(e,t.pointerId,\"pointerId\");s&W&&(0===t.button||o)?a<0&&(e.push(t),a=e.length-1):s&($|H)&&(i=!0),a<0||(e[a]=t,this.callback(this.manager,s,{pointers:e,changedPointers:[t],pointerType:r,srcEvent:t}),i&&e.splice(a,1))}});var yt={touchstart:W,touchmove:2,touchend:$,touchcancel:H};function Tt(){this.evTarget=\"touchstart\",this.evWin=\"touchstart touchmove touchend touchcancel\",this.started=!1,et.apply(this,arguments)}function bt(t,e){var i=F(t.touches),n=F(t.changedTouches);return e&($|H)&&(i=R(i.concat(n),\"identifier\",!0)),[i,n]}E(Tt,et,{handler:function(t){var e=yt[t.type];if(e===W&&(this.started=!0),this.started){var i=bt.call(this,t,e);e&($|H)&&i[0].length-i[1].length==0&&(this.started=!1),this.callback(this.manager,e,{pointers:i[0],changedPointers:i[1],pointerType:z,srcEvent:t})}}});var Et={touchstart:W,touchmove:2,touchend:$,touchcancel:H},wt=\"touchstart touchmove touchend touchcancel\";function At(){this.evTarget=wt,this.targetIds={},et.apply(this,arguments)}function Pt(t,e){var i=F(t.touches),n=this.targetIds;if(e&(2|W)&&1===i.length)return n[i[0].identifier]=!0,[i,i];var s,r,o=F(t.changedTouches),a=[],h=this.target;if(r=i.filter((function(t){return S(t.target,h)})),e===W)for(s=0;s<r.length;)n[r[s].identifier]=!0,s++;for(s=0;s<o.length;)n[o[s].identifier]&&a.push(o[s]),e&($|H)&&delete n[o[s].identifier],s++;return a.length?[R(r.concat(a),\"identifier\",!0),a]:void 0}E(At,et,{handler:function(t){var e=Et[t.type],i=Pt.call(this,t,e);i&&this.callback(this.manager,e,{pointers:i[0],changedPointers:i[1],pointerType:z,srcEvent:t})}});var xt=2500;function Dt(){et.apply(this,arguments);var t=w(this.handler,this);this.touch=new At(this.manager,t),this.mouse=new pt(this.manager,t),this.primaryTouch=null,this.lastTouches=[]}function St(t,e){t&W?(this.primaryTouch=e.changedPointers[0].identifier,Ct.call(this,e)):t&($|H)&&Ct.call(this,e)}function Ct(t){var e=t.changedPointers[0];if(e.identifier===this.primaryTouch){var i={x:e.clientX,y:e.clientY};this.lastTouches.push(i);var n=this.lastTouches;setTimeout((function(){var t=n.indexOf(i);t>-1&&n.splice(t,1)}),xt)}}function It(t){for(var e=t.srcEvent.clientX,i=t.srcEvent.clientY,n=0;n<this.lastTouches.length;n++){var s=this.lastTouches[n],r=Math.abs(e-s.x),o=Math.abs(i-s.y);if(r<=25&&o<=25)return!0}return!1}E(Dt,et,{handler:function(t,e,i){var n=i.pointerType==z,s=i.pointerType==Y;if(!(s&&i.sourceCapabilities&&i.sourceCapabilities.firesTouchEvents)){if(n)St.call(this,e,i);else if(s&&It.call(this,i))return;this.callback(t,e,i)}},destroy:function(){this.touch.destroy(),this.mouse.destroy()}});var Lt=M(u.style,\"touchAction\"),Ft=Lt!==a,Rt=\"compute\",Mt=\"auto\",kt=\"manipulation\",_t=\"none\",Nt=\"pan-x\",Ot=\"pan-y\",Xt=function(){if(!Ft)return!1;var t={},e=s.CSS&&s.CSS.supports;return[\"auto\",\"manipulation\",\"pan-y\",\"pan-x\",\"pan-x pan-y\",\"none\"].forEach((function(i){t[i]=!e||s.CSS.supports(\"touch-action\",i)})),t}();function zt(t,e){this.manager=t,this.set(e)}zt.prototype={set:function(t){t==Rt&&(t=this.compute()),Ft&&this.manager.element.style&&Xt[t]&&(this.manager.element.style[Lt]=t),this.actions=t.toLowerCase().trim()},update:function(){this.set(this.manager.options.touchAction)},compute:function(){var t=[];return m(this.manager.recognizers,(function(e){A(e.options.enable,[e])&&(t=t.concat(e.getTouchAction()))})),function(t){if(C(t,_t))return _t;var e=C(t,Nt),i=C(t,Ot);return e&&i?_t:e||i?e?Nt:Ot:C(t,kt)?kt:Mt}(t.join(\" \"))},preventDefaults:function(t){var e=t.srcEvent,i=t.offsetDirection;if(this.manager.session.prevented)e.preventDefault();else{var n=this.actions,s=C(n,_t)&&!Xt[_t],r=C(n,Ot)&&!Xt[Ot],o=C(n,Nt)&&!Xt[Nt];if(s){var a=1===t.pointers.length,h=t.distance<2,c=t.deltaTime<250;if(a&&h&&c)return}if(!o||!r)return s||r&&i&Z||o&&i&J?this.preventSrc(e):void 0}},preventSrc:function(t){this.manager.session.prevented=!0,t.preventDefault()}};var Yt=1,qt=32;function Wt(t){this.options=h({},this.defaults,t||{}),this.id=k++,this.manager=null,this.options.enable=P(this.options.enable,!0),this.state=Yt,this.simultaneous={},this.requireFail=[]}function $t(t){return 16&t?\"cancel\":8&t?\"end\":4&t?\"move\":2&t?\"start\":\"\"}function Ht(t){return t==G?\"down\":t==V?\"up\":t==U?\"left\":t==B?\"right\":\"\"}function jt(t,e){var i=e.manager;return i?i.get(t):t}function Ut(){Wt.apply(this,arguments)}function Bt(){Ut.apply(this,arguments),this.pX=null,this.pY=null}function Vt(){Ut.apply(this,arguments)}function Gt(){Wt.apply(this,arguments),this._timer=null,this._input=null}function Zt(){Ut.apply(this,arguments)}function Jt(){Ut.apply(this,arguments)}function Kt(){Wt.apply(this,arguments),this.pTime=!1,this.pCenter=!1,this._timer=null,this._input=null,this.count=0}function Qt(t,e){return(e=e||{}).recognizers=P(e.recognizers,Qt.defaults.preset),new te(t,e)}function te(t,e){this.options=h({},Qt.defaults,e||{}),this.options.inputTarget=this.options.inputTarget||t,this.handlers={},this.session={},this.recognizers=[],this.oldCssProps={},this.element=t,this.input=new(this.options.inputClass||(O?mt:X?At:N?Dt:pt))(this,it),this.touchAction=new zt(this,this.options.touchAction),ee(this,!0),m(this.options.recognizers,(function(t){var e=this.add(new t[0](t[1]));t[2]&&e.recognizeWith(t[2]),t[3]&&e.requireFailure(t[3])}),this)}function ee(t,e){var i,n=t.element;n.style&&(m(t.options.cssProps,(function(s,r){i=M(n.style,r),e?(t.oldCssProps[i]=n.style[i],n.style[i]=s):n.style[i]=t.oldCssProps[i]||\"\"})),e||(t.oldCssProps={}))}Wt.prototype={defaults:{},set:function(t){return h(this.options,t),this.manager&&this.manager.touchAction.update(),this},recognizeWith:function(t){if(g(t,\"recognizeWith\",this))return this;var e=this.simultaneous;return e[(t=jt(t,this)).id]||(e[t.id]=t,t.recognizeWith(this)),this},dropRecognizeWith:function(t){return g(t,\"dropRecognizeWith\",this)||(t=jt(t,this),delete this.simultaneous[t.id]),this},requireFailure:function(t){if(g(t,\"requireFailure\",this))return this;var e=this.requireFail;return-1===L(e,t=jt(t,this))&&(e.push(t),t.requireFailure(this)),this},dropRequireFailure:function(t){if(g(t,\"dropRequireFailure\",this))return this;t=jt(t,this);var e=L(this.requireFail,t);return e>-1&&this.requireFail.splice(e,1),this},hasRequireFailures:function(){return this.requireFail.length>0},canRecognizeWith:function(t){return!!this.simultaneous[t.id]},emit:function(t){var e=this,i=this.state;function n(i){e.manager.emit(i,t)}i<8&&n(e.options.event+$t(i)),n(e.options.event),t.additionalEvent&&n(t.additionalEvent),i>=8&&n(e.options.event+$t(i))},tryEmit:function(t){if(this.canEmit())return this.emit(t);this.state=qt},canEmit:function(){for(var t=0;t<this.requireFail.length;){if(!(this.requireFail[t].state&(qt|Yt)))return!1;t++}return!0},recognize:function(t){var e=h({},t);if(!A(this.options.enable,[this,e]))return this.reset(),void(this.state=qt);56&this.state&&(this.state=Yt),this.state=this.process(e),30&this.state&&this.tryEmit(e)},process:function(t){},getTouchAction:function(){},reset:function(){}},E(Ut,Wt,{defaults:{pointers:1},attrTest:function(t){var e=this.options.pointers;return 0===e||t.pointers.length===e},process:function(t){var e=this.state,i=t.eventType,n=6&e,s=this.attrTest(t);return n&&(i&H||!s)?16|e:n||s?i&$?8|e:2&e?4|e:2:qt}}),E(Bt,Ut,{defaults:{event:\"pan\",threshold:10,pointers:1,direction:K},getTouchAction:function(){var t=this.options.direction,e=[];return t&Z&&e.push(Ot),t&J&&e.push(Nt),e},directionTest:function(t){var e=this.options,i=!0,n=t.distance,s=t.direction,r=t.deltaX,o=t.deltaY;return s&e.direction||(e.direction&Z?(s=0===r?j:r<0?U:B,i=r!=this.pX,n=Math.abs(t.deltaX)):(s=0===o?j:o<0?V:G,i=o!=this.pY,n=Math.abs(t.deltaY))),t.direction=s,i&&n>e.threshold&&s&e.direction},attrTest:function(t){return Ut.prototype.attrTest.call(this,t)&&(2&this.state||!(2&this.state)&&this.directionTest(t))},emit:function(t){this.pX=t.deltaX,this.pY=t.deltaY;var e=Ht(t.direction);e&&(t.additionalEvent=this.options.event+e),this._super.emit.call(this,t)}}),E(Vt,Ut,{defaults:{event:\"pinch\",threshold:0,pointers:2},getTouchAction:function(){return[_t]},attrTest:function(t){return this._super.attrTest.call(this,t)&&(Math.abs(t.scale-1)>this.options.threshold||2&this.state)},emit:function(t){if(1!==t.scale){var e=t.scale<1?\"in\":\"out\";t.additionalEvent=this.options.event+e}this._super.emit.call(this,t)}}),E(Gt,Wt,{defaults:{event:\"press\",pointers:1,time:251,threshold:9},getTouchAction:function(){return[Mt]},process:function(t){var e=this.options,i=t.pointers.length===e.pointers,n=t.distance<e.threshold,s=t.deltaTime>e.time;if(this._input=t,!n||!i||t.eventType&($|H)&&!s)this.reset();else if(t.eventType&W)this.reset(),this._timer=v((function(){this.state=8,this.tryEmit()}),e.time,this);else if(t.eventType&$)return 8;return qt},reset:function(){clearTimeout(this._timer)},emit:function(t){8===this.state&&(t&&t.eventType&$?this.manager.emit(this.options.event+\"up\",t):(this._input.timeStamp=d(),this.manager.emit(this.options.event,this._input)))}}),E(Zt,Ut,{defaults:{event:\"rotate\",threshold:0,pointers:2},getTouchAction:function(){return[_t]},attrTest:function(t){return this._super.attrTest.call(this,t)&&(Math.abs(t.rotation)>this.options.threshold||2&this.state)}}),E(Jt,Ut,{defaults:{event:\"swipe\",threshold:10,velocity:.3,direction:Z|J,pointers:1},getTouchAction:function(){return Bt.prototype.getTouchAction.call(this)},attrTest:function(t){var e,i=this.options.direction;return i&(Z|J)?e=t.overallVelocity:i&Z?e=t.overallVelocityX:i&J&&(e=t.overallVelocityY),this._super.attrTest.call(this,t)&&i&t.offsetDirection&&t.distance>this.options.threshold&&t.maxPointers==this.options.pointers&&f(e)>this.options.velocity&&t.eventType&$},emit:function(t){var e=Ht(t.offsetDirection);e&&this.manager.emit(this.options.event+e,t),this.manager.emit(this.options.event,t)}}),E(Kt,Wt,{defaults:{event:\"tap\",pointers:1,taps:1,interval:300,time:250,threshold:9,posThreshold:10},getTouchAction:function(){return[kt]},process:function(t){var e=this.options,i=t.pointers.length===e.pointers,n=t.distance<e.threshold,s=t.deltaTime<e.time;if(this.reset(),t.eventType&W&&0===this.count)return this.failTimeout();if(n&&s&&i){if(t.eventType!=$)return this.failTimeout();var r=!this.pTime||t.timeStamp-this.pTime<e.interval,o=!this.pCenter||at(this.pCenter,t.center)<e.posThreshold;if(this.pTime=t.timeStamp,this.pCenter=t.center,o&&r?this.count+=1:this.count=1,this._input=t,0==this.count%e.taps)return this.hasRequireFailures()?(this._timer=v((function(){this.state=8,this.tryEmit()}),e.interval,this),2):8}return qt},failTimeout:function(){return this._timer=v((function(){this.state=qt}),this.options.interval,this),qt},reset:function(){clearTimeout(this._timer)},emit:function(){8==this.state&&(this._input.tapCount=this.count,this.manager.emit(this.options.event,this._input))}}),Qt.VERSION=\"2.0.7\",Qt.defaults={domEvents:!1,touchAction:Rt,enable:!0,inputTarget:null,inputClass:null,preset:[[Zt,{enable:!1}],[Vt,{enable:!1},[\"rotate\"]],[Jt,{direction:Z}],[Bt,{direction:Z},[\"swipe\"]],[Kt],[Kt,{event:\"doubletap\",taps:2},[\"tap\"]],[Gt]],cssProps:{userSelect:\"none\",touchSelect:\"none\",touchCallout:\"none\",contentZooming:\"none\",userDrag:\"none\",tapHighlightColor:\"rgba(0,0,0,0)\"}},te.prototype={set:function(t){return h(this.options,t),t.touchAction&&this.touchAction.update(),t.inputTarget&&(this.input.destroy(),this.input.target=t.inputTarget,this.input.init()),this},stop:function(t){this.session.stopped=t?2:1},recognize:function(t){var e=this.session;if(!e.stopped){var i;this.touchAction.preventDefaults(t);var n=this.recognizers,s=e.curRecognizer;(!s||s&&8&s.state)&&(s=e.curRecognizer=null);for(var r=0;r<n.length;)i=n[r],2===e.stopped||s&&i!=s&&!i.canRecognizeWith(s)?i.reset():i.recognize(t),!s&&14&i.state&&(s=e.curRecognizer=i),r++}},get:function(t){if(t instanceof Wt)return t;for(var e=this.recognizers,i=0;i<e.length;i++)if(e[i].options.event==t)return e[i];return null},add:function(t){if(g(t,\"add\",this))return this;var e=this.get(t.options.event);return e&&this.remove(e),this.recognizers.push(t),t.manager=this,this.touchAction.update(),t},remove:function(t){if(g(t,\"remove\",this))return this;if(t=this.get(t)){var e=this.recognizers,i=L(e,t);-1!==i&&(e.splice(i,1),this.touchAction.update())}return this},on:function(t,e){if(t!==a&&e!==a){var i=this.handlers;return m(I(t),(function(t){i[t]=i[t]||[],i[t].push(e)})),this}},off:function(t,e){if(t!==a){var i=this.handlers;return m(I(t),(function(t){e?i[t]&&i[t].splice(L(i[t],e),1):delete i[t]})),this}},emit:function(t,e){this.options.domEvents&&function(t,e){var i=r.createEvent(\"Event\");i.initEvent(t,!0,!0),i.gesture=e,e.target.dispatchEvent(i)}(t,e);var i=this.handlers[t]&&this.handlers[t].slice();if(i&&i.length){e.type=t,e.preventDefault=function(){e.srcEvent.preventDefault()};for(var n=0;n<i.length;)i[n](e),n++}},destroy:function(){this.element&&ee(this,!1),this.handlers={},this.session={},this.input.destroy(),this.element=null}},h(Qt,{INPUT_START:W,INPUT_MOVE:2,INPUT_END:$,INPUT_CANCEL:H,STATE_POSSIBLE:Yt,STATE_BEGAN:2,STATE_CHANGED:4,STATE_ENDED:8,STATE_RECOGNIZED:8,STATE_CANCELLED:16,STATE_FAILED:qt,DIRECTION_NONE:j,DIRECTION_LEFT:U,DIRECTION_RIGHT:B,DIRECTION_UP:V,DIRECTION_DOWN:G,DIRECTION_HORIZONTAL:Z,DIRECTION_VERTICAL:J,DIRECTION_ALL:K,Manager:te,Input:et,TouchAction:zt,TouchInput:At,MouseInput:pt,PointerEventInput:mt,TouchMouseInput:Dt,SingleTouchInput:Tt,Recognizer:Wt,AttrRecognizer:Ut,Tap:Kt,Pan:Bt,Swipe:Jt,Pinch:Vt,Rotate:Zt,Press:Gt,on:x,off:D,each:m,merge:b,extend:T,assign:h,inherit:E,bindFn:w,prefixed:M}),(void 0!==s?s:\"undefined\"!=typeof self?self:{}).Hammer=Qt,(n=function(){return Qt}.call(e,i,e,t))===a||(t.exports=n)}(window,document)},970:(t,e,i)=>{i.d(e,{A:()=>a});var n=i(645),s=i.n(n),r=i(278),o=i.n(r)()(s());o.push([t.id,\".flipbook{height:100%;width:100%;overflow:hidden}.flipbook-debug-bar{position:absolute;bottom:0;left:0;width:100%;background-color:rgba(0,0,0,.5);color:#fff;padding:10px;box-sizing:border-box;display:flex;flex-wrap:wrap;justify-content:space-between;z-index:9999}\",\"\"]);const a=o},0:(t,e,i)=>{i.d(e,{A:()=>a});var n=i(645),s=i.n(n),r=i(278),o=i.n(r)()(s());o.push([t.id,\".page{position:absolute;backface-visibility:hidden;transform-style:preserve-3d}.page>*{max-width:100%;max-height:100%;height:100%;width:100%;box-sizing:border-box}\",\"\"]);const a=o},278:t=>{t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var i=\"\",n=void 0!==e[5];return e[4]&&(i+=\"@supports (\".concat(e[4],\") {\")),e[2]&&(i+=\"@media \".concat(e[2],\" {\")),n&&(i+=\"@layer\".concat(e[5].length>0?\" \".concat(e[5]):\"\",\" {\")),i+=t(e),n&&(i+=\"}\"),e[2]&&(i+=\"}\"),e[4]&&(i+=\"}\"),i})).join(\"\")},e.i=function(t,i,n,s,r){\"string\"==typeof t&&(t=[[null,t,void 0]]);var o={};if(n)for(var a=0;a<this.length;a++){var h=this[a][0];null!=h&&(o[h]=!0)}for(var c=0;c<t.length;c++){var u=[].concat(t[c]);n&&o[u[0]]||(void 0!==r&&(void 0===u[5]||(u[1]=\"@layer\".concat(u[5].length>0?\" \".concat(u[5]):\"\",\" {\").concat(u[1],\"}\")),u[5]=r),i&&(u[2]?(u[1]=\"@media \".concat(u[2],\" {\").concat(u[1],\"}\"),u[2]=i):u[2]=i),s&&(u[4]?(u[1]=\"@supports (\".concat(u[4],\") {\").concat(u[1],\"}\"),u[4]=s):u[4]=\"\".concat(s)),e.push(u))}},e}},645:t=>{t.exports=function(t){return t[1]}},292:t=>{var e=[];function i(t){for(var i=-1,n=0;n<e.length;n++)if(e[n].identifier===t){i=n;break}return i}function n(t,n){for(var r={},o=[],a=0;a<t.length;a++){var h=t[a],c=n.base?h[0]+n.base:h[0],u=r[c]||0,l=\"\".concat(c,\" \").concat(u);r[c]=u+1;var p=i(l),f={css:h[1],media:h[2],sourceMap:h[3],supports:h[4],layer:h[5]};if(-1!==p)e[p].references++,e[p].updater(f);else{var d=s(f,n);n.byIndex=a,e.splice(a,0,{identifier:l,updater:d,references:1})}o.push(l)}return o}function s(t,e){var i=e.domAPI(e);return i.update(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap&&e.supports===t.supports&&e.layer===t.layer)return;i.update(t=e)}else i.remove()}}t.exports=function(t,s){var r=n(t=t||[],s=s||{});return function(t){t=t||[];for(var o=0;o<r.length;o++){var a=i(r[o]);e[a].references--}for(var h=n(t,s),c=0;c<r.length;c++){var u=i(r[c]);0===e[u].references&&(e[u].updater(),e.splice(u,1))}r=h}}},383:t=>{var e={};t.exports=function(t,i){var n=function(t){if(void 0===e[t]){var i=document.querySelector(t);if(window.HTMLIFrameElement&&i instanceof window.HTMLIFrameElement)try{i=i.contentDocument.head}catch(t){i=null}e[t]=i}return e[t]}(t);if(!n)throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");n.appendChild(i)}},88:t=>{t.exports=function(t){var e=document.createElement(\"style\");return t.setAttributes(e,t.attributes),t.insert(e,t.options),e}},884:(t,e,i)=>{t.exports=function(t){var e=i.nc;e&&t.setAttribute(\"nonce\",e)}},893:t=>{t.exports=function(t){if(\"undefined\"==typeof document)return{update:function(){},remove:function(){}};var e=t.insertStyleElement(t);return{update:function(i){!function(t,e,i){var n=\"\";i.supports&&(n+=\"@supports (\".concat(i.supports,\") {\")),i.media&&(n+=\"@media \".concat(i.media,\" {\"));var s=void 0!==i.layer;s&&(n+=\"@layer\".concat(i.layer.length>0?\" \".concat(i.layer):\"\",\" {\")),n+=i.css,s&&(n+=\"}\"),i.media&&(n+=\"}\"),i.supports&&(n+=\"}\");var r=i.sourceMap;r&&\"undefined\"!=typeof btoa&&(n+=\"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r)))),\" */\")),e.styleTagTransform(n,t,e.options)}(e,t,i)},remove:function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(e)}}}},997:t=>{t.exports=function(t,e){if(e.styleSheet)e.styleSheet.cssText=t;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(t))}}}},e={};function i(n){var s=e[n];if(void 0!==s)return s.exports;var r=e[n]={id:n,exports:{}};return t[n](r,r.exports,i),r.exports}i.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return i.d(e,{a:e}),e},i.d=(t,e)=>{for(var n in e)i.o(e,n)&&!i.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:e[n]})},i.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),i.nc=void 0;var n={};i.d(n,{$:()=>D});var s=i(292),r=i.n(s),o=i(893),a=i.n(o),h=i(383),c=i.n(h),u=i(884),l=i.n(u),p=i(88),f=i.n(p),d=i(997),v=i.n(d),g=i(0),m={};m.styleTagTransform=v(),m.setAttributes=l(),m.insert=c().bind(null,\"head\"),m.domAPI=a(),m.insertStyleElement=f(),r()(g.A,m),g.A&&g.A.locals&&g.A.locals;var y=i(970),T={};T.styleTagTransform=v(),T.setAttributes=l(),T.insert=c().bind(null,\"head\"),T.domAPI=a(),T.insertStyleElement=f(),r()(y.A,T),y.A&&y.A.locals&&y.A.locals;var b,E=i(168),w=i.n(E);class A{index;pages;bookProperties;currentAnimation=null;targetFlipPosition=null;wrappedFlipPosition;constructor(t,e,i,n){this.index=t,this.pages=e,this.bookProperties=n,this.wrappedFlipPosition=i?1:0}get isTurned(){return 1===this.flipPosition}get isTurning(){return 0!==this.flipPosition}get isCover(){return this.isFirst||this.isLast}get isFirst(){return 0===this.index}get isLast(){return this.index===this.bookProperties.leavesCount-1}set flipPosition(t){this.wrappedFlipPosition=Math.max(0,Math.min(1,t))}get flipPosition(){return this.wrappedFlipPosition}async flipToPosition(t,e=225){return this.currentAnimation&&await this.currentAnimation,this.flipPosition===t?Promise.resolve():this.targetFlipPosition===t?this.currentAnimation??Promise.resolve():(this.targetFlipPosition=t,this.currentAnimation=new Promise((i=>{const n=this.flipPosition,s=180*Math.abs(t-n)/e*1e3,r=performance.now(),o=e=>{const a=e-r;if(a<0)return void requestAnimationFrame(o);const h=Math.min(a/s,1),c=n+h*(t-n);this.pages.forEach(((t,e)=>{const i=this.bookProperties.isLTR;if(t){const n=e%2+1==1,s=(n?i?c>.5?180-180*c:180*-c:c>.5?-(180-180*c):180*c:i?c<.5?180*-c:180-180*c:c<.5?180*c:-(180-180*c))+\"deg\",r=n?i?\"100%\":\"-100%\":\"0px\",o=n?c>.5?-1:1:c<.5?-1:1;t.style.transform=`translateX(${r})rotateY(${s})scaleX(${o})`,t.style.transformOrigin=n?i?\"left\":\"right\":i?\"right\":\"left\",t.style.zIndex=`${c>.5?t.dataset.pageIndex:this.bookProperties.pagesCount-t.dataset.pageIndex}`}})),this.flipPosition=Math.max(0,Math.min(1,c)),h<1?requestAnimationFrame(o):(this.currentAnimation=null,this.targetFlipPosition=null,i())};requestAnimationFrame(o)})),this.currentAnimation)}async efficientFlipToPosition(t,e=2e4){return function(t,e,i){var n,s=i||{},r=s.noTrailing,o=void 0!==r&&r,a=s.noLeading,h=void 0!==a&&a,c=s.debounceMode,u=void 0===c?void 0:c,l=!1,p=0;function f(){n&&clearTimeout(n)}function d(){for(var i=arguments.length,s=new Array(i),r=0;r<i;r++)s[r]=arguments[r];var a=this,c=Date.now()-p;function d(){p=Date.now(),e.apply(a,s)}function v(){n=void 0}l||(h||!u||n||d(),f(),void 0===u&&c>t?h?(p=Date.now(),o||(n=setTimeout(u?v:d,t))):d():!0!==o&&(n=setTimeout(u?v:d,void 0===u?t-c:t)))}return d.cancel=function(t){var e=(t||{}).upcomingOnly,i=void 0!==e&&e;f(),l=!i},d}(1,this.flipToPosition.bind(this))(t,e)}}!function(t){t.Forward=\"Forward\",t.Backward=\"Backward\",t.None=\"None\"}(b||(b={}));class P{width;height;static from(t){return new P(t.width,t.height)}constructor(t,e){this.width=t,this.height=e}get value(){return this.width/this.height}}class x{width;height;aspectRatio;aspectRatioFit(t){const e=P.from(t).value;return this.aspectRatio.value>e?new x(this.height*e,this.height):new x(this.width,this.width/e)}constructor(t,e){this.width=t,this.height=e,this.aspectRatio=new P(t,e)}get asString(){return`${this.width}x${this.height}`}}class D{bookElement;pageElements=[];pagesCount;leafAspectRatio={width:2,height:3};coverAspectRatio={width:2.15,height:3.15};direction=\"ltr\";onPageChanged;pageSemantics;leaves=[];currentLeaf=void 0;flipDirection=b.None;flipStartingPos=0;isDuringManualFlip=!1;flipDelta=0;isDuringAutoFlip=!1;touchStartingPos={x:0,y:0};get isLTR(){return\"ltr\"===this.direction}get isClosed(){return!this.currentOrTurningLeaves[0]}get isClosedInverted(){return!this.currentLeaves[1]}get currentLeaves(){let t=-1;for(let e=this.leaves.length-1;e>=0;e--){const i=this.leaves[e];if(i.isTurned){t=i.index+1;break}}return-1==t?[void 0,this.leaves[0]]:t==this.leaves.length?[this.leaves[t-1],void 0]:[this.leaves[t-1],this.leaves[t]]}get currentOrTurningLeaves(){let t=-1;for(let e=this.leaves.length-1;e>=0;e--){const i=this.leaves[e];if(i.isTurned||i.isTurning){t=i.index+1;break}}return-1==t?[void 0,this.leaves[0]]:t==this.leaves.length?[this.leaves[t-1],void 0]:[this.leaves[t-1],this.leaves[t]]}constructor(t){this.pagesCount=t.pagesCount,this.leafAspectRatio=t.leafAspectRatio||this.leafAspectRatio,this.coverAspectRatio=t.coverAspectRatio||this.coverAspectRatio,this.direction=t.direction||this.direction,this.pageSemantics=t.pageSemantics,this.onPageChanged=t.onPageChanged}render(t,e=!1){const i=document.querySelector(t);if(!i)throw new Error(`Couldn't find container with selector: ${t}`);this.bookElement=i,this.bookElement.classList.contains(\"flipbook\")||this.bookElement.classList.add(\"flipbook\");const n=i.querySelectorAll(\".page\");if(!n.length)throw new Error(\"No pages found in flipbook\");this.pageElements=Array.from(n),this.leaves.splice(0,this.leaves.length);const s=Math.ceil(this.pagesCount/2),r=new x(this.bookElement.clientWidth/2,this.bookElement.clientHeight).aspectRatioFit(this.coverAspectRatio),o=new x(r.width*this.leafAspectRatio.width/this.coverAspectRatio.width,r.height*this.leafAspectRatio.height/this.coverAspectRatio.height);this.bookElement.style.perspective=2*Math.min(2*o.width,o.height)+\"px\",this.pageElements.forEach(((t,e)=>{t.style.width=`${o.width}px`,t.style.height=`${o.height}px`,t.style.zIndex=\"\"+(this.pagesCount-e),t.dataset.pageIndex=e.toString(),t.style[this.isLTR?\"left\":\"right\"]=(i.clientWidth-2*o.width)/2+\"px\",t.style.top=(i.clientHeight-o.height)/2+\"px\",t.dataset.pageSemanticName=this.pageSemantics?.indexToSemanticName(e)??\"\",t.dataset.pageTitle=this.pageSemantics?.indexToTitle(e)??\"\";const n=Math.floor(e/2),r=(e+1)%2==1;t.classList.add(r?\"odd\":\"even\"),r?(t.style.transform=`translateX(${this.isLTR?\"\":\"-\"}100%)`,this.leaves[n]=new A(n,[t,void 0],!1,{isLTR:this.isLTR,leavesCount:s,pagesCount:this.pagesCount})):(t.style.transform=`scaleX(-1)translateX(${this.isLTR?\"-\":\"\"}100%)`,this.leaves[n].pages[1]=t)}));const a=new(w())(this.bookElement);a.on(\"panstart\",this.onDragStart.bind(this)),a.on(\"panmove\",this.onDragUpdate.bind(this)),a.on(\"panend\",this.onDragEnd.bind(this)),this.bookElement.addEventListener(\"touchstart\",this.handleTouchStart.bind(this),{passive:!1}),this.bookElement.addEventListener(\"touchmove\",this.handleTouchMove.bind(this),{passive:!1}),e&&this.fillDebugBar()}fillDebugBar(){const t=document.createElement(\"div\");t.className=\"flipbook-debug-bar\",this.bookElement?.appendChild(t),setInterval((()=>{t.innerHTML=`\\n          <div>Direction: ${this.isLTR?\"LTR\":\"RTL\"}</div>\\n          <div>Current Leaf: ${this.currentLeaf?this.currentLeaf.index:\"None\"}</div>\\n          <div>Flip dir: ${this.flipDirection}</div>\\n          <div>Flip Δ: ${this.flipDelta}</div>\\n          <div>Current Leaf Flip Position: ${this.currentLeaf?.flipPosition.toFixed(3)}</div>\\n          <div>Is During Auto Flip: ${this.isDuringAutoFlip}</div>\\n        `}),10)}onDragStart(t){if(console.log(\"drag start\"),this.currentLeaf||this.isDuringAutoFlip)return this.flipDirection=b.None,void(this.flipStartingPos=0);this.flipStartingPos=t.center.x}onDragUpdate(t){if(console.log(\"drag update\"),!this.isDuringAutoFlip&&!this.isDuringManualFlip){this.isDuringManualFlip=!0;try{const e=t.center.x;this.flipDelta=this.isLTR?this.flipStartingPos-e:e-this.flipStartingPos;const i=this.bookElement?.clientWidth??0;if(Math.abs(this.flipDelta)>i)return;if(0===this.flipDelta)return;switch(this.flipDirection=this.flipDirection!==b.None?this.flipDirection:this.flipDelta>0?b.Forward:b.Backward,this.flipDirection){case b.Forward:const t=this.flipDelta/i;if(t>1||this.flipDelta<0)return;if(!this.currentLeaf){if(this.isClosedInverted)return;this.currentLeaf=this.currentOrTurningLeaves[1]}this.currentLeaf.efficientFlipToPosition(t);break;case b.Backward:const e=1-Math.abs(this.flipDelta)/i;if(e<0||this.flipDelta>0)return;if(!this.currentLeaf){if(this.isClosed)return;this.currentLeaf=this.currentOrTurningLeaves[0]}this.currentLeaf.efficientFlipToPosition(e)}}finally{this.isDuringManualFlip=!1}}}async onDragEnd(t){if(console.log(\"drag end\"),!this.currentLeaf||this.isDuringAutoFlip)return this.flipDirection=b.None,void(this.flipStartingPos=0);const e=1e3*t.velocityX;let i;switch(this.flipDirection){case b.Forward:i=(this.isLTR?e<-500:e>500)||this.currentLeaf.flipPosition>=.5?1:0;break;case b.Backward:i=(this.isLTR?e>500:e<-500)||this.currentLeaf.flipPosition<=.5?0:1;break;default:return}this.isDuringAutoFlip=!0,this.flipDirection=b.None,this.flipStartingPos=0,await this.currentLeaf.flipToPosition(i),this.isDuringAutoFlip=!1,this.currentLeaf=void 0}handleTouchStart=t=>{if(t.touches.length>1)return;const e=t.touches[0];this.touchStartingPos={x:e.pageX,y:e.pageY}};handleTouchMove=t=>{if(t.touches.length>1)return;const e=t.touches[0],i=e.pageX-this.touchStartingPos.x,n=e.pageY-this.touchStartingPos.y;Math.abs(i)>Math.abs(n)&&t.preventDefault()};jumpToPage(t){this.onPageChanged&&this.onPageChanged(t)}}var S=n.$;export{S as FlipBook};","import React, { useEffect, useRef } from \"react\";\r\nimport { FlipBook as FlipBookBase, PageSemantics } from \"flip-book\";\r\n\r\ninterface FlipBookWrapperProps {\r\n  pages: React.ReactNode[];\r\n  className: string;\r\n  pageSemantics?: PageSemantics;\r\n  debug?: boolean;\r\n  direction?: \"rtl\" | \"ltr\"; // Add the direction property to the interface\r\n  // Add any other props that the wrapper might need\r\n}\r\n\r\nconst FlipBookReact: React.FC<FlipBookWrapperProps> = ({\r\n  pages,\r\n  className,\r\n  debug = false,\r\n  direction = \"ltr\", // Add the direction prop\r\n  pageSemantics = undefined,\r\n}) => {\r\n  const flipBook = useRef(\r\n    new FlipBookBase({\r\n      pageSemantics: pageSemantics,\r\n      pagesCount: pages.length,\r\n      direction: direction,\r\n    })\r\n  );\r\n\r\n  useEffect(() => {\r\n    flipBook.current.render(`.${className}`, debug);\r\n    // Do any other necessary setup here\r\n  }, []);\r\n\r\n  return (\r\n    <div className={className}>\r\n      {pages.map((page, index) => (\r\n        <div key={index} className=\"page\">\r\n          {page}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FlipBookReact;\r\n","/**\n * @typedef Options\n *   Configuration for `stringify`.\n * @property {boolean} [padLeft=true]\n *   Whether to pad a space before a token.\n * @property {boolean} [padRight=false]\n *   Whether to pad a space after a token.\n */\n\n/**\n * @typedef {Options} StringifyOptions\n *   Please use `StringifyOptions` instead.\n */\n\n/**\n * Parse comma-separated tokens to an array.\n *\n * @param {string} value\n *   Comma-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  /** @type {Array<string>} */\n  const tokens = []\n  const input = String(value || '')\n  let index = input.indexOf(',')\n  let start = 0\n  /** @type {boolean} */\n  let end = false\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    const token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings or numbers to comma-separated tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @param {Options} [options]\n *   Configuration for `stringify` (optional).\n * @returns {string}\n *   Comma-separated tokens.\n */\nexport function stringify(values, options) {\n  const settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  const input = values[values.length - 1] === '' ? [...values, ''] : values\n\n  return input\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n","/**\n * @typedef Options\n *   Configuration.\n * @property {boolean | null | undefined} [jsx=false]\n *   Support JSX identifiers (default: `false`).\n */\n\nconst startRe = /[$_\\p{ID_Start}]/u\nconst contRe = /[$_\\u{200C}\\u{200D}\\p{ID_Continue}]/u\nconst contReJsx = /[-$_\\u{200C}\\u{200D}\\p{ID_Continue}]/u\nconst nameRe = /^[$_\\p{ID_Start}][$_\\u{200C}\\u{200D}\\p{ID_Continue}]*$/u\nconst nameReJsx = /^[$_\\p{ID_Start}][-$_\\u{200C}\\u{200D}\\p{ID_Continue}]*$/u\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Checks if the given code point can start an identifier.\n *\n * @param {number | undefined} code\n *   Code point to check.\n * @returns {boolean}\n *   Whether `code` can start an identifier.\n */\n// Note: `undefined` is supported so you can pass the result from `''.codePointAt`.\nexport function start(code) {\n  return code ? startRe.test(String.fromCodePoint(code)) : false\n}\n\n/**\n * Checks if the given code point can continue an identifier.\n *\n * @param {number | undefined} code\n *   Code point to check.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {boolean}\n *   Whether `code` can continue an identifier.\n */\n// Note: `undefined` is supported so you can pass the result from `''.codePointAt`.\nexport function cont(code, options) {\n  const settings = options || emptyOptions\n  const re = settings.jsx ? contReJsx : contRe\n  return code ? re.test(String.fromCodePoint(code)) : false\n}\n\n/**\n * Checks if the given value is a valid identifier name.\n *\n * @param {string} name\n *   Identifier to check.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {boolean}\n *   Whether `name` can be an identifier.\n */\nexport function name(name, options) {\n  const settings = options || emptyOptions\n  const re = settings.jsx ? nameReJsx : nameRe\n  return re.test(name)\n}\n","/**\n * @typedef {import('hast').Nodes} Nodes\n */\n\n// HTML whitespace expression.\n// See <https://infra.spec.whatwg.org/#ascii-whitespace>.\nconst re = /[ \\t\\n\\f\\r]/g\n\n/**\n * Check if the given value is *inter-element whitespace*.\n *\n * @param {Nodes | string} thing\n *   Thing to check (`Node` or `string`).\n * @returns {boolean}\n *   Whether the `value` is inter-element whitespace (`boolean`): consisting of\n *   zero or more of space, tab (`\\t`), line feed (`\\n`), carriage return\n *   (`\\r`), or form feed (`\\f`); if a node is passed it must be a `Text` node,\n *   whose `value` field is checked.\n */\nexport function whitespace(thing) {\n  return typeof thing === 'object'\n    ? thing.type === 'text'\n      ? empty(thing.value)\n      : false\n    : empty(thing)\n}\n\n/**\n * @param {string} value\n * @returns {boolean}\n */\nfunction empty(value) {\n  return value.replace(re, '') === ''\n}\n","/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Record<string, Info>} Properties\n * @typedef {Record<string, string>} Normal\n */\n\nexport class Schema {\n  /**\n   * @constructor\n   * @param {Properties} property\n   * @param {Normal} normal\n   * @param {string} [space]\n   */\n  constructor(property, normal, space) {\n    this.property = property\n    this.normal = normal\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\n/** @type {Properties} */\nSchema.prototype.property = {}\n/** @type {Normal} */\nSchema.prototype.normal = {}\n/** @type {string|null} */\nSchema.prototype.space = null\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {Schema[]} definitions\n * @param {string} [space]\n * @returns {Schema}\n */\nexport function merge(definitions, space) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  let index = -1\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property)\n    Object.assign(normal, definitions[index].normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n","/**\n * @param {string} value\n * @returns {string}\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n","export class Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   */\n  constructor(property, attribute) {\n    /** @type {string} */\n    this.property = property\n    /** @type {string} */\n    this.attribute = attribute\n  }\n}\n\n/** @type {string|null} */\nInfo.prototype.space = null\nInfo.prototype.boolean = false\nInfo.prototype.booleanish = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.number = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.spaceSeparated = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.defined = false\n","let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n","import {Info} from './info.js'\nimport * as types from './types.js'\n\n/** @type {Array<keyof types>} */\n// @ts-expect-error: hush.\nconst checks = Object.keys(types)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number|null} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @param {DefinedInfo} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\n    values[key] = value\n  }\n}\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n *\n * @typedef {Record<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Record<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array<string>} [mustUseProperty]\n */\n\nimport {normalize} from '../normalize.js'\nimport {Schema} from './schema.js'\nimport {DefinedInfo} from './defined-info.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Definition} definition\n * @returns {Schema}\n */\nexport function create(definition) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  /** @type {string} */\n  let prop\n\n  for (prop in definition.properties) {\n    if (own.call(definition.properties, prop)) {\n      const value = definition.properties[prop]\n      const info = new DefinedInfo(\n        prop,\n        definition.transform(definition.attributes || {}, prop),\n        value,\n        definition.space\n      )\n\n      if (\n        definition.mustUseProperty &&\n        definition.mustUseProperty.includes(prop)\n      ) {\n        info.mustUseProperty = true\n      }\n\n      property[prop] = info\n\n      normal[normalize(prop)] = prop\n      normal[normalize(info.attribute)] = prop\n    }\n  }\n\n  return new Schema(property, normal, definition.space)\n}\n","import {create} from './util/create.js'\n\nexport const xlink = create({\n  space: 'xlink',\n  transform(_, prop) {\n    return 'xlink:' + prop.slice(5).toLowerCase()\n  },\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n})\n","import {create} from './util/create.js'\n\nexport const xml = create({\n  space: 'xml',\n  transform(_, prop) {\n    return 'xml:' + prop.slice(3).toLowerCase()\n  },\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\n})\n","/**\n * @param {Record<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  space: 'xmlns',\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  transform: caseInsensitiveTransform,\n  properties: {xmlns: null, xmlnsXLink: null}\n})\n","import {booleanish, number, spaceSeparated} from './util/types.js'\nimport {create} from './util/create.js'\n\nexport const aria = create({\n  transform(_, prop) {\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n  },\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n})\n","import {\n  boolean,\n  overloadedBoolean,\n  booleanish,\n  number,\n  spaceSeparated,\n  commaSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const html = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    blocking: spaceSeparated,\n    capture: null,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    fetchPriority: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inert: boolean,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforeMatch: null,\n    onBeforePrint: null,\n    onBeforeToggle: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onScrollEnd: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    popover: null,\n    popoverTarget: null,\n    popoverTargetAction: null,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shadowRootClonable: boolean,\n    shadowRootDelegatesFocus: boolean,\n    shadowRootMode: null,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n    writingSuggestions: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n})\n","import {\n  boolean,\n  number,\n  spaceSeparated,\n  commaSeparated,\n  commaOrSpaceSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseSensitiveTransform} from './util/case-sensitive-transform.js'\n\nexport const svg = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    transformOrigin: 'transform-origin',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    transformOrigin: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n})\n","/**\n * @typedef {import('./util/schema.js').Schema} Schema\n */\n\nimport {normalize} from './normalize.js'\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\n\nconst valid = /^data[-\\w.:]+$/i\nconst dash = /-[a-z]/g\nconst cap = /[A-Z]/g\n\n/**\n * @param {Schema} schema\n * @param {string} value\n * @returns {Info}\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let prop = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","/**\n * `hast` is close to `React`, but differs in a couple of cases.\n *\n * To get a React property from a hast property, check if it is in\n * `hastToReact`, if it is, then use the corresponding value,\n * otherwise, use the hast property.\n *\n * @type {Record<string, string>}\n */\nexport const hastToReact = {\n  classId: 'classID',\n  dataType: 'datatype',\n  itemId: 'itemID',\n  strokeDashArray: 'strokeDasharray',\n  strokeDashOffset: 'strokeDashoffset',\n  strokeLineCap: 'strokeLinecap',\n  strokeLineJoin: 'strokeLinejoin',\n  strokeMiterLimit: 'strokeMiterlimit',\n  typeOf: 'typeof',\n  xLinkActuate: 'xlinkActuate',\n  xLinkArcRole: 'xlinkArcrole',\n  xLinkHref: 'xlinkHref',\n  xLinkRole: 'xlinkRole',\n  xLinkShow: 'xlinkShow',\n  xLinkTitle: 'xlinkTitle',\n  xLinkType: 'xlinkType',\n  xmlnsXLink: 'xmlnsXlink'\n}\n","/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\nimport {merge} from './lib/util/merge.js'\nimport {xlink} from './lib/xlink.js'\nimport {xml} from './lib/xml.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\n\nexport {find} from './lib/find.js'\nexport {hastToReact} from './lib/hast-to-react.js'\nexport {normalize} from './lib/normalize.js'\nexport const html = merge([xml, xlink, xmlns, aria, htmlBase], 'html')\nexport const svg = merge([xml, xlink, xmlns, aria, svgBase], 'svg')\n","/**\n * Parse space-separated tokens to an array of strings.\n *\n * @param {string} value\n *   Space-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated-tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @returns {string}\n *   Space-separated tokens.\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n","// http://www.w3.org/TR/CSS21/grammar.html\n// https://github.com/visionmedia/css-parse/pull/49#issuecomment-30088027\nvar COMMENT_REGEX = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\n\nvar NEWLINE_REGEX = /\\n/g;\nvar WHITESPACE_REGEX = /^\\s*/;\n\n// declaration\nvar PROPERTY_REGEX = /^(\\*?[-#/*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/;\nvar COLON_REGEX = /^:\\s*/;\nvar VALUE_REGEX = /^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};])+)/;\nvar SEMICOLON_REGEX = /^[;\\s]*/;\n\n// https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String/Trim#Polyfill\nvar TRIM_REGEX = /^\\s+|\\s+$/g;\n\n// strings\nvar NEWLINE = '\\n';\nvar FORWARD_SLASH = '/';\nvar ASTERISK = '*';\nvar EMPTY_STRING = '';\n\n// types\nvar TYPE_COMMENT = 'comment';\nvar TYPE_DECLARATION = 'declaration';\n\n/**\n * @param {String} style\n * @param {Object} [options]\n * @return {Object[]}\n * @throws {TypeError}\n * @throws {Error}\n */\nmodule.exports = function (style, options) {\n  if (typeof style !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n\n  if (!style) return [];\n\n  options = options || {};\n\n  /**\n   * Positional.\n   */\n  var lineno = 1;\n  var column = 1;\n\n  /**\n   * Update lineno and column based on `str`.\n   *\n   * @param {String} str\n   */\n  function updatePosition(str) {\n    var lines = str.match(NEWLINE_REGEX);\n    if (lines) lineno += lines.length;\n    var i = str.lastIndexOf(NEWLINE);\n    column = ~i ? str.length - i : column + str.length;\n  }\n\n  /**\n   * Mark position and patch `node.position`.\n   *\n   * @return {Function}\n   */\n  function position() {\n    var start = { line: lineno, column: column };\n    return function (node) {\n      node.position = new Position(start);\n      whitespace();\n      return node;\n    };\n  }\n\n  /**\n   * Store position information for a node.\n   *\n   * @constructor\n   * @property {Object} start\n   * @property {Object} end\n   * @property {undefined|String} source\n   */\n  function Position(start) {\n    this.start = start;\n    this.end = { line: lineno, column: column };\n    this.source = options.source;\n  }\n\n  /**\n   * Non-enumerable source string.\n   */\n  Position.prototype.content = style;\n\n  var errorsList = [];\n\n  /**\n   * Error `msg`.\n   *\n   * @param {String} msg\n   * @throws {Error}\n   */\n  function error(msg) {\n    var err = new Error(\n      options.source + ':' + lineno + ':' + column + ': ' + msg\n    );\n    err.reason = msg;\n    err.filename = options.source;\n    err.line = lineno;\n    err.column = column;\n    err.source = style;\n\n    if (options.silent) {\n      errorsList.push(err);\n    } else {\n      throw err;\n    }\n  }\n\n  /**\n   * Match `re` and return captures.\n   *\n   * @param {RegExp} re\n   * @return {undefined|Array}\n   */\n  function match(re) {\n    var m = re.exec(style);\n    if (!m) return;\n    var str = m[0];\n    updatePosition(str);\n    style = style.slice(str.length);\n    return m;\n  }\n\n  /**\n   * Parse whitespace.\n   */\n  function whitespace() {\n    match(WHITESPACE_REGEX);\n  }\n\n  /**\n   * Parse comments.\n   *\n   * @param {Object[]} [rules]\n   * @return {Object[]}\n   */\n  function comments(rules) {\n    var c;\n    rules = rules || [];\n    while ((c = comment())) {\n      if (c !== false) {\n        rules.push(c);\n      }\n    }\n    return rules;\n  }\n\n  /**\n   * Parse comment.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function comment() {\n    var pos = position();\n    if (FORWARD_SLASH != style.charAt(0) || ASTERISK != style.charAt(1)) return;\n\n    var i = 2;\n    while (\n      EMPTY_STRING != style.charAt(i) &&\n      (ASTERISK != style.charAt(i) || FORWARD_SLASH != style.charAt(i + 1))\n    ) {\n      ++i;\n    }\n    i += 2;\n\n    if (EMPTY_STRING === style.charAt(i - 1)) {\n      return error('End of comment missing');\n    }\n\n    var str = style.slice(2, i - 2);\n    column += 2;\n    updatePosition(str);\n    style = style.slice(i);\n    column += 2;\n\n    return pos({\n      type: TYPE_COMMENT,\n      comment: str\n    });\n  }\n\n  /**\n   * Parse declaration.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function declaration() {\n    var pos = position();\n\n    // prop\n    var prop = match(PROPERTY_REGEX);\n    if (!prop) return;\n    comment();\n\n    // :\n    if (!match(COLON_REGEX)) return error(\"property missing ':'\");\n\n    // val\n    var val = match(VALUE_REGEX);\n\n    var ret = pos({\n      type: TYPE_DECLARATION,\n      property: trim(prop[0].replace(COMMENT_REGEX, EMPTY_STRING)),\n      value: val\n        ? trim(val[0].replace(COMMENT_REGEX, EMPTY_STRING))\n        : EMPTY_STRING\n    });\n\n    // ;\n    match(SEMICOLON_REGEX);\n\n    return ret;\n  }\n\n  /**\n   * Parse declarations.\n   *\n   * @return {Object[]}\n   */\n  function declarations() {\n    var decls = [];\n\n    comments(decls);\n\n    // declarations\n    var decl;\n    while ((decl = declaration())) {\n      if (decl !== false) {\n        decls.push(decl);\n        comments(decls);\n      }\n    }\n\n    return decls;\n  }\n\n  whitespace();\n  return declarations();\n};\n\n/**\n * Trim `str`.\n *\n * @param {String} str\n * @return {String}\n */\nfunction trim(str) {\n  return str ? str.replace(TRIM_REGEX, EMPTY_STRING) : EMPTY_STRING;\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar inline_style_parser_1 = __importDefault(require(\"inline-style-parser\"));\n/**\n * Parses inline style to object.\n *\n * @param style - Inline style.\n * @param iterator - Iterator.\n * @returns - Style object or null.\n *\n * @example Parsing inline style to object:\n *\n * ```js\n * import parse from 'style-to-object';\n * parse('line-height: 42;'); // { 'line-height': '42' }\n * ```\n */\nfunction StyleToObject(style, iterator) {\n    var styleObject = null;\n    if (!style || typeof style !== 'string') {\n        return styleObject;\n    }\n    var declarations = (0, inline_style_parser_1.default)(style);\n    var hasIterator = typeof iterator === 'function';\n    declarations.forEach(function (declaration) {\n        if (declaration.type !== 'declaration') {\n            return;\n        }\n        var property = declaration.property, value = declaration.value;\n        if (hasIterator) {\n            iterator(property, value, declaration);\n        }\n        else if (value) {\n            styleObject = styleObject || {};\n            styleObject[property] = value;\n        }\n    });\n    return styleObject;\n}\nexports.default = StyleToObject;\n//# sourceMappingURL=index.js.map","import StyleToObject from '../cjs/index.js';\n\n// ensure compatibility with rollup umd build\nexport default StyleToObject.default || StyleToObject;\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Get the ending point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointEnd = point('end')\n\n/**\n * Get the starting point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointStart = point('start')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'end' | 'start'} type\n *   Side.\n * @returns\n *   Getter.\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the point info of `node` at a bound side.\n   *\n   * @param {Node | NodeLike | null | undefined} [node]\n   * @returns {Point | undefined}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    if (\n      typeof point.line === 'number' &&\n      point.line > 0 &&\n      typeof point.column === 'number' &&\n      point.column > 0\n    ) {\n      return {\n        line: point.line,\n        column: point.column,\n        offset:\n          typeof point.offset === 'number' && point.offset > -1\n            ? point.offset\n            : undefined\n      }\n    }\n  }\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {Node | NodeLike | null | undefined} [node]\n *   Node.\n * @returns {Position | undefined}\n *   Position.\n */\nexport function position(node) {\n  const start = pointStart(node)\n  const end = pointEnd(node)\n\n  if (start && end) {\n    return {start, end}\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n */\n\n/**\n * Serialize the positional info of a point, position (start and end points),\n * or node.\n *\n * @param {Node | NodeLike | Point | PointLike | Position | PositionLike | null | undefined} [value]\n *   Node, position, or point.\n * @returns {string}\n *   Pretty printed positional info of a node (`string`).\n *\n *   In the format of a range `ls:cs-le:ce` (when given `node` or `position`)\n *   or a point `l:c` (when given `point`), where `l` stands for line, `c` for\n *   column, `s` for `start`, and `e` for end.\n *   An empty string (`''`) is returned if the given value is neither `node`,\n *   `position`, nor `point`.\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point | PointLike | null | undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position | PositionLike | null | undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number | null | undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n *\n * @typedef Options\n *   Configuration.\n * @property {Array<Node> | null | undefined} [ancestors]\n *   Stack of (inclusive) ancestor nodes surrounding the message (optional).\n * @property {Error | null | undefined} [cause]\n *   Original error cause of the message (optional).\n * @property {Point | Position | null | undefined} [place]\n *   Place of message (optional).\n * @property {string | null | undefined} [ruleId]\n *   Category of message (optional, example: `'my-rule'`).\n * @property {string | null | undefined} [source]\n *   Namespace of who sent the message (optional, example: `'my-package'`).\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\n/**\n * Message.\n */\nexport class VFileMessage extends Error {\n  /**\n   * Create a message for `reason`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Options | null | undefined} [options]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | Options | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns\n   *   Instance of `VFileMessage`.\n   */\n  // eslint-disable-next-line complexity\n  constructor(causeOrReason, optionsOrParentOrPlace, origin) {\n    super()\n\n    if (typeof optionsOrParentOrPlace === 'string') {\n      origin = optionsOrParentOrPlace\n      optionsOrParentOrPlace = undefined\n    }\n\n    /** @type {string} */\n    let reason = ''\n    /** @type {Options} */\n    let options = {}\n    let legacyCause = false\n\n    if (optionsOrParentOrPlace) {\n      // Point.\n      if (\n        'line' in optionsOrParentOrPlace &&\n        'column' in optionsOrParentOrPlace\n      ) {\n        options = {place: optionsOrParentOrPlace}\n      }\n      // Position.\n      else if (\n        'start' in optionsOrParentOrPlace &&\n        'end' in optionsOrParentOrPlace\n      ) {\n        options = {place: optionsOrParentOrPlace}\n      }\n      // Node.\n      else if ('type' in optionsOrParentOrPlace) {\n        options = {\n          ancestors: [optionsOrParentOrPlace],\n          place: optionsOrParentOrPlace.position\n        }\n      }\n      // Options.\n      else {\n        options = {...optionsOrParentOrPlace}\n      }\n    }\n\n    if (typeof causeOrReason === 'string') {\n      reason = causeOrReason\n    }\n    // Error.\n    else if (!options.cause && causeOrReason) {\n      legacyCause = true\n      reason = causeOrReason.message\n      options.cause = causeOrReason\n    }\n\n    if (!options.ruleId && !options.source && typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        options.ruleId = origin\n      } else {\n        options.source = origin.slice(0, index)\n        options.ruleId = origin.slice(index + 1)\n      }\n    }\n\n    if (!options.place && options.ancestors && options.ancestors) {\n      const parent = options.ancestors[options.ancestors.length - 1]\n\n      if (parent) {\n        options.place = parent.position\n      }\n    }\n\n    const start =\n      options.place && 'start' in options.place\n        ? options.place.start\n        : options.place\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Stack of ancestor nodes surrounding the message.\n     *\n     * @type {Array<Node> | undefined}\n     */\n    this.ancestors = options.ancestors || undefined\n\n    /**\n     * Original error cause of the message.\n     *\n     * @type {Error | undefined}\n     */\n    this.cause = options.cause || undefined\n\n    /**\n     * Starting column of message.\n     *\n     * @type {number | undefined}\n     */\n    this.column = start ? start.column : undefined\n\n    /**\n     * State of problem.\n     *\n     * * `true` — error, file not usable\n     * * `false` — warning, change may be needed\n     * * `undefined` — change likely not needed\n     *\n     * @type {boolean | null | undefined}\n     */\n    this.fatal = undefined\n\n    /**\n     * Path of a file (used throughout the `VFile` ecosystem).\n     *\n     * @type {string | undefined}\n     */\n    this.file\n\n    // Field from `Error`.\n    /**\n     * Reason for message.\n     *\n     * @type {string}\n     */\n    this.message = reason\n\n    /**\n     * Starting line of error.\n     *\n     * @type {number | undefined}\n     */\n    this.line = start ? start.line : undefined\n\n    // Field from `Error`.\n    /**\n     * Serialized positional info of message.\n     *\n     * On normal errors, this would be something like `ParseError`, buit in\n     * `VFile` messages we use this space to show where an error happened.\n     */\n    this.name = stringifyPosition(options.place) || '1:1'\n\n    /**\n     * Place of message.\n     *\n     * @type {Point | Position | undefined}\n     */\n    this.place = options.place || undefined\n\n    /**\n     * Reason for message, should use markdown.\n     *\n     * @type {string}\n     */\n    this.reason = this.message\n\n    /**\n     * Category of message (example: `'my-rule'`).\n     *\n     * @type {string | undefined}\n     */\n    this.ruleId = options.ruleId || undefined\n\n    /**\n     * Namespace of message (example: `'my-package'`).\n     *\n     * @type {string | undefined}\n     */\n    this.source = options.source || undefined\n\n    // Field from `Error`.\n    /**\n     * Stack of message.\n     *\n     * This is used by normal errors to show where something happened in\n     * programming code, irrelevant for `VFile` messages,\n     *\n     * @type {string}\n     */\n    this.stack =\n      legacyCause && options.cause && typeof options.cause.stack === 'string'\n        ? options.cause.stack\n        : ''\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /**\n     * Specify the source value that’s being reported, which is deemed\n     * incorrect.\n     *\n     * @type {string | undefined}\n     */\n    this.actual\n\n    /**\n     * Suggest acceptable values that can be used instead of `actual`.\n     *\n     * @type {Array<string> | undefined}\n     */\n    this.expected\n\n    /**\n     * Long form description of the message (you should use markdown).\n     *\n     * @type {string | undefined}\n     */\n    this.note\n\n    /**\n     * Link to docs for the message.\n     *\n     * > 👉 **Note**: this must be an absolute URL that can be passed as `x`\n     * > to `new URL(x)`.\n     *\n     * @type {string | undefined}\n     */\n    this.url\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.column = undefined\nVFileMessage.prototype.line = undefined\nVFileMessage.prototype.ancestors = undefined\nVFileMessage.prototype.cause = undefined\nVFileMessage.prototype.fatal = undefined\nVFileMessage.prototype.place = undefined\nVFileMessage.prototype.ruleId = undefined\nVFileMessage.prototype.source = undefined\n","// Register MDX nodes in mdast:\n/// <reference types=\"mdast-util-mdx-expression\" />\n/// <reference types=\"mdast-util-mdx-jsx\" />\n/// <reference types=\"mdast-util-mdxjs-esm\" />\n\n/**\n * @typedef {import('estree').Identifier} Identifier\n * @typedef {import('estree').Literal} Literal\n * @typedef {import('estree').MemberExpression} MemberExpression\n * @typedef {import('estree').Expression} Expression\n * @typedef {import('estree').Program} Program\n *\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Parents} Parents\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Text} Text\n *\n * @typedef {import('mdast-util-mdx-expression').MdxFlowExpressionHast} MdxFlowExpression\n * @typedef {import('mdast-util-mdx-expression').MdxTextExpressionHast} MdxTextExpression\n *\n * @typedef {import('mdast-util-mdx-jsx').MdxJsxFlowElementHast} MdxJsxFlowElement\n * @typedef {import('mdast-util-mdx-jsx').MdxJsxTextElementHast} MdxJsxTextElement\n *\n * @typedef {import('mdast-util-mdxjs-esm').MdxjsEsmHast} MdxjsEsm\n *\n * @typedef {import('property-information').Schema} Schema\n *\n * @typedef {import('unist').Position} Position\n *\n * @typedef {import('./components.js').Components} Components\n */\n\n/**\n * @typedef {JSX.Element | string | null | undefined} Child\n *   Child.\n *\n * @callback Create\n *   Create something in development or production.\n * @param {Nodes} node\n *   hast node.\n * @param {unknown} type\n *   Fragment symbol or tag name.\n * @param {Props} props\n *   Properties and children.\n * @param {string | undefined} key\n *   Key.\n * @returns {JSX.Element}\n *   Result.\n *\n * @callback CreateEvaluater\n *   Create an evaluator that turns ESTree ASTs from embedded MDX into values.\n * @returns {Evaluater}\n *   Evaluater.\n *\n * @typedef {'html' | 'react'} ElementAttributeNameCase\n *   Casing to use for attribute names.\n *\n *   HTML casing is for example `class`, `stroke-linecap`, `xml:lang`.\n *   React casing is for example `className`, `strokeLinecap`, `xmlLang`.\n *\n * @callback EvaluateExpression\n *   Turn an MDX expression into a value.\n * @param {Expression} expression\n *   ESTree expression.\n * @returns {unknown}\n *   Result of expression.\n *\n * @callback EvaluateProgram\n *   Turn an MDX program (export/import statements) into a value.\n * @param {Program} expression\n *   ESTree program.\n * @returns {unknown}\n *   Result of program;\n *   should likely be `undefined` as ESM changes the scope but doesn’t yield\n *   something.\n *\n * @typedef Evaluater\n *   Evaluator that turns ESTree ASTs from embedded MDX into values.\n * @property {EvaluateExpression} evaluateExpression\n *   Evaluate an expression.\n * @property {EvaluateProgram} evaluateProgram\n *   Evaluate a program.\n *\n * @typedef {[string, Value]} Field\n *   Property field.\n *\n * @typedef {unknown} Fragment\n *   Represent the children, typically a symbol.\n *\n * @callback Jsx\n *   Create a production element.\n * @param {unknown} type\n *   Element type: `Fragment` symbol, tag name (`string`), component.\n * @param {Props} props\n *   Element props, `children`, and maybe `node`.\n * @param {string | undefined} [key]\n *   Dynamicly generated key to use.\n * @returns {JSX.Element}\n *   Element from your framework.\n *\n * @callback JsxDev\n *   Create a development element.\n * @param {unknown} type\n *   Element type: `Fragment` symbol, tag name (`string`), component.\n * @param {Props} props\n *   Element props, `children`, and maybe `node`.\n * @param {string | undefined} key\n *   Dynamicly generated key to use.\n * @param {boolean} isStaticChildren\n *   Whether two or more children are passed (in an array), which is whether\n *   `jsxs` or `jsx` would be used.\n * @param {Source} source\n *   Info about source.\n * @param {undefined} self\n *   Nothing (this is used by frameworks that have components, we don’t).\n * @returns {JSX.Element}\n *   Element from your framework.\n *\n * @typedef {{children?: Array<Child> | Child, node?: Element | MdxJsxFlowElement | MdxJsxTextElement | undefined, [prop: string]: Array<Child> | Child | Element | MdxJsxFlowElement | MdxJsxTextElement | Value | undefined}} Props\n *   Properties and children.\n *\n * @typedef RegularFields\n *   Configuration.\n * @property {Partial<Components> | null | undefined} [components]\n *   Components to use (optional).\n * @property {CreateEvaluater | null | undefined} [createEvaluater]\n *   Create an evaluator that turns ESTree ASTs into values (optional).\n * @property {ElementAttributeNameCase | null | undefined} [elementAttributeNameCase='react']\n *   Specify casing to use for attribute names (default: `'react'`).\n * @property {string | null | undefined} [filePath]\n *   File path to the original source file (optional).\n *\n *   Passed in source info to `jsxDEV` when using the automatic runtime with\n *   `development: true`.\n * @property {boolean | null | undefined} [ignoreInvalidStyle=false]\n *   Ignore invalid CSS in `style` props (default: `false`);\n *   the default behavior is to throw an error.\n * @property {boolean | null | undefined} [passKeys=true]\n *   Generate keys to optimize frameworks that support them (default: `true`).\n *\n *   > 👉 **Note**: Solid currently fails if keys are passed.\n * @property {boolean | null | undefined} [passNode=false]\n *   Pass the hast element node to components (default: `false`).\n * @property {Space | null | undefined} [space='html']\n *   Whether `tree` is in the `'html'` or `'svg'` space (default: `'html'`).\n *\n *   When an `<svg>` element is found in the HTML space, this package already\n *   automatically switches to and from the SVG space when entering and exiting\n *   it.\n * @property {StylePropertyNameCase | null | undefined} [stylePropertyNameCase='dom']\n *   Specify casing to use for property names in `style` objects (default:\n *   `'dom'`).\n * @property {boolean | null | undefined} [tableCellAlignToStyle=true]\n *   Turn obsolete `align` props on `td` and `th` into CSS `style` props\n *   (default: `true`).\n *\n * @typedef RuntimeDevelopment\n *   Runtime fields when development is on.\n * @property {Fragment} Fragment\n *   Fragment.\n * @property {true} development\n *   Whether to use `jsxDEV` (when on) or `jsx` and `jsxs` (when off).\n * @property {Jsx | null | undefined} [jsx]\n *   Dynamic JSX (optional).\n * @property {JsxDev} jsxDEV\n *   Development JSX.\n * @property {Jsx | null | undefined} [jsxs]\n *   Static JSX (optional).\n *\n * @typedef RuntimeProduction\n *   Runtime fields when development is off.\n * @property {Fragment} Fragment\n *   Fragment.\n * @property {false | null | undefined} [development]\n *   Whether to use `jsxDEV` (when on) or `jsx` and `jsxs` (when off) (optional).\n * @property {Jsx} jsx\n *   Dynamic JSX.\n * @property {JsxDev | null | undefined} [jsxDEV]\n *   Development JSX (optional).\n * @property {Jsx} jsxs\n *   Static JSX.\n *\n * @typedef RuntimeUnknown\n *   Runtime fields when development might be on or off.\n * @property {Fragment} Fragment\n *   Fragment.\n * @property {boolean} development\n *   Whether to use `jsxDEV` (when on) or `jsx` and `jsxs` (when off).\n * @property {Jsx | null | undefined} [jsx]\n *   Dynamic JSX (optional).\n * @property {JsxDev | null | undefined} [jsxDEV]\n *   Development JSX (optional).\n * @property {Jsx | null | undefined} [jsxs]\n *   Static JSX (optional).\n *\n * @typedef Source\n *   Info about source.\n * @property {number | undefined} columnNumber\n *   Column where thing starts (0-indexed).\n * @property {string | undefined} fileName\n *   Name of source file.\n * @property {number | undefined} lineNumber\n *   Line where thing starts (1-indexed).\n *\n * @typedef {'html' | 'svg'} Space\n *   Namespace.\n *\n *   > 👉 **Note**: hast is not XML.\n *   > It supports SVG as embedded in HTML.\n *   > It does not support the features available in XML.\n *   > Passing SVG might break but fragments of modern SVG should be fine.\n *   > Use `xast` if you need to support SVG as XML.\n *\n * @typedef State\n *   Info passed around.\n * @property {unknown} Fragment\n *   Fragment symbol.\n * @property {Array<Parents>} ancestors\n *   Stack of parents.\n * @property {Partial<Components>} components\n *   Components to swap.\n * @property {Create} create\n *   Create something in development or production.\n * @property {ElementAttributeNameCase} elementAttributeNameCase\n *   Casing to use for attribute names.\n * @property {Evaluater | undefined} evaluater\n *   Evaluator that turns ESTree ASTs into values.\n * @property {string | undefined} filePath\n *   File path.\n * @property {boolean} ignoreInvalidStyle\n *   Ignore invalid CSS in `style` props.\n * @property {boolean} passKeys\n *   Generate keys to optimize frameworks that support them.\n * @property {boolean} passNode\n *   Pass `node` to components.\n * @property {Schema} schema\n *   Current schema.\n * @property {StylePropertyNameCase} stylePropertyNameCase\n *   Casing to use for property names in `style` objects.\n * @property {boolean} tableCellAlignToStyle\n *   Turn obsolete `align` props on `td` and `th` into CSS `style` props.\n *\n * @typedef {Record<string, string>} Style\n *   Style map.\n *\n * @typedef {'css' | 'dom'} StylePropertyNameCase\n *   Casing to use for property names in `style` objects.\n *\n *   CSS casing is for example `background-color` and `-webkit-line-clamp`.\n *   DOM casing is for example `backgroundColor` and `WebkitLineClamp`.\n *\n * @typedef {Style | boolean | number | string} Value\n *   Primitive property value and `Style` map.\n */\n\n/**\n * @typedef {RuntimeDevelopment & RegularFields} Development\n *   Configuration (development).\n * @typedef {Development | Production | Unknown} Options\n *   Configuration.\n * @typedef {RegularFields & RuntimeProduction} Production\n *   Configuration (production).\n * @typedef {RegularFields & RuntimeUnknown} Unknown\n *   Configuration (production or development).\n */\n\nimport {stringify as commas} from 'comma-separated-tokens'\nimport {ok as assert} from 'devlop'\nimport {name as isIdentifierName} from 'estree-util-is-identifier-name'\nimport {whitespace} from 'hast-util-whitespace'\nimport {find, hastToReact, html, svg} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport styleToObject from 'style-to-object'\nimport {pointStart} from 'unist-util-position'\nimport {VFileMessage} from 'vfile-message'\n\nconst own = {}.hasOwnProperty\n\n/** @type {Map<string, number>} */\nconst emptyMap = new Map()\n\nconst cap = /[A-Z]/g\nconst dashSomething = /-([a-z])/g\n\n// `react-dom` triggers a warning for *any* white space in tables.\n// To follow GFM, `mdast-util-to-hast` injects line endings between elements.\n// Other tools might do so too, but they don’t do here, so we remove all of\n// that.\n\n// See: <https://github.com/facebook/react/pull/7081>.\n// See: <https://github.com/facebook/react/pull/7515>.\n// See: <https://github.com/remarkjs/remark-react/issues/64>.\n// See: <https://github.com/rehypejs/rehype-react/pull/29>.\n// See: <https://github.com/rehypejs/rehype-react/pull/32>.\n// See: <https://github.com/rehypejs/rehype-react/pull/45>.\nconst tableElements = new Set(['table', 'tbody', 'thead', 'tfoot', 'tr'])\n\nconst tableCellElement = new Set(['td', 'th'])\n\nconst docs = 'https://github.com/syntax-tree/hast-util-to-jsx-runtime'\n\n/**\n * Transform a hast tree to preact, react, solid, svelte, vue, etc.,\n * with an automatic JSX runtime.\n *\n * @param {Nodes} tree\n *   Tree to transform.\n * @param {Options} options\n *   Configuration (required).\n * @returns {JSX.Element}\n *   JSX element.\n */\n\nexport function toJsxRuntime(tree, options) {\n  if (!options || options.Fragment === undefined) {\n    throw new TypeError('Expected `Fragment` in options')\n  }\n\n  const filePath = options.filePath || undefined\n  /** @type {Create} */\n  let create\n\n  if (options.development) {\n    if (typeof options.jsxDEV !== 'function') {\n      throw new TypeError(\n        'Expected `jsxDEV` in options when `development: true`'\n      )\n    }\n\n    create = developmentCreate(filePath, options.jsxDEV)\n  } else {\n    if (typeof options.jsx !== 'function') {\n      throw new TypeError('Expected `jsx` in production options')\n    }\n\n    if (typeof options.jsxs !== 'function') {\n      throw new TypeError('Expected `jsxs` in production options')\n    }\n\n    create = productionCreate(filePath, options.jsx, options.jsxs)\n  }\n\n  /** @type {State} */\n  const state = {\n    Fragment: options.Fragment,\n    ancestors: [],\n    components: options.components || {},\n    create,\n    elementAttributeNameCase: options.elementAttributeNameCase || 'react',\n    evaluater: options.createEvaluater ? options.createEvaluater() : undefined,\n    filePath,\n    ignoreInvalidStyle: options.ignoreInvalidStyle || false,\n    passKeys: options.passKeys !== false,\n    passNode: options.passNode || false,\n    schema: options.space === 'svg' ? svg : html,\n    stylePropertyNameCase: options.stylePropertyNameCase || 'dom',\n    tableCellAlignToStyle: options.tableCellAlignToStyle !== false\n  }\n\n  const result = one(state, tree, undefined)\n\n  // JSX element.\n  if (result && typeof result !== 'string') {\n    return result\n  }\n\n  // Text node or something that turned into nothing.\n  return state.create(\n    tree,\n    state.Fragment,\n    {children: result || undefined},\n    undefined\n  )\n}\n\n/**\n * Transform a node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Nodes} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction one(state, node, key) {\n  if (node.type === 'element') {\n    return element(state, node, key)\n  }\n\n  if (node.type === 'mdxFlowExpression' || node.type === 'mdxTextExpression') {\n    return mdxExpression(state, node)\n  }\n\n  if (node.type === 'mdxJsxFlowElement' || node.type === 'mdxJsxTextElement') {\n    return mdxJsxElement(state, node, key)\n  }\n\n  if (node.type === 'mdxjsEsm') {\n    return mdxEsm(state, node)\n  }\n\n  if (node.type === 'root') {\n    return root(state, node, key)\n  }\n\n  if (node.type === 'text') {\n    return text(state, node)\n  }\n}\n\n/**\n * Handle element.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Element} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction element(state, node, key) {\n  const parentSchema = state.schema\n  let schema = parentSchema\n\n  if (node.tagName.toLowerCase() === 'svg' && parentSchema.space === 'html') {\n    schema = svg\n    state.schema = schema\n  }\n\n  state.ancestors.push(node)\n\n  const type = findComponentFromName(state, node.tagName, false)\n  const props = createElementProps(state, node)\n  let children = createChildren(state, node)\n\n  if (tableElements.has(node.tagName)) {\n    children = children.filter(function (child) {\n      return typeof child === 'string' ? !whitespace(child) : true\n    })\n  }\n\n  addNode(state, props, type, node)\n  addChildren(props, children)\n\n  // Restore.\n  state.ancestors.pop()\n  state.schema = parentSchema\n\n  return state.create(node, type, props, key)\n}\n\n/**\n * Handle MDX expression.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxFlowExpression | MdxTextExpression} node\n *   Current node.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction mdxExpression(state, node) {\n  if (node.data && node.data.estree && state.evaluater) {\n    const program = node.data.estree\n    const expression = program.body[0]\n    assert(expression.type === 'ExpressionStatement')\n\n    // Assume result is a child.\n    return /** @type {Child | undefined} */ (\n      state.evaluater.evaluateExpression(expression.expression)\n    )\n  }\n\n  crashEstree(state, node.position)\n}\n\n/**\n * Handle MDX ESM.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxjsEsm} node\n *   Current node.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction mdxEsm(state, node) {\n  if (node.data && node.data.estree && state.evaluater) {\n    // Assume result is a child.\n    return /** @type {Child | undefined} */ (\n      state.evaluater.evaluateProgram(node.data.estree)\n    )\n  }\n\n  crashEstree(state, node.position)\n}\n\n/**\n * Handle MDX JSX.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxJsxFlowElement | MdxJsxTextElement} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction mdxJsxElement(state, node, key) {\n  const parentSchema = state.schema\n  let schema = parentSchema\n\n  if (node.name === 'svg' && parentSchema.space === 'html') {\n    schema = svg\n    state.schema = schema\n  }\n\n  state.ancestors.push(node)\n\n  const type =\n    node.name === null\n      ? state.Fragment\n      : findComponentFromName(state, node.name, true)\n  const props = createJsxElementProps(state, node)\n  const children = createChildren(state, node)\n\n  addNode(state, props, type, node)\n  addChildren(props, children)\n\n  // Restore.\n  state.ancestors.pop()\n  state.schema = parentSchema\n\n  return state.create(node, type, props, key)\n}\n\n/**\n * Handle root.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Root} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction root(state, node, key) {\n  /** @type {Props} */\n  const props = {}\n\n  addChildren(props, createChildren(state, node))\n\n  return state.create(node, state.Fragment, props, key)\n}\n\n/**\n * Handle text.\n *\n * @param {State} _\n *   Info passed around.\n * @param {Text} node\n *   Current node.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction text(_, node) {\n  return node.value\n}\n\n/**\n * Add `node` to props.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Props} props\n *   Props.\n * @param {unknown} type\n *   Type.\n * @param {Element | MdxJsxFlowElement | MdxJsxTextElement} node\n *   Node.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addNode(state, props, type, node) {\n  // If this is swapped out for a component:\n  if (typeof type !== 'string' && type !== state.Fragment && state.passNode) {\n    props.node = node\n  }\n}\n\n/**\n * Add children to props.\n *\n * @param {Props} props\n *   Props.\n * @param {Array<Child>} children\n *   Children.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addChildren(props, children) {\n  if (children.length > 0) {\n    const value = children.length > 1 ? children : children[0]\n\n    if (value) {\n      props.children = value\n    }\n  }\n}\n\n/**\n * @param {string | undefined} _\n *   Path to file.\n * @param {Jsx} jsx\n *   Dynamic.\n * @param {Jsx} jsxs\n *   Static.\n * @returns {Create}\n *   Create a production element.\n */\nfunction productionCreate(_, jsx, jsxs) {\n  return create\n  /** @type {Create} */\n  function create(_, type, props, key) {\n    // Only an array when there are 2 or more children.\n    const isStaticChildren = Array.isArray(props.children)\n    const fn = isStaticChildren ? jsxs : jsx\n    return key ? fn(type, props, key) : fn(type, props)\n  }\n}\n\n/**\n * @param {string | undefined} filePath\n *   Path to file.\n * @param {JsxDev} jsxDEV\n *   Development.\n * @returns {Create}\n *   Create a development element.\n */\nfunction developmentCreate(filePath, jsxDEV) {\n  return create\n  /** @type {Create} */\n  function create(node, type, props, key) {\n    // Only an array when there are 2 or more children.\n    const isStaticChildren = Array.isArray(props.children)\n    const point = pointStart(node)\n    return jsxDEV(\n      type,\n      props,\n      key,\n      isStaticChildren,\n      {\n        columnNumber: point ? point.column - 1 : undefined,\n        fileName: filePath,\n        lineNumber: point ? point.line : undefined\n      },\n      undefined\n    )\n  }\n}\n\n/**\n * Create props from an element.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Element} node\n *   Current element.\n * @returns {Props}\n *   Props.\n */\nfunction createElementProps(state, node) {\n  /** @type {Props} */\n  const props = {}\n  /** @type {string | undefined} */\n  let alignValue\n  /** @type {string} */\n  let prop\n\n  for (prop in node.properties) {\n    if (prop !== 'children' && own.call(node.properties, prop)) {\n      const result = createProperty(state, prop, node.properties[prop])\n\n      if (result) {\n        const [key, value] = result\n\n        if (\n          state.tableCellAlignToStyle &&\n          key === 'align' &&\n          typeof value === 'string' &&\n          tableCellElement.has(node.tagName)\n        ) {\n          alignValue = value\n        } else {\n          props[key] = value\n        }\n      }\n    }\n  }\n\n  if (alignValue) {\n    // Assume style is an object.\n    const style = /** @type {Style} */ (props.style || (props.style = {}))\n    style[state.stylePropertyNameCase === 'css' ? 'text-align' : 'textAlign'] =\n      alignValue\n  }\n\n  return props\n}\n\n/**\n * Create props from a JSX element.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxJsxFlowElement | MdxJsxTextElement} node\n *   Current JSX element.\n * @returns {Props}\n *   Props.\n */\nfunction createJsxElementProps(state, node) {\n  /** @type {Props} */\n  const props = {}\n\n  for (const attribute of node.attributes) {\n    if (attribute.type === 'mdxJsxExpressionAttribute') {\n      if (attribute.data && attribute.data.estree && state.evaluater) {\n        const program = attribute.data.estree\n        const expression = program.body[0]\n        assert(expression.type === 'ExpressionStatement')\n        const objectExpression = expression.expression\n        assert(objectExpression.type === 'ObjectExpression')\n        const property = objectExpression.properties[0]\n        assert(property.type === 'SpreadElement')\n\n        Object.assign(\n          props,\n          state.evaluater.evaluateExpression(property.argument)\n        )\n      } else {\n        crashEstree(state, node.position)\n      }\n    } else {\n      // For JSX, the author is responsible of passing in the correct values.\n      const name = attribute.name\n      /** @type {unknown} */\n      let value\n\n      if (attribute.value && typeof attribute.value === 'object') {\n        if (\n          attribute.value.data &&\n          attribute.value.data.estree &&\n          state.evaluater\n        ) {\n          const program = attribute.value.data.estree\n          const expression = program.body[0]\n          assert(expression.type === 'ExpressionStatement')\n          value = state.evaluater.evaluateExpression(expression.expression)\n        } else {\n          crashEstree(state, node.position)\n        }\n      } else {\n        value = attribute.value === null ? true : attribute.value\n      }\n\n      // Assume a prop.\n      props[name] = /** @type {Props[keyof Props]} */ (value)\n    }\n  }\n\n  return props\n}\n\n/**\n * Create children.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Parents} node\n *   Current element.\n * @returns {Array<Child>}\n *   Children.\n */\nfunction createChildren(state, node) {\n  /** @type {Array<Child>} */\n  const children = []\n  let index = -1\n  /** @type {Map<string, number>} */\n  // Note: test this when Solid doesn’t want to merge my upcoming PR.\n  /* c8 ignore next */\n  const countsByName = state.passKeys ? new Map() : emptyMap\n\n  while (++index < node.children.length) {\n    const child = node.children[index]\n    /** @type {string | undefined} */\n    let key\n\n    if (state.passKeys) {\n      const name =\n        child.type === 'element'\n          ? child.tagName\n          : child.type === 'mdxJsxFlowElement' ||\n              child.type === 'mdxJsxTextElement'\n            ? child.name\n            : undefined\n\n      if (name) {\n        const count = countsByName.get(name) || 0\n        key = name + '-' + count\n        countsByName.set(name, count + 1)\n      }\n    }\n\n    const result = one(state, child, key)\n    if (result !== undefined) children.push(result)\n  }\n\n  return children\n}\n\n/**\n * Handle a property.\n *\n * @param {State} state\n *   Info passed around.\n * @param {string} prop\n *   Key.\n * @param {Array<number | string> | boolean | number | string | null | undefined} value\n *   hast property value.\n * @returns {Field | undefined}\n *   Field for runtime, optional.\n */\nfunction createProperty(state, prop, value) {\n  const info = find(state.schema, prop)\n\n  // Ignore nullish and `NaN` values.\n  if (\n    value === null ||\n    value === undefined ||\n    (typeof value === 'number' && Number.isNaN(value))\n  ) {\n    return\n  }\n\n  if (Array.isArray(value)) {\n    // Accept `array`.\n    // Most props are space-separated.\n    value = info.commaSeparated ? commas(value) : spaces(value)\n  }\n\n  // React only accepts `style` as object.\n  if (info.property === 'style') {\n    let styleObject =\n      typeof value === 'object' ? value : parseStyle(state, String(value))\n\n    if (state.stylePropertyNameCase === 'css') {\n      styleObject = transformStylesToCssCasing(styleObject)\n    }\n\n    return ['style', styleObject]\n  }\n\n  return [\n    state.elementAttributeNameCase === 'react' && info.space\n      ? hastToReact[info.property] || info.property\n      : info.attribute,\n    value\n  ]\n}\n\n/**\n * Parse a CSS declaration to an object.\n *\n * @param {State} state\n *   Info passed around.\n * @param {string} value\n *   CSS declarations.\n * @returns {Style}\n *   Properties.\n * @throws\n *   Throws `VFileMessage` when CSS cannot be parsed.\n */\nfunction parseStyle(state, value) {\n  /** @type {Style} */\n  const result = {}\n\n  try {\n    // @ts-expect-error: `style-to-object` types are broken.\n    styleToObject(value, replacer)\n  } catch (error) {\n    if (!state.ignoreInvalidStyle) {\n      const cause = /** @type {Error} */ (error)\n      const message = new VFileMessage('Cannot parse `style` attribute', {\n        ancestors: state.ancestors,\n        cause,\n        ruleId: 'style',\n        source: 'hast-util-to-jsx-runtime'\n      })\n      message.file = state.filePath || undefined\n      message.url = docs + '#cannot-parse-style-attribute'\n\n      throw message\n    }\n  }\n\n  return result\n\n  /**\n   * Add a CSS property (normal, so with dashes) to `result` as a DOM CSS\n   * property.\n   *\n   * @param {string} name\n   *   Key.\n   * @param {string} value\n   *   Value\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function replacer(name, value) {\n    let key = name\n\n    if (key.slice(0, 2) !== '--') {\n      if (key.slice(0, 4) === '-ms-') key = 'ms-' + key.slice(4)\n      key = key.replace(dashSomething, toCamel)\n    }\n\n    result[key] = value\n  }\n}\n\n/**\n * Create a JSX name from a string.\n *\n * @param {State} state\n *   To do.\n * @param {string} name\n *   Name.\n * @param {boolean} allowExpression\n *   Allow member expressions and identifiers.\n * @returns {unknown}\n *   To do.\n */\nfunction findComponentFromName(state, name, allowExpression) {\n  /** @type {Identifier | Literal | MemberExpression} */\n  let result\n\n  if (!allowExpression) {\n    result = {type: 'Literal', value: name}\n  } else if (name.includes('.')) {\n    const identifiers = name.split('.')\n    let index = -1\n    /** @type {Identifier | Literal | MemberExpression | undefined} */\n    let node\n\n    while (++index < identifiers.length) {\n      /** @type {Identifier | Literal} */\n      const prop = isIdentifierName(identifiers[index])\n        ? {type: 'Identifier', name: identifiers[index]}\n        : {type: 'Literal', value: identifiers[index]}\n      node = node\n        ? {\n            type: 'MemberExpression',\n            object: node,\n            property: prop,\n            computed: Boolean(index && prop.type === 'Literal'),\n            optional: false\n          }\n        : prop\n    }\n\n    assert(node, 'always a result')\n    result = node\n  } else {\n    result =\n      isIdentifierName(name) && !/^[a-z]/.test(name)\n        ? {type: 'Identifier', name}\n        : {type: 'Literal', value: name}\n  }\n\n  // Only literals can be passed in `components` currently.\n  // No identifiers / member expressions.\n  if (result.type === 'Literal') {\n    const name = /** @type {keyof JSX.IntrinsicElements} */ (result.value)\n\n    return own.call(state.components, name) ? state.components[name] : name\n  }\n\n  // Assume component.\n  if (state.evaluater) {\n    return state.evaluater.evaluateExpression(result)\n  }\n\n  crashEstree(state)\n}\n\n/**\n * @param {State} state\n * @param {Position | undefined} [place]\n * @returns {never}\n */\nfunction crashEstree(state, place) {\n  const message = new VFileMessage(\n    'Cannot handle MDX estrees without `createEvaluater`',\n    {\n      ancestors: state.ancestors,\n      place,\n      ruleId: 'mdx-estree',\n      source: 'hast-util-to-jsx-runtime'\n    }\n  )\n  message.file = state.filePath || undefined\n  message.url = docs + '#cannot-handle-mdx-estrees-without-createevaluater'\n\n  throw message\n}\n\n/**\n * Transform a DOM casing style object to a CSS casing style object.\n *\n * @param {Style} domCasing\n * @returns {Style}\n */\nfunction transformStylesToCssCasing(domCasing) {\n  /** @type {Style} */\n  const cssCasing = {}\n  /** @type {string} */\n  let from\n\n  for (from in domCasing) {\n    if (own.call(domCasing, from)) {\n      cssCasing[transformStyleToCssCasing(from)] = domCasing[from]\n    }\n  }\n\n  return cssCasing\n}\n\n/**\n * Transform a DOM casing style field to a CSS casing style field.\n *\n * @param {string} from\n * @returns {string}\n */\nfunction transformStyleToCssCasing(from) {\n  let to = from.replace(cap, toDash)\n  // Handle `ms-xxx` -> `-ms-xxx`.\n  if (to.slice(0, 3) === 'ms-') to = '-' + to\n  return to\n}\n\n/**\n * Make `$1` capitalized.\n *\n * @param {string} _\n *   Whatever.\n * @param {string} $1\n *   Single ASCII alphabetical.\n * @returns {string}\n *   Capitalized `$1`.\n */\nfunction toCamel(_, $1) {\n  return $1.toUpperCase()\n}\n\n/**\n * Make `$0` dash cased.\n *\n * @param {string} $0\n *   Capitalized ASCII leter.\n * @returns {string}\n *   Dash and lower letter.\n */\nfunction toDash($0) {\n  return '-' + $0.toLowerCase()\n}\n","/**\n * HTML URL properties.\n *\n * Each key is a property name and each value is a list of tag names it applies\n * to or `null` if it applies to all elements.\n *\n * @type {Record<string, Array<string> | null>}\n */\nexport const urlAttributes = {\n  action: ['form'],\n  cite: ['blockquote', 'del', 'ins', 'q'],\n  data: ['object'],\n  formAction: ['button', 'input'],\n  href: ['a', 'area', 'base', 'link'],\n  icon: ['menuitem'],\n  itemId: null,\n  manifest: ['html'],\n  ping: ['a', 'area'],\n  poster: ['video'],\n  src: [\n    'audio',\n    'embed',\n    'iframe',\n    'img',\n    'input',\n    'script',\n    'source',\n    'track',\n    'video'\n  ]\n}\n","/**\n * @typedef {import('mdast').Nodes} Nodes\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [includeImageAlt=true]\n *   Whether to use `alt` for `image`s (default: `true`).\n * @property {boolean | null | undefined} [includeHtml=true]\n *   Whether to use `value` of HTML (default: `true`).\n */\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Get the text content of a node or list of nodes.\n *\n * Prefers the node’s plain-text fields, otherwise serializes its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} [value]\n *   Thing to serialize, typically `Node`.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Serialized `value`.\n */\nexport function toString(value, options) {\n  const settings = options || emptyOptions\n  const includeImageAlt =\n    typeof settings.includeImageAlt === 'boolean'\n      ? settings.includeImageAlt\n      : true\n  const includeHtml =\n    typeof settings.includeHtml === 'boolean' ? settings.includeHtml : true\n\n  return one(value, includeImageAlt, includeHtml)\n}\n\n/**\n * One node or several nodes.\n *\n * @param {unknown} value\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(value, includeImageAlt, includeHtml) {\n  if (node(value)) {\n    if ('value' in value) {\n      return value.type === 'html' && !includeHtml ? '' : value.value\n    }\n\n    if (includeImageAlt && 'alt' in value && value.alt) {\n      return value.alt\n    }\n\n    if ('children' in value) {\n      return all(value.children, includeImageAlt, includeHtml)\n    }\n  }\n\n  if (Array.isArray(value)) {\n    return all(value, includeImageAlt, includeHtml)\n  }\n\n  return ''\n}\n\n/**\n * Serialize a list of nodes.\n *\n * @param {Array<unknown>} values\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized nodes.\n */\nfunction all(values, includeImageAlt, includeHtml) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt, includeHtml)\n  }\n\n  return result.join('')\n}\n\n/**\n * Check if `value` looks like a node.\n *\n * @param {unknown} value\n *   Thing.\n * @returns {value is Nodes}\n *   Whether `value` is a node.\n */\nfunction node(value) {\n  return Boolean(value && typeof value === 'object')\n}\n","/// <reference lib=\"dom\" />\n\n/* eslint-env browser */\n\nconst element = document.createElement('i')\n\n/**\n * @param {string} value\n * @returns {string|false}\n */\nexport function decodeNamedCharacterReference(value) {\n  const characterReference = '&' + value + ';'\n  element.innerHTML = characterReference\n  const char = element.textContent\n\n  // Some named character references do not require the closing semicolon\n  // (`&not`, for instance), which leads to situations where parsing the assumed\n  // named reference of `&notit;` will result in the string `¬it;`.\n  // When we encounter a trailing semicolon after parsing, and the character\n  // reference to decode was not a semicolon (`&semi;`), we can assume that the\n  // matching was not complete.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  if (char.charCodeAt(char.length - 1) === 59 /* `;` */ && value !== 'semi') {\n    return false\n  }\n\n  // If the decoded string is equal to the input, the character reference was\n  // not valid.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  return char === characterReference ? false : char\n}\n","/**\n * Like `Array#splice`, but smarter for giant arrays.\n *\n * `Array#splice` takes all items to be inserted as individual argument which\n * causes a stack overflow in V8 when trying to insert 100k items for instance.\n *\n * Otherwise, this does not return the removed items, and takes `items` as an\n * array instead of rest parameters.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {number} start\n *   Index to remove/insert at (can be negative).\n * @param {number} remove\n *   Number of items to remove.\n * @param {Array<T>} items\n *   Items to inject into `list`.\n * @returns {undefined}\n *   Nothing.\n */\nexport function splice(list, start, remove, items) {\n  const end = list.length\n  let chunkStart = 0\n  /** @type {Array<unknown>} */\n  let parameters\n\n  // Make start between zero and `end` (included).\n  if (start < 0) {\n    start = -start > end ? 0 : end + start\n  } else {\n    start = start > end ? end : start\n  }\n  remove = remove > 0 ? remove : 0\n\n  // No need to chunk the items if there’s only a couple (10k) items.\n  if (items.length < 10000) {\n    parameters = Array.from(items)\n    parameters.unshift(start, remove)\n    // @ts-expect-error Hush, it’s fine.\n    list.splice(...parameters)\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) list.splice(start, remove)\n\n    // Insert the items in chunks to not cause stack overflows.\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000)\n      parameters.unshift(start, 0)\n      // @ts-expect-error Hush, it’s fine.\n      list.splice(...parameters)\n      chunkStart += 10000\n      start += 10000\n    }\n  }\n}\n\n/**\n * Append `items` (an array) at the end of `list` (another array).\n * When `list` was empty, returns `items` instead.\n *\n * This prevents a potentially expensive operation when `list` is empty,\n * and adds items in batches to prevent V8 from hanging.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {Array<T>} items\n *   Items to add to `list`.\n * @returns {Array<T>}\n *   Either `list` or `items`.\n */\nexport function push(list, items) {\n  if (list.length > 0) {\n    splice(list, list.length, 0, items)\n    return list\n  }\n  return items\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Handles} Handles\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n * @typedef {import('micromark-util-types').NormalizedExtension} NormalizedExtension\n */\n\nimport {splice} from 'micromark-util-chunked'\n\nconst hasOwnProperty = {}.hasOwnProperty\n\n/**\n * Combine multiple syntax extensions into one.\n *\n * @param {Array<Extension>} extensions\n *   List of syntax extensions.\n * @returns {NormalizedExtension}\n *   A single combined extension.\n */\nexport function combineExtensions(extensions) {\n  /** @type {NormalizedExtension} */\n  const all = {}\n  let index = -1\n\n  while (++index < extensions.length) {\n    syntaxExtension(all, extensions[index])\n  }\n\n  return all\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {NormalizedExtension} all\n *   Extension to merge into.\n * @param {Extension} extension\n *   Extension to merge.\n * @returns {undefined}\n */\nfunction syntaxExtension(all, extension) {\n  /** @type {keyof Extension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    /** @type {Record<string, unknown>} */\n    const left = maybe || (all[hook] = {})\n    /** @type {Record<string, unknown> | undefined} */\n    const right = extension[hook]\n    /** @type {string} */\n    let code\n\n    if (right) {\n      for (code in right) {\n        if (!hasOwnProperty.call(left, code)) left[code] = []\n        const value = right[code]\n        constructs(\n          // @ts-expect-error Looks like a list.\n          left[code],\n          Array.isArray(value) ? value : value ? [value] : []\n        )\n      }\n    }\n  }\n}\n\n/**\n * Merge `list` into `existing` (both lists of constructs).\n * Mutates `existing`.\n *\n * @param {Array<unknown>} existing\n * @param {Array<unknown>} list\n * @returns {undefined}\n */\nfunction constructs(existing, list) {\n  let index = -1\n  /** @type {Array<unknown>} */\n  const before = []\n\n  while (++index < list.length) {\n    // @ts-expect-error Looks like an object.\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  splice(existing, 0, 0, before)\n}\n\n/**\n * Combine multiple HTML extensions into one.\n *\n * @param {Array<HtmlExtension>} htmlExtensions\n *   List of HTML extensions.\n * @returns {HtmlExtension}\n *   A single combined HTML extension.\n */\nexport function combineHtmlExtensions(htmlExtensions) {\n  /** @type {HtmlExtension} */\n  const handlers = {}\n  let index = -1\n\n  while (++index < htmlExtensions.length) {\n    htmlExtension(handlers, htmlExtensions[index])\n  }\n\n  return handlers\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {HtmlExtension} all\n *   Extension to merge into.\n * @param {HtmlExtension} extension\n *   Extension to merge.\n * @returns {undefined}\n */\nfunction htmlExtension(all, extension) {\n  /** @type {keyof HtmlExtension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {keyof Handles} */\n    let type\n\n    if (right) {\n      for (type in right) {\n        // @ts-expect-error assume document vs regular handler are managed correctly.\n        left[type] = right[type]\n      }\n    }\n  }\n}\n","/**\n * Turn the number (in string form as either hexa- or plain decimal) coming from\n * a numeric character reference into a character.\n *\n * Sort of like `String.fromCodePoint(Number.parseInt(value, base))`, but makes\n * non-characters and control characters safe.\n *\n * @param {string} value\n *   Value to decode.\n * @param {number} base\n *   Numeric base.\n * @returns {string}\n *   Character.\n */\nexport function decodeNumericCharacterReference(value, base) {\n  const code = Number.parseInt(value, base);\n  if (\n  // C0 except for HT, LF, FF, CR, space.\n  code < 9 || code === 11 || code > 13 && code < 32 ||\n  // Control character (DEL) of C0, and C1 controls.\n  code > 126 && code < 160 ||\n  // Lone high surrogates and low surrogates.\n  code > 55_295 && code < 57_344 ||\n  // Noncharacters.\n  code > 64_975 && code < 65_008 || /* eslint-disable no-bitwise */\n  (code & 65_535) === 65_535 || (code & 65_535) === 65_534 || /* eslint-enable no-bitwise */\n  // Out of range\n  code > 1_114_111) {\n    return \"\\uFFFD\";\n  }\n  return String.fromCodePoint(code);\n}","/**\n * Normalize an identifier (as found in references, definitions).\n *\n * Collapses markdown whitespace, trim, and then lower- and uppercase.\n *\n * Some characters are considered “uppercase”, such as U+03F4 (`ϴ`), but if their\n * lowercase counterpart (U+03B8 (`θ`)) is uppercased will result in a different\n * uppercase character (U+0398 (`Θ`)).\n * So, to get a canonical form, we perform both lower- and uppercase.\n *\n * Using uppercase last makes sure keys will never interact with default\n * prototypal values (such as `constructor`): nothing in the prototype of\n * `Object` is uppercase.\n *\n * @param {string} value\n *   Identifier to normalize.\n * @returns {string}\n *   Normalized identifier.\n */\nexport function normalizeIdentifier(value) {\n  return (\n    value\n      // Collapse markdown whitespace.\n      .replace(/[\\t\\n\\r ]+/g, ' ')\n      // Trim.\n      .replace(/^ | $/g, '')\n      // Some characters are considered “uppercase”, but if their lowercase\n      // counterpart is uppercased will result in a different uppercase\n      // character.\n      // Hence, to get that form, we perform both lower- and uppercase.\n      // Upper case makes sure keys will not interact with default prototypal\n      // methods: no method is uppercase.\n      .toLowerCase()\n      .toUpperCase()\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlpha = regexCheck(/[A-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/);\n\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  );\n}\n\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiDigit = regexCheck(/\\d/);\n\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/);\n\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/);\n\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2;\n}\n\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32);\n}\n\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32;\n}\n\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodePunctuation = regexCheck(/\\p{P}|\\p{S}/u);\n\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodeWhitespace = regexCheck(/\\s/);\n\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => boolean}\n */\nfunction regexCheck(regex) {\n  return check;\n\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code\n   *   Character code.\n   * @returns {boolean}\n   *   Whether the character code matches the bound regex.\n   */\n  function check(code) {\n    return code !== null && code > -1 && regex.test(String.fromCharCode(code));\n  }\n}","import {asciiAlphanumeric} from 'micromark-util-character'\nimport {encode} from 'micromark-util-encode'\n/**\n * Make a value safe for injection as a URL.\n *\n * This encodes unsafe characters with percent-encoding and skips already\n * encoded sequences (see `normalizeUri`).\n * Further unsafe characters are encoded as character references (see\n * `micromark-util-encode`).\n *\n * A regex of allowed protocols can be given, in which case the URL is\n * sanitized.\n * For example, `/^(https?|ircs?|mailto|xmpp)$/i` can be used for `a[href]`, or\n * `/^https?$/i` for `img[src]` (this is what `github.com` allows).\n * If the URL includes an unknown protocol (one not matched by `protocol`, such\n * as a dangerous example, `javascript:`), the value is ignored.\n *\n * @param {string | null | undefined} url\n *   URI to sanitize.\n * @param {RegExp | null | undefined} [protocol]\n *   Allowed protocols.\n * @returns {string}\n *   Sanitized URI.\n */\nexport function sanitizeUri(url, protocol) {\n  const value = encode(normalizeUri(url || ''))\n  if (!protocol) {\n    return value\n  }\n  const colon = value.indexOf(':')\n  const questionMark = value.indexOf('?')\n  const numberSign = value.indexOf('#')\n  const slash = value.indexOf('/')\n  if (\n    // If there is no protocol, it’s relative.\n    colon < 0 ||\n    // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash > -1 && colon > slash) ||\n    (questionMark > -1 && colon > questionMark) ||\n    (numberSign > -1 && colon > numberSign) ||\n    // It is a protocol, it should be allowed.\n    protocol.test(value.slice(0, colon))\n  ) {\n    return value\n  }\n  return ''\n}\n\n/**\n * Normalize a URL.\n *\n * Encode unsafe characters with percent-encoding, skipping already encoded\n * sequences.\n *\n * @param {string} value\n *   URI to normalize.\n * @returns {string}\n *   Normalized URI.\n */\nexport function normalizeUri(value) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n  let start = 0\n  let skip = 0\n  while (++index < value.length) {\n    const code = value.charCodeAt(index)\n    /** @type {string} */\n    let replace = ''\n\n    // A correct percent encoded value.\n    if (\n      code === 37 &&\n      asciiAlphanumeric(value.charCodeAt(index + 1)) &&\n      asciiAlphanumeric(value.charCodeAt(index + 2))\n    ) {\n      skip = 2\n    }\n    // ASCII.\n    else if (code < 128) {\n      if (!/[!#$&-;=?-Z_a-z~]/.test(String.fromCharCode(code))) {\n        replace = String.fromCharCode(code)\n      }\n    }\n    // Astral.\n    else if (code > 55_295 && code < 57_344) {\n      const next = value.charCodeAt(index + 1)\n\n      // A correct surrogate pair.\n      if (code < 56_320 && next > 56_319 && next < 57_344) {\n        replace = String.fromCharCode(code, next)\n        skip = 1\n      }\n      // Lone surrogate.\n      else {\n        replace = '\\uFFFD'\n      }\n    }\n    // Unicode.\n    else {\n      replace = String.fromCharCode(code)\n    }\n    if (replace) {\n      result.push(value.slice(start, index), encodeURIComponent(replace))\n      start = index + skip + 1\n      replace = ''\n    }\n    if (skip) {\n      index += skip\n      skip = 0\n    }\n  }\n  return result.join('') + value.slice(start)\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {markdownSpace} from 'micromark-util-character'\n\n// To do: implement `spaceOrTab`, `spaceOrTabMinMax`, `spaceOrTabWithOptions`.\n\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   spaces in markdown are often optional, in which case this factory can be\n *     used and `ok` will be switched to whether spaces were found or not\n * *   one line ending or space can be detected with `markdownSpace(code)` right\n *     before using `factorySpace`\n *\n * ###### Examples\n *\n * Where `␉` represents a tab (plus how much it expands) and `␠` represents a\n * single space.\n *\n * ```markdown\n * ␉\n * ␠␠␠␠\n * ␉␠\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {TokenType} type\n *   Type (`' \\t'`).\n * @param {number | undefined} [max=Infinity]\n *   Max (exclusive).\n * @returns {State}\n *   Start state.\n */\nexport function factorySpace(effects, ok, type, max) {\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY\n  let size = 0\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type)\n      return prefix(code)\n    }\n    return ok(code)\n  }\n\n  /** @type {State} */\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code)\n      return prefix\n    }\n    effects.exit(type)\n    return ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {InitialConstruct} */\nexport const content = {\n  tokenize: initializeContent\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Initializer}\n */\nfunction initializeContent(effects) {\n  const contentStart = effects.attempt(\n    this.parser.constructs.contentInitial,\n    afterContentStartConstruct,\n    paragraphInitial\n  )\n  /** @type {Token} */\n  let previous\n  return contentStart\n\n  /** @type {State} */\n  function afterContentStartConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, contentStart, 'linePrefix')\n  }\n\n  /** @type {State} */\n  function paragraphInitial(code) {\n    effects.enter('paragraph')\n    return lineStart(code)\n  }\n\n  /** @type {State} */\n  function lineStart(code) {\n    const token = effects.enter('chunkText', {\n      contentType: 'text',\n      previous\n    })\n    if (previous) {\n      previous.next = token\n    }\n    previous = token\n    return data(code)\n  }\n\n  /** @type {State} */\n  function data(code) {\n    if (code === null) {\n      effects.exit('chunkText')\n      effects.exit('paragraph')\n      effects.consume(code)\n      return\n    }\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      effects.exit('chunkText')\n      return lineStart\n    }\n\n    // Data.\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').ContainerState} ContainerState\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\n/**\n * @typedef {[Construct, ContainerState]} StackItem\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n/** @type {InitialConstruct} */\nexport const document = {\n  tokenize: initializeDocument\n}\n\n/** @type {Construct} */\nconst containerConstruct = {\n  tokenize: tokenizeContainer\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Initializer}\n */\nfunction initializeDocument(effects) {\n  const self = this\n  /** @type {Array<StackItem>} */\n  const stack = []\n  let continued = 0\n  /** @type {TokenizeContext | undefined} */\n  let childFlow\n  /** @type {Token | undefined} */\n  let childToken\n  /** @type {number} */\n  let lineStartOffset\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    // First we iterate through the open blocks, starting with the root\n    // document, and descending through last children down to the last open\n    // block.\n    // Each block imposes a condition that the line must satisfy if the block is\n    // to remain open.\n    // For example, a block quote requires a `>` character.\n    // A paragraph requires a non-blank line.\n    // In this phase we may match all or just some of the open blocks.\n    // But we cannot close unmatched blocks yet, because we may have a lazy\n    // continuation line.\n    if (continued < stack.length) {\n      const item = stack[continued]\n      self.containerState = item[1]\n      return effects.attempt(\n        item[0].continuation,\n        documentContinue,\n        checkNewContainers\n      )(code)\n    }\n\n    // Done.\n    return checkNewContainers(code)\n  }\n\n  /** @type {State} */\n  function documentContinue(code) {\n    continued++\n\n    // Note: this field is called `_closeFlow` but it also closes containers.\n    // Perhaps a good idea to rename it but it’s already used in the wild by\n    // extensions.\n    if (self.containerState._closeFlow) {\n      self.containerState._closeFlow = undefined\n      if (childFlow) {\n        closeFlow()\n      }\n\n      // Note: this algorithm for moving events around is similar to the\n      // algorithm when dealing with lazy lines in `writeToChild`.\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {Point | undefined} */\n      let point\n\n      // Find the flow chunk.\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          point = self.events[indexBeforeFlow][1].end\n          break\n        }\n      }\n      exitContainers(continued)\n\n      // Fix positions.\n      let index = indexBeforeExits\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      }\n\n      // Inject the exits earlier (they’re still also at the end).\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      )\n\n      // Discard the duplicate exits.\n      self.events.length = index\n      return checkNewContainers(code)\n    }\n    return start(code)\n  }\n\n  /** @type {State} */\n  function checkNewContainers(code) {\n    // Next, after consuming the continuation markers for existing blocks, we\n    // look for new block starts (e.g. `>` for a block quote).\n    // If we encounter a new block start, we close any blocks unmatched in\n    // step 1 before creating the new block as a child of the last matched\n    // block.\n    if (continued === stack.length) {\n      // No need to `check` whether there’s a container, of `exitContainers`\n      // would be moot.\n      // We can instead immediately `attempt` to parse one.\n      if (!childFlow) {\n        return documentContinued(code)\n      }\n\n      // If we have concrete content, such as block HTML or fenced code,\n      // we can’t have containers “pierce” into them, so we can immediately\n      // start.\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\n        return flowStart(code)\n      }\n\n      // If we do have flow, it could still be a blank line,\n      // but we’d be interrupting it w/ a new container if there’s a current\n      // construct.\n      // To do: next major: remove `_gfmTableDynamicInterruptHack` (no longer\n      // needed in micromark-extension-gfm-table@1.0.6).\n      self.interrupt = Boolean(\n        childFlow.currentConstruct && !childFlow._gfmTableDynamicInterruptHack\n      )\n    }\n\n    // Check if there is a new container.\n    self.containerState = {}\n    return effects.check(\n      containerConstruct,\n      thereIsANewContainer,\n      thereIsNoNewContainer\n    )(code)\n  }\n\n  /** @type {State} */\n  function thereIsANewContainer(code) {\n    if (childFlow) closeFlow()\n    exitContainers(continued)\n    return documentContinued(code)\n  }\n\n  /** @type {State} */\n  function thereIsNoNewContainer(code) {\n    self.parser.lazy[self.now().line] = continued !== stack.length\n    lineStartOffset = self.now().offset\n    return flowStart(code)\n  }\n\n  /** @type {State} */\n  function documentContinued(code) {\n    // Try new containers.\n    self.containerState = {}\n    return effects.attempt(\n      containerConstruct,\n      containerContinue,\n      flowStart\n    )(code)\n  }\n\n  /** @type {State} */\n  function containerContinue(code) {\n    continued++\n    stack.push([self.currentConstruct, self.containerState])\n    // Try another.\n    return documentContinued(code)\n  }\n\n  /** @type {State} */\n  function flowStart(code) {\n    if (code === null) {\n      if (childFlow) closeFlow()\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n    childFlow = childFlow || self.parser.flow(self.now())\n    effects.enter('chunkFlow', {\n      contentType: 'flow',\n      previous: childToken,\n      _tokenizer: childFlow\n    })\n    return flowContinue(code)\n  }\n\n  /** @type {State} */\n  function flowContinue(code) {\n    if (code === null) {\n      writeToChild(effects.exit('chunkFlow'), true)\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      writeToChild(effects.exit('chunkFlow'))\n      // Get ready for the next line.\n      continued = 0\n      self.interrupt = undefined\n      return start\n    }\n    effects.consume(code)\n    return flowContinue\n  }\n\n  /**\n   * @param {Token} token\n   * @param {boolean | undefined} [eof]\n   * @returns {undefined}\n   */\n  function writeToChild(token, eof) {\n    const stream = self.sliceStream(token)\n    if (eof) stream.push(null)\n    token.previous = childToken\n    if (childToken) childToken.next = token\n    childToken = token\n    childFlow.defineSkip(token.start)\n    childFlow.write(stream)\n\n    // Alright, so we just added a lazy line:\n    //\n    // ```markdown\n    // > a\n    // b.\n    //\n    // Or:\n    //\n    // > ~~~c\n    // d\n    //\n    // Or:\n    //\n    // > | e |\n    // f\n    // ```\n    //\n    // The construct in the second example (fenced code) does not accept lazy\n    // lines, so it marked itself as done at the end of its first line, and\n    // then the content construct parses `d`.\n    // Most constructs in markdown match on the first line: if the first line\n    // forms a construct, a non-lazy line can’t “unmake” it.\n    //\n    // The construct in the third example is potentially a GFM table, and\n    // those are *weird*.\n    // It *could* be a table, from the first line, if the following line\n    // matches a condition.\n    // In this case, that second line is lazy, which “unmakes” the first line\n    // and turns the whole into one content block.\n    //\n    // We’ve now parsed the non-lazy and the lazy line, and can figure out\n    // whether the lazy line started a new flow block.\n    // If it did, we exit the current containers between the two flow blocks.\n    if (self.parser.lazy[token.start.line]) {\n      let index = childFlow.events.length\n      while (index--) {\n        if (\n          // The token starts before the line ending…\n          childFlow.events[index][1].start.offset < lineStartOffset &&\n          // …and either is not ended yet…\n          (!childFlow.events[index][1].end ||\n            // …or ends after it.\n            childFlow.events[index][1].end.offset > lineStartOffset)\n        ) {\n          // Exit: there’s still something open, which means it’s a lazy line\n          // part of something.\n          return\n        }\n      }\n\n      // Note: this algorithm for moving events around is similar to the\n      // algorithm when closing flow in `documentContinue`.\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {boolean | undefined} */\n      let seen\n      /** @type {Point | undefined} */\n      let point\n\n      // Find the previous chunk (the one before the lazy line).\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          if (seen) {\n            point = self.events[indexBeforeFlow][1].end\n            break\n          }\n          seen = true\n        }\n      }\n      exitContainers(continued)\n\n      // Fix positions.\n      index = indexBeforeExits\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      }\n\n      // Inject the exits earlier (they’re still also at the end).\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      )\n\n      // Discard the duplicate exits.\n      self.events.length = index\n    }\n  }\n\n  /**\n   * @param {number} size\n   * @returns {undefined}\n   */\n  function exitContainers(size) {\n    let index = stack.length\n\n    // Exit open containers.\n    while (index-- > size) {\n      const entry = stack[index]\n      self.containerState = entry[1]\n      entry[0].exit.call(self, effects)\n    }\n    stack.length = size\n  }\n  function closeFlow() {\n    childFlow.write([null])\n    childToken = undefined\n    childFlow = undefined\n    self.containerState._closeFlow = undefined\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeContainer(effects, ok, nok) {\n  // Always populated by defaults.\n\n  return factorySpace(\n    effects,\n    effects.attempt(this.parser.constructs.document, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\n\nimport {\n  markdownLineEndingOrSpace,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\n/**\n * Classify whether a code represents whitespace, punctuation, or something\n * else.\n *\n * Used for attention (emphasis, strong), whose sequences can open or close\n * based on the class of surrounding characters.\n *\n * > 👉 **Note**: eof (`null`) is seen as whitespace.\n *\n * @param {Code} code\n *   Code.\n * @returns {typeof constants.characterGroupWhitespace | typeof constants.characterGroupPunctuation | undefined}\n *   Group.\n */\nexport function classifyCharacter(code) {\n  if (\n    code === null ||\n    markdownLineEndingOrSpace(code) ||\n    unicodeWhitespace(code)\n  ) {\n    return 1\n  }\n  if (unicodePunctuation(code)) {\n    return 2\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\n/**\n * Call all `resolveAll`s.\n *\n * @param {Array<{resolveAll?: Resolver | undefined}>} constructs\n *   List of constructs, optionally with `resolveAll`s.\n * @param {Array<Event>} events\n *   List of events.\n * @param {TokenizeContext} context\n *   Context used by `tokenize`.\n * @returns {Array<Event>}\n *   Changed events.\n */\nexport function resolveAll(constructs, events, context) {\n  /** @type {Array<Resolver>} */\n  const called = []\n  let index = -1\n\n  while (++index < constructs.length) {\n    const resolve = constructs[index].resolveAll\n\n    if (resolve && !called.includes(resolve)) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { push, splice } from 'micromark-util-chunked';\nimport { classifyCharacter } from 'micromark-util-classify-character';\nimport { resolveAll } from 'micromark-util-resolve-all';\n/** @type {Construct} */\nexport const attention = {\n  name: 'attention',\n  tokenize: tokenizeAttention,\n  resolveAll: resolveAllAttention\n};\n\n/**\n * Take all events and resolve attention to emphasis or strong.\n *\n * @type {Resolver}\n */\n// eslint-disable-next-line complexity\nfunction resolveAllAttention(events, context) {\n  let index = -1;\n  /** @type {number} */\n  let open;\n  /** @type {Token} */\n  let group;\n  /** @type {Token} */\n  let text;\n  /** @type {Token} */\n  let openingSequence;\n  /** @type {Token} */\n  let closingSequence;\n  /** @type {number} */\n  let use;\n  /** @type {Array<Event>} */\n  let nextEvents;\n  /** @type {number} */\n  let offset;\n\n  // Walk through all events.\n  //\n  // Note: performance of this is fine on an mb of normal markdown, but it’s\n  // a bottleneck for malicious stuff.\n  while (++index < events.length) {\n    // Find a token that can close.\n    if (events[index][0] === 'enter' && events[index][1].type === 'attentionSequence' && events[index][1]._close) {\n      open = index;\n\n      // Now walk back to find an opener.\n      while (open--) {\n        // Find a token that can open the closer.\n        if (events[open][0] === 'exit' && events[open][1].type === 'attentionSequence' && events[open][1]._open &&\n        // If the markers are the same:\n        context.sliceSerialize(events[open][1]).charCodeAt(0) === context.sliceSerialize(events[index][1]).charCodeAt(0)) {\n          // If the opening can close or the closing can open,\n          // and the close size *is not* a multiple of three,\n          // but the sum of the opening and closing size *is* multiple of three,\n          // then don’t match.\n          if ((events[open][1]._close || events[index][1]._open) && (events[index][1].end.offset - events[index][1].start.offset) % 3 && !((events[open][1].end.offset - events[open][1].start.offset + events[index][1].end.offset - events[index][1].start.offset) % 3)) {\n            continue;\n          }\n\n          // Number of markers to use from the sequence.\n          use = events[open][1].end.offset - events[open][1].start.offset > 1 && events[index][1].end.offset - events[index][1].start.offset > 1 ? 2 : 1;\n          const start = Object.assign({}, events[open][1].end);\n          const end = Object.assign({}, events[index][1].start);\n          movePoint(start, -use);\n          movePoint(end, use);\n          openingSequence = {\n            type: use > 1 ? \"strongSequence\" : \"emphasisSequence\",\n            start,\n            end: Object.assign({}, events[open][1].end)\n          };\n          closingSequence = {\n            type: use > 1 ? \"strongSequence\" : \"emphasisSequence\",\n            start: Object.assign({}, events[index][1].start),\n            end\n          };\n          text = {\n            type: use > 1 ? \"strongText\" : \"emphasisText\",\n            start: Object.assign({}, events[open][1].end),\n            end: Object.assign({}, events[index][1].start)\n          };\n          group = {\n            type: use > 1 ? \"strong\" : \"emphasis\",\n            start: Object.assign({}, openingSequence.start),\n            end: Object.assign({}, closingSequence.end)\n          };\n          events[open][1].end = Object.assign({}, openingSequence.start);\n          events[index][1].start = Object.assign({}, closingSequence.end);\n          nextEvents = [];\n\n          // If there are more markers in the opening, add them before.\n          if (events[open][1].end.offset - events[open][1].start.offset) {\n            nextEvents = push(nextEvents, [['enter', events[open][1], context], ['exit', events[open][1], context]]);\n          }\n\n          // Opening.\n          nextEvents = push(nextEvents, [['enter', group, context], ['enter', openingSequence, context], ['exit', openingSequence, context], ['enter', text, context]]);\n\n          // Always populated by defaults.\n\n          // Between.\n          nextEvents = push(nextEvents, resolveAll(context.parser.constructs.insideSpan.null, events.slice(open + 1, index), context));\n\n          // Closing.\n          nextEvents = push(nextEvents, [['exit', text, context], ['enter', closingSequence, context], ['exit', closingSequence, context], ['exit', group, context]]);\n\n          // If there are more markers in the closing, add them after.\n          if (events[index][1].end.offset - events[index][1].start.offset) {\n            offset = 2;\n            nextEvents = push(nextEvents, [['enter', events[index][1], context], ['exit', events[index][1], context]]);\n          } else {\n            offset = 0;\n          }\n          splice(events, open - 1, index - open + 3, nextEvents);\n          index = open + nextEvents.length - offset - 2;\n          break;\n        }\n      }\n    }\n  }\n\n  // Remove remaining sequences.\n  index = -1;\n  while (++index < events.length) {\n    if (events[index][1].type === 'attentionSequence') {\n      events[index][1].type = 'data';\n    }\n  }\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeAttention(effects, ok) {\n  const attentionMarkers = this.parser.constructs.attentionMarkers.null;\n  const previous = this.previous;\n  const before = classifyCharacter(previous);\n\n  /** @type {NonNullable<Code>} */\n  let marker;\n  return start;\n\n  /**\n   * Before a sequence.\n   *\n   * ```markdown\n   * > | **\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    marker = code;\n    effects.enter('attentionSequence');\n    return inside(code);\n  }\n\n  /**\n   * In a sequence.\n   *\n   * ```markdown\n   * > | **\n   *     ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker) {\n      effects.consume(code);\n      return inside;\n    }\n    const token = effects.exit('attentionSequence');\n\n    // To do: next major: move this to resolver, just like `markdown-rs`.\n    const after = classifyCharacter(code);\n\n    // Always populated by defaults.\n\n    const open = !after || after === 2 && before || attentionMarkers.includes(code);\n    const close = !before || before === 2 && after || attentionMarkers.includes(previous);\n    token._open = Boolean(marker === 42 ? open : open && (before || !close));\n    token._close = Boolean(marker === 42 ? close : close && (after || !open));\n    return ok(code);\n  }\n}\n\n/**\n * Move a point a bit.\n *\n * Note: `move` only works inside lines! It’s not possible to move past other\n * chunks (replacement characters, tabs, or line endings).\n *\n * @param {Point} point\n * @param {number} offset\n * @returns {undefined}\n */\nfunction movePoint(point, offset) {\n  point.column += offset;\n  point.offset += offset;\n  point._bufferIndex += offset;\n}","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { asciiAlpha, asciiAlphanumeric, asciiAtext, asciiControl } from 'micromark-util-character';\n/** @type {Construct} */\nexport const autolink = {\n  name: 'autolink',\n  tokenize: tokenizeAutolink\n};\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeAutolink(effects, ok, nok) {\n  let size = 0;\n  return start;\n\n  /**\n   * Start of an autolink.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *      ^\n   * > | a<user@example.com>b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"autolink\");\n    effects.enter(\"autolinkMarker\");\n    effects.consume(code);\n    effects.exit(\"autolinkMarker\");\n    effects.enter(\"autolinkProtocol\");\n    return open;\n  }\n\n  /**\n   * After `<`, at protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *       ^\n   * > | a<user@example.com>b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return schemeOrEmailAtext;\n    }\n    if (code === 64) {\n      return nok(code);\n    }\n    return emailAtext(code);\n  }\n\n  /**\n   * At second byte of protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *        ^\n   * > | a<user@example.com>b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function schemeOrEmailAtext(code) {\n    // ASCII alphanumeric and `+`, `-`, and `.`.\n    if (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) {\n      // Count the previous alphabetical from `open` too.\n      size = 1;\n      return schemeInsideOrEmailAtext(code);\n    }\n    return emailAtext(code);\n  }\n\n  /**\n   * In ambiguous protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *        ^\n   * > | a<user@example.com>b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function schemeInsideOrEmailAtext(code) {\n    if (code === 58) {\n      effects.consume(code);\n      size = 0;\n      return urlInside;\n    }\n\n    // ASCII alphanumeric and `+`, `-`, and `.`.\n    if ((code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) && size++ < 32) {\n      effects.consume(code);\n      return schemeInsideOrEmailAtext;\n    }\n    size = 0;\n    return emailAtext(code);\n  }\n\n  /**\n   * After protocol, in URL.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function urlInside(code) {\n    if (code === 62) {\n      effects.exit(\"autolinkProtocol\");\n      effects.enter(\"autolinkMarker\");\n      effects.consume(code);\n      effects.exit(\"autolinkMarker\");\n      effects.exit(\"autolink\");\n      return ok;\n    }\n\n    // ASCII control, space, or `<`.\n    if (code === null || code === 32 || code === 60 || asciiControl(code)) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return urlInside;\n  }\n\n  /**\n   * In email atext.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailAtext(code) {\n    if (code === 64) {\n      effects.consume(code);\n      return emailAtSignOrDot;\n    }\n    if (asciiAtext(code)) {\n      effects.consume(code);\n      return emailAtext;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In label, after at-sign or dot.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *                 ^       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code);\n  }\n\n  /**\n   * In label, where `.` and `>` are allowed.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *                   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailLabel(code) {\n    if (code === 46) {\n      effects.consume(code);\n      size = 0;\n      return emailAtSignOrDot;\n    }\n    if (code === 62) {\n      // Exit, then change the token type.\n      effects.exit(\"autolinkProtocol\").type = \"autolinkEmail\";\n      effects.enter(\"autolinkMarker\");\n      effects.consume(code);\n      effects.exit(\"autolinkMarker\");\n      effects.exit(\"autolink\");\n      return ok;\n    }\n    return emailValue(code);\n  }\n\n  /**\n   * In label, where `.` and `>` are *not* allowed.\n   *\n   * Though, this is also used in `emailLabel` to parse other values.\n   *\n   * ```markdown\n   * > | a<user.name@ex-ample.com>b\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailValue(code) {\n    // ASCII alphanumeric or `-`.\n    if ((code === 45 || asciiAlphanumeric(code)) && size++ < 63) {\n      const next = code === 45 ? emailValue : emailLabel;\n      effects.consume(code);\n      return next;\n    }\n    return nok(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const blankLine = {\n  tokenize: tokenizeBlankLine,\n  partial: true\n};\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlankLine(effects, ok, nok) {\n  return start;\n\n  /**\n   * Start of blank line.\n   *\n   * > 👉 **Note**: `␠` represents a space character.\n   *\n   * ```markdown\n   * > | ␠␠␊\n   *     ^\n   * > | ␊\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    return markdownSpace(code) ? factorySpace(effects, after, \"linePrefix\")(code) : after(code);\n  }\n\n  /**\n   * At eof/eol, after optional whitespace.\n   *\n   * > 👉 **Note**: `␠` represents a space character.\n   *\n   * ```markdown\n   * > | ␠␠␊\n   *       ^\n   * > | ␊\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const blockQuote = {\n  name: 'blockQuote',\n  tokenize: tokenizeBlockQuoteStart,\n  continuation: {\n    tokenize: tokenizeBlockQuoteContinuation\n  },\n  exit\n};\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlockQuoteStart(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * Start of block quote.\n   *\n   * ```markdown\n   * > | > a\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 62) {\n      const state = self.containerState;\n      if (!state.open) {\n        effects.enter(\"blockQuote\", {\n          _container: true\n        });\n        state.open = true;\n      }\n      effects.enter(\"blockQuotePrefix\");\n      effects.enter(\"blockQuoteMarker\");\n      effects.consume(code);\n      effects.exit(\"blockQuoteMarker\");\n      return after;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `>`, before optional whitespace.\n   *\n   * ```markdown\n   * > | > a\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    if (markdownSpace(code)) {\n      effects.enter(\"blockQuotePrefixWhitespace\");\n      effects.consume(code);\n      effects.exit(\"blockQuotePrefixWhitespace\");\n      effects.exit(\"blockQuotePrefix\");\n      return ok;\n    }\n    effects.exit(\"blockQuotePrefix\");\n    return ok(code);\n  }\n}\n\n/**\n * Start of block quote continuation.\n *\n * ```markdown\n *   | > a\n * > | > b\n *     ^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlockQuoteContinuation(effects, ok, nok) {\n  const self = this;\n  return contStart;\n\n  /**\n   * Start of block quote continuation.\n   *\n   * Also used to parse the first block quote opening.\n   *\n   * ```markdown\n   *   | > a\n   * > | > b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function contStart(code) {\n    if (markdownSpace(code)) {\n      // Always populated by defaults.\n\n      return factorySpace(effects, contBefore, \"linePrefix\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4)(code);\n    }\n    return contBefore(code);\n  }\n\n  /**\n   * At `>`, after optional whitespace.\n   *\n   * Also used to parse the first block quote opening.\n   *\n   * ```markdown\n   *   | > a\n   * > | > b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function contBefore(code) {\n    return effects.attempt(blockQuote, ok, nok)(code);\n  }\n}\n\n/** @type {Exiter} */\nfunction exit(effects) {\n  effects.exit(\"blockQuote\");\n}","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { asciiPunctuation } from 'micromark-util-character';\n/** @type {Construct} */\nexport const characterEscape = {\n  name: 'characterEscape',\n  tokenize: tokenizeCharacterEscape\n};\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start;\n\n  /**\n   * Start of character escape.\n   *\n   * ```markdown\n   * > | a\\*b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"characterEscape\");\n    effects.enter(\"escapeMarker\");\n    effects.consume(code);\n    effects.exit(\"escapeMarker\");\n    return inside;\n  }\n\n  /**\n   * After `\\`, at punctuation.\n   *\n   * ```markdown\n   * > | a\\*b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    // ASCII punctuation.\n    if (asciiPunctuation(code)) {\n      effects.enter(\"characterEscapeValue\");\n      effects.consume(code);\n      effects.exit(\"characterEscapeValue\");\n      effects.exit(\"characterEscape\");\n      return ok;\n    }\n    return nok(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { decodeNamedCharacterReference } from 'decode-named-character-reference';\nimport { asciiAlphanumeric, asciiDigit, asciiHexDigit } from 'micromark-util-character';\n/** @type {Construct} */\nexport const characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n};\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  const self = this;\n  let size = 0;\n  /** @type {number} */\n  let max;\n  /** @type {(code: Code) => boolean} */\n  let test;\n  return start;\n\n  /**\n   * Start of character reference.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *      ^\n   * > | a&#123;b\n   *      ^\n   * > | a&#x9;b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"characterReference\");\n    effects.enter(\"characterReferenceMarker\");\n    effects.consume(code);\n    effects.exit(\"characterReferenceMarker\");\n    return open;\n  }\n\n  /**\n   * After `&`, at `#` for numeric references or alphanumeric for named\n   * references.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *       ^\n   * > | a&#123;b\n   *       ^\n   * > | a&#x9;b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 35) {\n      effects.enter(\"characterReferenceMarkerNumeric\");\n      effects.consume(code);\n      effects.exit(\"characterReferenceMarkerNumeric\");\n      return numeric;\n    }\n    effects.enter(\"characterReferenceValue\");\n    max = 31;\n    test = asciiAlphanumeric;\n    return value(code);\n  }\n\n  /**\n   * After `#`, at `x` for hexadecimals or digit for decimals.\n   *\n   * ```markdown\n   * > | a&#123;b\n   *        ^\n   * > | a&#x9;b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function numeric(code) {\n    if (code === 88 || code === 120) {\n      effects.enter(\"characterReferenceMarkerHexadecimal\");\n      effects.consume(code);\n      effects.exit(\"characterReferenceMarkerHexadecimal\");\n      effects.enter(\"characterReferenceValue\");\n      max = 6;\n      test = asciiHexDigit;\n      return value;\n    }\n    effects.enter(\"characterReferenceValue\");\n    max = 7;\n    test = asciiDigit;\n    return value(code);\n  }\n\n  /**\n   * After markers (`&#x`, `&#`, or `&`), in value, before `;`.\n   *\n   * The character reference kind defines what and how many characters are\n   * allowed.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *       ^^^\n   * > | a&#123;b\n   *        ^^^\n   * > | a&#x9;b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function value(code) {\n    if (code === 59 && size) {\n      const token = effects.exit(\"characterReferenceValue\");\n      if (test === asciiAlphanumeric && !decodeNamedCharacterReference(self.sliceSerialize(token))) {\n        return nok(code);\n      }\n\n      // To do: `markdown-rs` uses a different name:\n      // `CharacterReferenceMarkerSemi`.\n      effects.enter(\"characterReferenceMarker\");\n      effects.consume(code);\n      effects.exit(\"characterReferenceMarker\");\n      effects.exit(\"characterReference\");\n      return ok;\n    }\n    if (test(code) && size++ < max) {\n      effects.consume(code);\n      return value;\n    }\n    return nok(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nconst nonLazyContinuation = {\n  tokenize: tokenizeNonLazyContinuation,\n  partial: true\n};\n\n/** @type {Construct} */\nexport const codeFenced = {\n  name: 'codeFenced',\n  tokenize: tokenizeCodeFenced,\n  concrete: true\n};\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCodeFenced(effects, ok, nok) {\n  const self = this;\n  /** @type {Construct} */\n  const closeStart = {\n    tokenize: tokenizeCloseStart,\n    partial: true\n  };\n  let initialPrefix = 0;\n  let sizeOpen = 0;\n  /** @type {NonNullable<Code>} */\n  let marker;\n  return start;\n\n  /**\n   * Start of code.\n   *\n   * ```markdown\n   * > | ~~~js\n   *     ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse whitespace like `markdown-rs`.\n    return beforeSequenceOpen(code);\n  }\n\n  /**\n   * In opening fence, after prefix, at sequence.\n   *\n   * ```markdown\n   * > | ~~~js\n   *     ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeSequenceOpen(code) {\n    const tail = self.events[self.events.length - 1];\n    initialPrefix = tail && tail[1].type === \"linePrefix\" ? tail[2].sliceSerialize(tail[1], true).length : 0;\n    marker = code;\n    effects.enter(\"codeFenced\");\n    effects.enter(\"codeFencedFence\");\n    effects.enter(\"codeFencedFenceSequence\");\n    return sequenceOpen(code);\n  }\n\n  /**\n   * In opening fence sequence.\n   *\n   * ```markdown\n   * > | ~~~js\n   *      ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === marker) {\n      sizeOpen++;\n      effects.consume(code);\n      return sequenceOpen;\n    }\n    if (sizeOpen < 3) {\n      return nok(code);\n    }\n    effects.exit(\"codeFencedFenceSequence\");\n    return markdownSpace(code) ? factorySpace(effects, infoBefore, \"whitespace\")(code) : infoBefore(code);\n  }\n\n  /**\n   * In opening fence, after the sequence (and optional whitespace), before info.\n   *\n   * ```markdown\n   * > | ~~~js\n   *        ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function infoBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"codeFencedFence\");\n      return self.interrupt ? ok(code) : effects.check(nonLazyContinuation, atNonLazyBreak, after)(code);\n    }\n    effects.enter(\"codeFencedFenceInfo\");\n    effects.enter(\"chunkString\", {\n      contentType: \"string\"\n    });\n    return info(code);\n  }\n\n  /**\n   * In info.\n   *\n   * ```markdown\n   * > | ~~~js\n   *        ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function info(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"chunkString\");\n      effects.exit(\"codeFencedFenceInfo\");\n      return infoBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.exit(\"chunkString\");\n      effects.exit(\"codeFencedFenceInfo\");\n      return factorySpace(effects, metaBefore, \"whitespace\")(code);\n    }\n    if (code === 96 && code === marker) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return info;\n  }\n\n  /**\n   * In opening fence, after info and whitespace, before meta.\n   *\n   * ```markdown\n   * > | ~~~js eval\n   *           ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function metaBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return infoBefore(code);\n    }\n    effects.enter(\"codeFencedFenceMeta\");\n    effects.enter(\"chunkString\", {\n      contentType: \"string\"\n    });\n    return meta(code);\n  }\n\n  /**\n   * In meta.\n   *\n   * ```markdown\n   * > | ~~~js eval\n   *           ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function meta(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"chunkString\");\n      effects.exit(\"codeFencedFenceMeta\");\n      return infoBefore(code);\n    }\n    if (code === 96 && code === marker) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return meta;\n  }\n\n  /**\n   * At eol/eof in code, before a non-lazy closing fence or content.\n   *\n   * ```markdown\n   * > | ~~~js\n   *          ^\n   * > | alert(1)\n   *             ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function atNonLazyBreak(code) {\n    return effects.attempt(closeStart, after, contentBefore)(code);\n  }\n\n  /**\n   * Before code content, not a closing fence, at eol.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *             ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentBefore(code) {\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return contentStart;\n  }\n\n  /**\n   * Before code content, not a closing fence.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentStart(code) {\n    return initialPrefix > 0 && markdownSpace(code) ? factorySpace(effects, beforeContentChunk, \"linePrefix\", initialPrefix + 1)(code) : beforeContentChunk(code);\n  }\n\n  /**\n   * Before code content, after optional prefix.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeContentChunk(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return effects.check(nonLazyContinuation, atNonLazyBreak, after)(code);\n    }\n    effects.enter(\"codeFlowValue\");\n    return contentChunk(code);\n  }\n\n  /**\n   * In code content.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^^^^^^^^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentChunk(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"codeFlowValue\");\n      return beforeContentChunk(code);\n    }\n    effects.consume(code);\n    return contentChunk;\n  }\n\n  /**\n   * After code.\n   *\n   * ```markdown\n   *   | ~~~js\n   *   | alert(1)\n   * > | ~~~\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    effects.exit(\"codeFenced\");\n    return ok(code);\n  }\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Tokenizer}\n   */\n  function tokenizeCloseStart(effects, ok, nok) {\n    let size = 0;\n    return startBefore;\n\n    /**\n     *\n     *\n     * @type {State}\n     */\n    function startBefore(code) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return start;\n    }\n\n    /**\n     * Before closing fence, at optional whitespace.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function start(code) {\n      // Always populated by defaults.\n\n      // To do: `enter` here or in next state?\n      effects.enter(\"codeFencedFence\");\n      return markdownSpace(code) ? factorySpace(effects, beforeSequenceClose, \"linePrefix\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4)(code) : beforeSequenceClose(code);\n    }\n\n    /**\n     * In closing fence, after optional whitespace, at sequence.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function beforeSequenceClose(code) {\n      if (code === marker) {\n        effects.enter(\"codeFencedFenceSequence\");\n        return sequenceClose(code);\n      }\n      return nok(code);\n    }\n\n    /**\n     * In closing fence sequence.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function sequenceClose(code) {\n      if (code === marker) {\n        size++;\n        effects.consume(code);\n        return sequenceClose;\n      }\n      if (size >= sizeOpen) {\n        effects.exit(\"codeFencedFenceSequence\");\n        return markdownSpace(code) ? factorySpace(effects, sequenceCloseAfter, \"whitespace\")(code) : sequenceCloseAfter(code);\n      }\n      return nok(code);\n    }\n\n    /**\n     * After closing fence sequence, after optional whitespace.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *        ^\n     * ```\n     *\n     * @type {State}\n     */\n    function sequenceCloseAfter(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit(\"codeFencedFence\");\n        return ok(code);\n      }\n      return nok(code);\n    }\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeNonLazyContinuation(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === null) {\n      return nok(code);\n    }\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return lineStart;\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function lineStart(code) {\n    return self.parser.lazy[self.now().line] ? nok(code) : ok(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented\n};\n\n/** @type {Construct} */\nconst furtherStart = {\n  tokenize: tokenizeFurtherStart,\n  partial: true\n};\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * Start of code (indented).\n   *\n   * > **Parsing note**: it is not needed to check if this first line is a\n   * > filled line (that it has a non-whitespace character), because blank lines\n   * > are parsed already, so we never run into that.\n   *\n   * ```markdown\n   * > |     aaa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: manually check if interrupting like `markdown-rs`.\n\n    effects.enter(\"codeIndented\");\n    // To do: use an improved `space_or_tab` function like `markdown-rs`,\n    // so that we can drop the next state.\n    return factorySpace(effects, afterPrefix, \"linePrefix\", 4 + 1)(code);\n  }\n\n  /**\n   * At start, after 1 or 4 spaces.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1];\n    return tail && tail[1].type === \"linePrefix\" && tail[2].sliceSerialize(tail[1], true).length >= 4 ? atBreak(code) : nok(code);\n  }\n\n  /**\n   * At a break.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^  ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === null) {\n      return after(code);\n    }\n    if (markdownLineEnding(code)) {\n      return effects.attempt(furtherStart, atBreak, after)(code);\n    }\n    effects.enter(\"codeFlowValue\");\n    return inside(code);\n  }\n\n  /**\n   * In code content.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"codeFlowValue\");\n      return atBreak(code);\n    }\n    effects.consume(code);\n    return inside;\n  }\n\n  /** @type {State} */\n  function after(code) {\n    effects.exit(\"codeIndented\");\n    // To do: allow interrupting like `markdown-rs`.\n    // Feel free to interrupt.\n    // tokenizer.interrupt = false\n    return ok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeFurtherStart(effects, ok, nok) {\n  const self = this;\n  return furtherStart;\n\n  /**\n   * At eol, trying to parse another indent.\n   *\n   * ```markdown\n   * > |     aaa\n   *            ^\n   *   |     bbb\n   * ```\n   *\n   * @type {State}\n   */\n  function furtherStart(code) {\n    // To do: improve `lazy` / `pierce` handling.\n    // If this is a lazy line, it can’t be code.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code);\n    }\n    if (markdownLineEnding(code)) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return furtherStart;\n    }\n\n    // To do: the code here in `micromark-js` is a bit different from\n    // `markdown-rs` because there it can attempt spaces.\n    // We can’t yet.\n    //\n    // To do: use an improved `space_or_tab` function like `markdown-rs`,\n    // so that we can drop the next state.\n    return factorySpace(effects, afterPrefix, \"linePrefix\", 4 + 1)(code);\n  }\n\n  /**\n   * At start, after 1 or 4 spaces.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1];\n    return tail && tail[1].type === \"linePrefix\" && tail[2].sliceSerialize(tail[1], true).length >= 4 ? ok(code) : markdownLineEnding(code) ? furtherStart(code) : nok(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { markdownLineEnding } from 'micromark-util-character';\n/** @type {Construct} */\nexport const codeText = {\n  name: 'codeText',\n  tokenize: tokenizeCodeText,\n  resolve: resolveCodeText,\n  previous\n};\n\n// To do: next major: don’t resolve, like `markdown-rs`.\n/** @type {Resolver} */\nfunction resolveCodeText(events) {\n  let tailExitIndex = events.length - 4;\n  let headEnterIndex = 3;\n  /** @type {number} */\n  let index;\n  /** @type {number | undefined} */\n  let enter;\n\n  // If we start and end with an EOL or a space.\n  if ((events[headEnterIndex][1].type === \"lineEnding\" || events[headEnterIndex][1].type === 'space') && (events[tailExitIndex][1].type === \"lineEnding\" || events[tailExitIndex][1].type === 'space')) {\n    index = headEnterIndex;\n\n    // And we have data.\n    while (++index < tailExitIndex) {\n      if (events[index][1].type === \"codeTextData\") {\n        // Then we have padding.\n        events[headEnterIndex][1].type = \"codeTextPadding\";\n        events[tailExitIndex][1].type = \"codeTextPadding\";\n        headEnterIndex += 2;\n        tailExitIndex -= 2;\n        break;\n      }\n    }\n  }\n\n  // Merge adjacent spaces and data.\n  index = headEnterIndex - 1;\n  tailExitIndex++;\n  while (++index <= tailExitIndex) {\n    if (enter === undefined) {\n      if (index !== tailExitIndex && events[index][1].type !== \"lineEnding\") {\n        enter = index;\n      }\n    } else if (index === tailExitIndex || events[index][1].type === \"lineEnding\") {\n      events[enter][1].type = \"codeTextData\";\n      if (index !== enter + 2) {\n        events[enter][1].end = events[index - 1][1].end;\n        events.splice(enter + 2, index - enter - 2);\n        tailExitIndex -= index - enter - 2;\n        index = enter + 2;\n      }\n      enter = undefined;\n    }\n  }\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Previous}\n */\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return code !== 96 || this.events[this.events.length - 1][1].type === \"characterEscape\";\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCodeText(effects, ok, nok) {\n  const self = this;\n  let sizeOpen = 0;\n  /** @type {number} */\n  let size;\n  /** @type {Token} */\n  let token;\n  return start;\n\n  /**\n   * Start of code (text).\n   *\n   * ```markdown\n   * > | `a`\n   *     ^\n   * > | \\`a`\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"codeText\");\n    effects.enter(\"codeTextSequence\");\n    return sequenceOpen(code);\n  }\n\n  /**\n   * In opening sequence.\n   *\n   * ```markdown\n   * > | `a`\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === 96) {\n      effects.consume(code);\n      sizeOpen++;\n      return sequenceOpen;\n    }\n    effects.exit(\"codeTextSequence\");\n    return between(code);\n  }\n\n  /**\n   * Between something and something else.\n   *\n   * ```markdown\n   * > | `a`\n   *      ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function between(code) {\n    // EOF.\n    if (code === null) {\n      return nok(code);\n    }\n\n    // To do: next major: don’t do spaces in resolve, but when compiling,\n    // like `markdown-rs`.\n    // Tabs don’t work, and virtual spaces don’t make sense.\n    if (code === 32) {\n      effects.enter('space');\n      effects.consume(code);\n      effects.exit('space');\n      return between;\n    }\n\n    // Closing fence? Could also be data.\n    if (code === 96) {\n      token = effects.enter(\"codeTextSequence\");\n      size = 0;\n      return sequenceClose(code);\n    }\n    if (markdownLineEnding(code)) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return between;\n    }\n\n    // Data.\n    effects.enter(\"codeTextData\");\n    return data(code);\n  }\n\n  /**\n   * In data.\n   *\n   * ```markdown\n   * > | `a`\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function data(code) {\n    if (code === null || code === 32 || code === 96 || markdownLineEnding(code)) {\n      effects.exit(\"codeTextData\");\n      return between(code);\n    }\n    effects.consume(code);\n    return data;\n  }\n\n  /**\n   * In closing sequence.\n   *\n   * ```markdown\n   * > | `a`\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceClose(code) {\n    // More.\n    if (code === 96) {\n      effects.consume(code);\n      size++;\n      return sequenceClose;\n    }\n\n    // Done!\n    if (size === sizeOpen) {\n      effects.exit(\"codeTextSequence\");\n      effects.exit(\"codeText\");\n      return ok(code);\n    }\n\n    // More or less accents: mark as data.\n    token.type = \"codeTextData\";\n    return data(code);\n  }\n}","/**\n * Some of the internal operations of micromark do lots of editing\n * operations on very large arrays. This runs into problems with two\n * properties of most circa-2020 JavaScript interpreters:\n *\n *  - Array-length modifications at the high end of an array (push/pop) are\n *    expected to be common and are implemented in (amortized) time\n *    proportional to the number of elements added or removed, whereas\n *    other operations (shift/unshift and splice) are much less efficient.\n *  - Function arguments are passed on the stack, so adding tens of thousands\n *    of elements to an array with `arr.push[...newElements]` will frequently\n *    cause stack overflows. (see <https://stackoverflow.com/questions/22123769/rangeerror-maximum-call-stack-size-exceeded-why>)\n *\n * SpliceBuffers are an implementation of gap buffers, which are a\n * generalization of the \"queue made of two stacks\" idea. The splice buffer\n * maintains a cursor, and moving the cursor has cost proportional to the\n * distance the cursor moves, but inserting, deleting, or splicing in\n * new information at the cursor is as efficient as the push/pop operation.\n * This allows for an efficient sequence of splices (or pushes, pops, shifts,\n * or unshifts) as long such edits happen at the same part of the array or\n * generally sweep through the array from the beginning to the end.\n *\n * The interface for splice buffers also supports large numbers of inputs by\n * passing a single array argument rather passing multiple arguments on the\n * function call stack.\n *\n * @template T\n *   Item type.\n */\nexport class SpliceBuffer {\n  /**\n   * @param {ReadonlyArray<T> | null | undefined} [initial]\n   *   Initial items (optional).\n   * @returns\n   *   Splice buffer.\n   */\n  constructor(initial) {\n    /** @type {Array<T>} */\n    this.left = initial ? [...initial] : [];\n    /** @type {Array<T>} */\n    this.right = [];\n  }\n\n  /**\n   * Array access;\n   * does not move the cursor.\n   *\n   * @param {number} index\n   *   Index.\n   * @return {T}\n   *   Item.\n   */\n  get(index) {\n    if (index < 0 || index >= this.left.length + this.right.length) {\n      throw new RangeError('Cannot access index `' + index + '` in a splice buffer of size `' + (this.left.length + this.right.length) + '`');\n    }\n    if (index < this.left.length) return this.left[index];\n    return this.right[this.right.length - index + this.left.length - 1];\n  }\n\n  /**\n   * The length of the splice buffer, one greater than the largest index in the\n   * array.\n   */\n  get length() {\n    return this.left.length + this.right.length;\n  }\n\n  /**\n   * Remove and return `list[0]`;\n   * moves the cursor to `0`.\n   *\n   * @returns {T | undefined}\n   *   Item, optional.\n   */\n  shift() {\n    this.setCursor(0);\n    return this.right.pop();\n  }\n\n  /**\n   * Slice the buffer to get an array;\n   * does not move the cursor.\n   *\n   * @param {number} start\n   *   Start.\n   * @param {number | null | undefined} [end]\n   *   End (optional).\n   * @returns {Array<T>}\n   *   Array of items.\n   */\n  slice(start, end) {\n    /** @type {number} */\n    const stop = end === null || end === undefined ? Number.POSITIVE_INFINITY : end;\n    if (stop < this.left.length) {\n      return this.left.slice(start, stop);\n    }\n    if (start > this.left.length) {\n      return this.right.slice(this.right.length - stop + this.left.length, this.right.length - start + this.left.length).reverse();\n    }\n    return this.left.slice(start).concat(this.right.slice(this.right.length - stop + this.left.length).reverse());\n  }\n\n  /**\n   * Mimics the behavior of Array.prototype.splice() except for the change of\n   * interface necessary to avoid segfaults when patching in very large arrays.\n   *\n   * This operation moves cursor is moved to `start` and results in the cursor\n   * placed after any inserted items.\n   *\n   * @param {number} start\n   *   Start;\n   *   zero-based index at which to start changing the array;\n   *   negative numbers count backwards from the end of the array and values\n   *   that are out-of bounds are clamped to the appropriate end of the array.\n   * @param {number | null | undefined} [deleteCount=0]\n   *   Delete count (default: `0`);\n   *   maximum number of elements to delete, starting from start.\n   * @param {Array<T> | null | undefined} [items=[]]\n   *   Items to include in place of the deleted items (default: `[]`).\n   * @return {Array<T>}\n   *   Any removed items.\n   */\n  splice(start, deleteCount, items) {\n    /** @type {number} */\n    const count = deleteCount || 0;\n    this.setCursor(Math.trunc(start));\n    const removed = this.right.splice(this.right.length - count, Number.POSITIVE_INFINITY);\n    if (items) chunkedPush(this.left, items);\n    return removed.reverse();\n  }\n\n  /**\n   * Remove and return the highest-numbered item in the array, so\n   * `list[list.length - 1]`;\n   * Moves the cursor to `length`.\n   *\n   * @returns {T | undefined}\n   *   Item, optional.\n   */\n  pop() {\n    this.setCursor(Number.POSITIVE_INFINITY);\n    return this.left.pop();\n  }\n\n  /**\n   * Inserts a single item to the high-numbered side of the array;\n   * moves the cursor to `length`.\n   *\n   * @param {T} item\n   *   Item.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  push(item) {\n    this.setCursor(Number.POSITIVE_INFINITY);\n    this.left.push(item);\n  }\n\n  /**\n   * Inserts many items to the high-numbered side of the array.\n   * Moves the cursor to `length`.\n   *\n   * @param {Array<T>} items\n   *   Items.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  pushMany(items) {\n    this.setCursor(Number.POSITIVE_INFINITY);\n    chunkedPush(this.left, items);\n  }\n\n  /**\n   * Inserts a single item to the low-numbered side of the array;\n   * Moves the cursor to `0`.\n   *\n   * @param {T} item\n   *   Item.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  unshift(item) {\n    this.setCursor(0);\n    this.right.push(item);\n  }\n\n  /**\n   * Inserts many items to the low-numbered side of the array;\n   * moves the cursor to `0`.\n   *\n   * @param {Array<T>} items\n   *   Items.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  unshiftMany(items) {\n    this.setCursor(0);\n    chunkedPush(this.right, items.reverse());\n  }\n\n  /**\n   * Move the cursor to a specific position in the array. Requires\n   * time proportional to the distance moved.\n   *\n   * If `n < 0`, the cursor will end up at the beginning.\n   * If `n > length`, the cursor will end up at the end.\n   *\n   * @param {number} n\n   *   Position.\n   * @return {undefined}\n   *   Nothing.\n   */\n  setCursor(n) {\n    if (n === this.left.length || n > this.left.length && this.right.length === 0 || n < 0 && this.left.length === 0) return;\n    if (n < this.left.length) {\n      // Move cursor to the this.left\n      const removed = this.left.splice(n, Number.POSITIVE_INFINITY);\n      chunkedPush(this.right, removed.reverse());\n    } else {\n      // Move cursor to the this.right\n      const removed = this.right.splice(this.left.length + this.right.length - n, Number.POSITIVE_INFINITY);\n      chunkedPush(this.left, removed.reverse());\n    }\n  }\n}\n\n/**\n * Avoid stack overflow by pushing items onto the stack in segments\n *\n * @template T\n *   Item type.\n * @param {Array<T>} list\n *   List to inject into.\n * @param {ReadonlyArray<T>} right\n *   Items to inject.\n * @return {undefined}\n *   Nothing.\n */\nfunction chunkedPush(list, right) {\n  /** @type {number} */\n  let chunkStart = 0;\n  if (right.length < 10000) {\n    list.push(...right);\n  } else {\n    while (chunkStart < right.length) {\n      list.push(...right.slice(chunkStart, chunkStart + 10000));\n      chunkStart += 10000;\n    }\n  }\n}","/**\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Token} Token\n */\n\nimport { splice } from 'micromark-util-chunked';\nimport { SpliceBuffer } from './lib/splice-buffer.js';\n\n// Hidden API exposed for testing.\nexport { SpliceBuffer } from './lib/splice-buffer.js';\n\n/**\n * Tokenize subcontent.\n *\n * @param {Array<Event>} eventsArray\n *   List of events.\n * @returns {boolean}\n *   Whether subtokens were found.\n */\n// eslint-disable-next-line complexity\nexport function subtokenize(eventsArray) {\n  /** @type {Record<string, number>} */\n  const jumps = {};\n  let index = -1;\n  /** @type {Event} */\n  let event;\n  /** @type {number | undefined} */\n  let lineIndex;\n  /** @type {number} */\n  let otherIndex;\n  /** @type {Event} */\n  let otherEvent;\n  /** @type {Array<Event>} */\n  let parameters;\n  /** @type {Array<Event>} */\n  let subevents;\n  /** @type {boolean | undefined} */\n  let more;\n  const events = new SpliceBuffer(eventsArray);\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index];\n    }\n    event = events.get(index);\n\n    // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n    if (index && event[1].type === \"chunkFlow\" && events.get(index - 1)[1].type === \"listItemPrefix\") {\n      subevents = event[1]._tokenizer.events;\n      otherIndex = 0;\n      if (otherIndex < subevents.length && subevents[otherIndex][1].type === \"lineEndingBlank\") {\n        otherIndex += 2;\n      }\n      if (otherIndex < subevents.length && subevents[otherIndex][1].type === \"content\") {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === \"content\") {\n            break;\n          }\n          if (subevents[otherIndex][1].type === \"chunkText\") {\n            subevents[otherIndex][1]._isInFirstContentOfListItem = true;\n            otherIndex++;\n          }\n        }\n      }\n    }\n\n    // Enter.\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        Object.assign(jumps, subcontent(events, index));\n        index = jumps[index];\n        more = true;\n      }\n    }\n    // Exit.\n    else if (event[1]._container) {\n      otherIndex = index;\n      lineIndex = undefined;\n      while (otherIndex--) {\n        otherEvent = events.get(otherIndex);\n        if (otherEvent[1].type === \"lineEnding\" || otherEvent[1].type === \"lineEndingBlank\") {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events.get(lineIndex)[1].type = \"lineEndingBlank\";\n            }\n            otherEvent[1].type = \"lineEnding\";\n            lineIndex = otherIndex;\n          }\n        } else {\n          break;\n        }\n      }\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = Object.assign({}, events.get(lineIndex)[1].start);\n\n        // Switch container exit w/ line endings.\n        parameters = events.slice(lineIndex, index);\n        parameters.unshift(event);\n        events.splice(lineIndex, index - lineIndex + 1, parameters);\n      }\n    }\n  }\n\n  // The changes to the `events` buffer must be copied back into the eventsArray\n  splice(eventsArray, 0, Number.POSITIVE_INFINITY, events.slice(0));\n  return !more;\n}\n\n/**\n * Tokenize embedded tokens.\n *\n * @param {SpliceBuffer<Event>} events\n * @param {number} eventIndex\n * @returns {Record<string, number>}\n */\nfunction subcontent(events, eventIndex) {\n  const token = events.get(eventIndex)[1];\n  const context = events.get(eventIndex)[2];\n  let startPosition = eventIndex - 1;\n  /** @type {Array<number>} */\n  const startPositions = [];\n  const tokenizer = token._tokenizer || context.parser[token.contentType](token.start);\n  const childEvents = tokenizer.events;\n  /** @type {Array<[number, number]>} */\n  const jumps = [];\n  /** @type {Record<string, number>} */\n  const gaps = {};\n  /** @type {Array<Chunk>} */\n  let stream;\n  /** @type {Token | undefined} */\n  let previous;\n  let index = -1;\n  /** @type {Token | undefined} */\n  let current = token;\n  let adjust = 0;\n  let start = 0;\n  const breaks = [start];\n\n  // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n  while (current) {\n    // Find the position of the event for this token.\n    while (events.get(++startPosition)[1] !== current) {\n      // Empty.\n    }\n    startPositions.push(startPosition);\n    if (!current._tokenizer) {\n      stream = context.sliceStream(current);\n      if (!current.next) {\n        stream.push(null);\n      }\n      if (previous) {\n        tokenizer.defineSkip(current.start);\n      }\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true;\n      }\n      tokenizer.write(stream);\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined;\n      }\n    }\n\n    // Unravel the next token.\n    previous = current;\n    current = current.next;\n  }\n\n  // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n  current = token;\n  while (++index < childEvents.length) {\n    if (\n    // Find a void token that includes a break.\n    childEvents[index][0] === 'exit' && childEvents[index - 1][0] === 'enter' && childEvents[index][1].type === childEvents[index - 1][1].type && childEvents[index][1].start.line !== childEvents[index][1].end.line) {\n      start = index + 1;\n      breaks.push(start);\n      // Help GC.\n      current._tokenizer = undefined;\n      current.previous = undefined;\n      current = current.next;\n    }\n  }\n\n  // Help GC.\n  tokenizer.events = [];\n\n  // If there’s one more token (which is the cases for lines that end in an\n  // EOF), that’s perfect: the last point we found starts it.\n  // If there isn’t then make sure any remaining content is added to it.\n  if (current) {\n    // Help GC.\n    current._tokenizer = undefined;\n    current.previous = undefined;\n  } else {\n    breaks.pop();\n  }\n\n  // Now splice the events from the subtokenizer into the current events,\n  // moving back to front so that splice indices aren’t affected.\n  index = breaks.length;\n  while (index--) {\n    const slice = childEvents.slice(breaks[index], breaks[index + 1]);\n    const start = startPositions.pop();\n    jumps.push([start, start + slice.length - 1]);\n    events.splice(start, 2, slice);\n  }\n  jumps.reverse();\n  index = -1;\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1];\n    adjust += jumps[index][1] - jumps[index][0] - 1;\n  }\n  return gaps;\n}","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\nimport { subtokenize } from 'micromark-util-subtokenize';\n/**\n * No name because it must not be turned off.\n * @type {Construct}\n */\nexport const content = {\n  tokenize: tokenizeContent,\n  resolve: resolveContent\n};\n\n/** @type {Construct} */\nconst continuationConstruct = {\n  tokenize: tokenizeContinuation,\n  partial: true\n};\n\n/**\n * Content is transparent: it’s parsed right now. That way, definitions are also\n * parsed right now: before text in paragraphs (specifically, media) are parsed.\n *\n * @type {Resolver}\n */\nfunction resolveContent(events) {\n  subtokenize(events);\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeContent(effects, ok) {\n  /** @type {Token | undefined} */\n  let previous;\n  return chunkStart;\n\n  /**\n   * Before a content chunk.\n   *\n   * ```markdown\n   * > | abc\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function chunkStart(code) {\n    effects.enter(\"content\");\n    previous = effects.enter(\"chunkContent\", {\n      contentType: \"content\"\n    });\n    return chunkInside(code);\n  }\n\n  /**\n   * In a content chunk.\n   *\n   * ```markdown\n   * > | abc\n   *     ^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function chunkInside(code) {\n    if (code === null) {\n      return contentEnd(code);\n    }\n\n    // To do: in `markdown-rs`, each line is parsed on its own, and everything\n    // is stitched together resolving.\n    if (markdownLineEnding(code)) {\n      return effects.check(continuationConstruct, contentContinue, contentEnd)(code);\n    }\n\n    // Data.\n    effects.consume(code);\n    return chunkInside;\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function contentEnd(code) {\n    effects.exit(\"chunkContent\");\n    effects.exit(\"content\");\n    return ok(code);\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function contentContinue(code) {\n    effects.consume(code);\n    effects.exit(\"chunkContent\");\n    previous.next = effects.enter(\"chunkContent\", {\n      contentType: \"content\",\n      previous\n    });\n    previous = previous.next;\n    return chunkInside;\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeContinuation(effects, ok, nok) {\n  const self = this;\n  return startLookahead;\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function startLookahead(code) {\n    effects.exit(\"chunkContent\");\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return factorySpace(effects, prefixed, \"linePrefix\");\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function prefixed(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code);\n    }\n\n    // Always populated by defaults.\n\n    const tail = self.events[self.events.length - 1];\n    if (!self.parser.constructs.disable.null.includes('codeIndented') && tail && tail[1].type === \"linePrefix\" && tail[2].sliceSerialize(tail[1], true).length >= 4) {\n      return ok(code);\n    }\n    return effects.interrupt(self.parser.constructs.flow, nok, ok)(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {\n  asciiControl,\n  markdownLineEndingOrSpace,\n  markdownLineEnding\n} from 'micromark-util-character'\n/**\n * Parse destinations.\n *\n * ###### Examples\n *\n * ```markdown\n * <a>\n * <a\\>b>\n * <a b>\n * <a)>\n * a\n * a\\)b\n * a(b)c\n * a(b)\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type for whole (`<a>` or `b`).\n * @param {TokenType} literalType\n *   Type when enclosed (`<a>`).\n * @param {TokenType} literalMarkerType\n *   Type for enclosing (`<` and `>`).\n * @param {TokenType} rawType\n *   Type when not enclosed (`b`).\n * @param {TokenType} stringType\n *   Type for the value (`a` or `b`).\n * @param {number | undefined} [max=Infinity]\n *   Depth of nested parens (inclusive).\n * @returns {State}\n *   Start state.\n */ // eslint-disable-next-line max-params\nexport function factoryDestination(\n  effects,\n  ok,\n  nok,\n  type,\n  literalType,\n  literalMarkerType,\n  rawType,\n  stringType,\n  max\n) {\n  const limit = max || Number.POSITIVE_INFINITY\n  let balance = 0\n  return start\n\n  /**\n   * Start of destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *     ^\n   * > | aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type)\n      effects.enter(literalType)\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      return enclosedBefore\n    }\n\n    // ASCII control, space, closing paren.\n    if (code === null || code === 32 || code === 41 || asciiControl(code)) {\n      return nok(code)\n    }\n    effects.enter(type)\n    effects.enter(rawType)\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return raw(code)\n  }\n\n  /**\n   * After `<`, at an enclosed destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      effects.exit(literalType)\n      effects.exit(type)\n      return ok\n    }\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return enclosed(code)\n  }\n\n  /**\n   * In enclosed destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosed(code) {\n    if (code === 62) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      return enclosedBefore(code)\n    }\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return code === 92 ? enclosedEscape : enclosed\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | <a\\*a>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code)\n      return enclosed\n    }\n    return enclosed(code)\n  }\n\n  /**\n   * In raw destination.\n   *\n   * ```markdown\n   * > | aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function raw(code) {\n    if (\n      !balance &&\n      (code === null || code === 41 || markdownLineEndingOrSpace(code))\n    ) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      effects.exit(rawType)\n      effects.exit(type)\n      return ok(code)\n    }\n    if (balance < limit && code === 40) {\n      effects.consume(code)\n      balance++\n      return raw\n    }\n    if (code === 41) {\n      effects.consume(code)\n      balance--\n      return raw\n    }\n\n    // ASCII control (but *not* `\\0`) and space and `(`.\n    // Note: in `markdown-rs`, `\\0` exists in codes, in `micromark-js` it\n    // doesn’t.\n    if (code === null || code === 32 || code === 40 || asciiControl(code)) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return code === 92 ? rawEscape : raw\n  }\n\n  /**\n   * After `\\`, at special character.\n   *\n   * ```markdown\n   * > | a\\*a\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function rawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code)\n      return raw\n    }\n    return raw(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/**\n * Parse labels.\n *\n * > 👉 **Note**: labels in markdown are capped at 999 characters in the string.\n *\n * ###### Examples\n *\n * ```markdown\n * [a]\n * [a\n * b]\n * [a\\]b]\n * ```\n *\n * @this {TokenizeContext}\n *   Tokenize context.\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type of the whole label (`[a]`).\n * @param {TokenType} markerType\n *   Type for the markers (`[` and `]`).\n * @param {TokenType} stringType\n *   Type for the identifier (`a`).\n * @returns {State}\n *   Start state.\n */ // eslint-disable-next-line max-params\nexport function factoryLabel(effects, ok, nok, type, markerType, stringType) {\n  const self = this\n  let size = 0\n  /** @type {boolean} */\n  let seen\n  return start\n\n  /**\n   * Start of label.\n   *\n   * ```markdown\n   * > | [a]\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    effects.enter(stringType)\n    return atBreak\n  }\n\n  /**\n   * In label, at something, before something else.\n   *\n   * ```markdown\n   * > | [a]\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (\n      size > 999 ||\n      code === null ||\n      code === 91 ||\n      (code === 93 && !seen) ||\n      // To do: remove in the future once we’ve switched from\n      // `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n      // which doesn’t need this.\n      // Hidden footnotes hook.\n      /* c8 ignore next 3 */\n      (code === 94 &&\n        !size &&\n        '_hiddenFootnoteSupport' in self.parser.constructs)\n    ) {\n      return nok(code)\n    }\n    if (code === 93) {\n      effects.exit(stringType)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    // To do: indent? Link chunks and EOLs together?\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return atBreak\n    }\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return labelInside(code)\n  }\n\n  /**\n   * In label, in text.\n   *\n   * ```markdown\n   * > | [a]\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelInside(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      code === 93 ||\n      markdownLineEnding(code) ||\n      size++ > 999\n    ) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n    effects.consume(code)\n    if (!seen) seen = !markdownSpace(code)\n    return code === 92 ? labelEscape : labelInside\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | [a\\*a]\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return labelInside\n    }\n    return labelInside(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n/**\n * Parse titles.\n *\n * ###### Examples\n *\n * ```markdown\n * \"a\"\n * 'b'\n * (c)\n * \"a\n * b\"\n * 'a\n *     b'\n * (a\\)b)\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type of the whole title (`\"a\"`, `'b'`, `(c)`).\n * @param {TokenType} markerType\n *   Type for the markers (`\"`, `'`, `(`, and `)`).\n * @param {TokenType} stringType\n *   Type for the value (`a`).\n * @returns {State}\n *   Start state.\n */ // eslint-disable-next-line max-params\nexport function factoryTitle(effects, ok, nok, type, markerType, stringType) {\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * Start of title.\n   *\n   * ```markdown\n   * > | \"a\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      effects.enter(type)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      marker = code === 40 ? 41 : code\n      return begin\n    }\n    return nok(code)\n  }\n\n  /**\n   * After opening marker.\n   *\n   * This is also used at the closing marker.\n   *\n   * ```markdown\n   * > | \"a\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function begin(code) {\n    if (code === marker) {\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n    effects.enter(stringType)\n    return atBreak(code)\n  }\n\n  /**\n   * At something, before something else.\n   *\n   * ```markdown\n   * > | \"a\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType)\n      return begin(marker)\n    }\n    if (code === null) {\n      return nok(code)\n    }\n\n    // Note: blank lines can’t exist in content.\n    if (markdownLineEnding(code)) {\n      // To do: use `space_or_tab_eol_with_options`, connect.\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, atBreak, 'linePrefix')\n    }\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return inside(code)\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker || code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n    effects.consume(code)\n    return code === 92 ? escape : inside\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | \"a\\*b\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function escape(code) {\n    if (code === marker || code === 92) {\n      effects.consume(code)\n      return inside\n    }\n    return inside(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   line endings or spaces in markdown are often optional, in which case this\n *     factory can be used and `ok` will be switched to whether spaces were found\n *     or not\n * *   one line ending or space can be detected with\n *     `markdownLineEndingOrSpace(code)` right before using `factoryWhitespace`\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @returns {State}\n *   Start state.\n */\nexport function factoryWhitespace(effects, ok) {\n  /** @type {boolean} */\n  let seen\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      seen = true\n      return start\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(\n        effects,\n        start,\n        seen ? 'linePrefix' : 'lineSuffix'\n      )(code)\n    }\n    return ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { factoryDestination } from 'micromark-factory-destination';\nimport { factoryLabel } from 'micromark-factory-label';\nimport { factorySpace } from 'micromark-factory-space';\nimport { factoryTitle } from 'micromark-factory-title';\nimport { factoryWhitespace } from 'micromark-factory-whitespace';\nimport { markdownLineEnding, markdownLineEndingOrSpace, markdownSpace } from 'micromark-util-character';\nimport { normalizeIdentifier } from 'micromark-util-normalize-identifier';\n/** @type {Construct} */\nexport const definition = {\n  name: 'definition',\n  tokenize: tokenizeDefinition\n};\n\n/** @type {Construct} */\nconst titleBefore = {\n  tokenize: tokenizeTitleBefore,\n  partial: true\n};\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDefinition(effects, ok, nok) {\n  const self = this;\n  /** @type {string} */\n  let identifier;\n  return start;\n\n  /**\n   * At start of a definition.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // Do not interrupt paragraphs (but do follow definitions).\n    // To do: do `interrupt` the way `markdown-rs` does.\n    // To do: parse whitespace the way `markdown-rs` does.\n    effects.enter(\"definition\");\n    return before(code);\n  }\n\n  /**\n   * After optional whitespace, at `[`.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    // To do: parse whitespace the way `markdown-rs` does.\n\n    return factoryLabel.call(self, effects, labelAfter,\n    // Note: we don’t need to reset the way `markdown-rs` does.\n    nok, \"definitionLabel\", \"definitionLabelMarker\", \"definitionLabelString\")(code);\n  }\n\n  /**\n   * After label.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1));\n    if (code === 58) {\n      effects.enter(\"definitionMarker\");\n      effects.consume(code);\n      effects.exit(\"definitionMarker\");\n      return markerAfter;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After marker.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function markerAfter(code) {\n    // Note: whitespace is optional.\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, destinationBefore)(code) : destinationBefore(code);\n  }\n\n  /**\n   * Before destination.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function destinationBefore(code) {\n    return factoryDestination(effects, destinationAfter,\n    // Note: we don’t need to reset the way `markdown-rs` does.\n    nok, \"definitionDestination\", \"definitionDestinationLiteral\", \"definitionDestinationLiteralMarker\", \"definitionDestinationRaw\", \"definitionDestinationString\")(code);\n  }\n\n  /**\n   * After destination.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function destinationAfter(code) {\n    return effects.attempt(titleBefore, after, after)(code);\n  }\n\n  /**\n   * After definition.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return markdownSpace(code) ? factorySpace(effects, afterWhitespace, \"whitespace\")(code) : afterWhitespace(code);\n  }\n\n  /**\n   * After definition, after optional whitespace.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterWhitespace(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"definition\");\n\n      // Note: we don’t care about uniqueness.\n      // It’s likely that that doesn’t happen very frequently.\n      // It is more likely that it wastes precious time.\n      self.parser.defined.push(identifier);\n\n      // To do: `markdown-rs` interrupt.\n      // // You’d be interrupting.\n      // tokenizer.interrupt = true\n      return ok(code);\n    }\n    return nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTitleBefore(effects, ok, nok) {\n  return titleBefore;\n\n  /**\n   * After destination, at whitespace.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleBefore(code) {\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, beforeMarker)(code) : nok(code);\n  }\n\n  /**\n   * At title.\n   *\n   * ```markdown\n   *   | [a]: b\n   * > | \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeMarker(code) {\n    return factoryTitle(effects, titleAfter, nok, \"definitionTitle\", \"definitionTitleMarker\", \"definitionTitleString\")(code);\n  }\n\n  /**\n   * After title.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleAfter(code) {\n    return markdownSpace(code) ? factorySpace(effects, titleAfterOptionalWhitespace, \"whitespace\")(code) : titleAfterOptionalWhitespace(code);\n  }\n\n  /**\n   * After title, after optional whitespace.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleAfterOptionalWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { markdownLineEnding } from 'micromark-util-character';\n/** @type {Construct} */\nexport const hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n};\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start;\n\n  /**\n   * Start of a hard break (escape).\n   *\n   * ```markdown\n   * > | a\\\n   *      ^\n   *   | b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"hardBreakEscape\");\n    effects.consume(code);\n    return after;\n  }\n\n  /**\n   * After `\\`, at eol.\n   *\n   * ```markdown\n   * > | a\\\n   *       ^\n   *   | b\n   * ```\n   *\n   *  @type {State}\n   */\n  function after(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit(\"hardBreakEscape\");\n      return ok(code);\n    }\n    return nok(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownLineEndingOrSpace, markdownSpace } from 'micromark-util-character';\nimport { splice } from 'micromark-util-chunked';\n/** @type {Construct} */\nexport const headingAtx = {\n  name: 'headingAtx',\n  tokenize: tokenizeHeadingAtx,\n  resolve: resolveHeadingAtx\n};\n\n/** @type {Resolver} */\nfunction resolveHeadingAtx(events, context) {\n  let contentEnd = events.length - 2;\n  let contentStart = 3;\n  /** @type {Token} */\n  let content;\n  /** @type {Token} */\n  let text;\n\n  // Prefix whitespace, part of the opening.\n  if (events[contentStart][1].type === \"whitespace\") {\n    contentStart += 2;\n  }\n\n  // Suffix whitespace, part of the closing.\n  if (contentEnd - 2 > contentStart && events[contentEnd][1].type === \"whitespace\") {\n    contentEnd -= 2;\n  }\n  if (events[contentEnd][1].type === \"atxHeadingSequence\" && (contentStart === contentEnd - 1 || contentEnd - 4 > contentStart && events[contentEnd - 2][1].type === \"whitespace\")) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4;\n  }\n  if (contentEnd > contentStart) {\n    content = {\n      type: \"atxHeadingText\",\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    };\n    text = {\n      type: \"chunkText\",\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      contentType: \"text\"\n    };\n    splice(events, contentStart, contentEnd - contentStart + 1, [['enter', content, context], ['enter', text, context], ['exit', text, context], ['exit', content, context]]);\n  }\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHeadingAtx(effects, ok, nok) {\n  let size = 0;\n  return start;\n\n  /**\n   * Start of a heading (atx).\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse indent like `markdown-rs`.\n    effects.enter(\"atxHeading\");\n    return before(code);\n  }\n\n  /**\n   * After optional whitespace, at `#`.\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter(\"atxHeadingSequence\");\n    return sequenceOpen(code);\n  }\n\n  /**\n   * In opening sequence.\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === 35 && size++ < 6) {\n      effects.consume(code);\n      return sequenceOpen;\n    }\n\n    // Always at least one `#`.\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit(\"atxHeadingSequence\");\n      return atBreak(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * After something, before something else.\n   *\n   * ```markdown\n   * > | ## aa\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === 35) {\n      effects.enter(\"atxHeadingSequence\");\n      return sequenceFurther(code);\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"atxHeading\");\n      // To do: interrupt like `markdown-rs`.\n      // // Feel free to interrupt.\n      // tokenizer.interrupt = false\n      return ok(code);\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, \"whitespace\")(code);\n    }\n\n    // To do: generate `data` tokens, add the `text` token later.\n    // Needs edit map, see: `markdown.rs`.\n    effects.enter(\"atxHeadingText\");\n    return data(code);\n  }\n\n  /**\n   * In further sequence (after whitespace).\n   *\n   * Could be normal “visible” hashes in the heading or a final sequence.\n   *\n   * ```markdown\n   * > | ## aa ##\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceFurther(code) {\n    if (code === 35) {\n      effects.consume(code);\n      return sequenceFurther;\n    }\n    effects.exit(\"atxHeadingSequence\");\n    return atBreak(code);\n  }\n\n  /**\n   * In text.\n   *\n   * ```markdown\n   * > | ## aa\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function data(code) {\n    if (code === null || code === 35 || markdownLineEndingOrSpace(code)) {\n      effects.exit(\"atxHeadingText\");\n      return atBreak(code);\n    }\n    effects.consume(code);\n    return data;\n  }\n}","/**\n * List of lowercase HTML “block” tag names.\n *\n * The list, when parsing HTML (flow), results in more relaxed rules (condition\n * 6).\n * Because they are known blocks, the HTML-like syntax doesn’t have to be\n * strictly parsed.\n * For tag names not in this list, a more strict algorithm (condition 7) is used\n * to detect whether the HTML-like syntax is seen as HTML (flow) or not.\n *\n * This is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * > 👉 **Note**: `search` was added in `CommonMark@0.31`.\n */\nexport const htmlBlockNames = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'search',\n  'section',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n\n/**\n * List of lowercase HTML “raw” tag names.\n *\n * The list, when parsing HTML (flow), results in HTML that can include lines\n * without exiting, until a closing tag also in this list is found (condition\n * 1).\n *\n * This module is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * > 👉 **Note**: `textarea` was added in `CommonMark@0.30`.\n */\nexport const htmlRawNames = ['pre', 'script', 'style', 'textarea']\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { asciiAlpha, asciiAlphanumeric, markdownLineEnding, markdownLineEndingOrSpace, markdownSpace } from 'micromark-util-character';\nimport { htmlBlockNames, htmlRawNames } from 'micromark-util-html-tag-name';\nimport { blankLine } from './blank-line.js';\n\n/** @type {Construct} */\nexport const htmlFlow = {\n  name: 'htmlFlow',\n  tokenize: tokenizeHtmlFlow,\n  resolveTo: resolveToHtmlFlow,\n  concrete: true\n};\n\n/** @type {Construct} */\nconst blankLineBefore = {\n  tokenize: tokenizeBlankLineBefore,\n  partial: true\n};\nconst nonLazyContinuationStart = {\n  tokenize: tokenizeNonLazyContinuationStart,\n  partial: true\n};\n\n/** @type {Resolver} */\nfunction resolveToHtmlFlow(events) {\n  let index = events.length;\n  while (index--) {\n    if (events[index][0] === 'enter' && events[index][1].type === \"htmlFlow\") {\n      break;\n    }\n  }\n  if (index > 1 && events[index - 2][1].type === \"linePrefix\") {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start;\n    // Add the prefix start to the HTML line token.\n    events[index + 1][1].start = events[index - 2][1].start;\n    // Remove the line prefix.\n    events.splice(index - 2, 2);\n  }\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  const self = this;\n  /** @type {number} */\n  let marker;\n  /** @type {boolean} */\n  let closingTag;\n  /** @type {string} */\n  let buffer;\n  /** @type {number} */\n  let index;\n  /** @type {Code} */\n  let markerB;\n  return start;\n\n  /**\n   * Start of HTML (flow).\n   *\n   * ```markdown\n   * > | <x />\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse indent like `markdown-rs`.\n    return before(code);\n  }\n\n  /**\n   * At `<`, after optional whitespace.\n   *\n   * ```markdown\n   * > | <x />\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter(\"htmlFlow\");\n    effects.enter(\"htmlFlowData\");\n    effects.consume(code);\n    return open;\n  }\n\n  /**\n   * After `<`, at tag name or other stuff.\n   *\n   * ```markdown\n   * > | <x />\n   *      ^\n   * > | <!doctype>\n   *      ^\n   * > | <!--xxx-->\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code);\n      return declarationOpen;\n    }\n    if (code === 47) {\n      effects.consume(code);\n      closingTag = true;\n      return tagCloseStart;\n    }\n    if (code === 63) {\n      effects.consume(code);\n      marker = 3;\n      // To do:\n      // tokenizer.concrete = true\n      // To do: use `markdown-rs` style interrupt.\n      // While we’re in an instruction instead of a declaration, we’re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n      return self.interrupt ? ok : continuationDeclarationInside;\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      // @ts-expect-error: not null.\n      buffer = String.fromCharCode(code);\n      return tagName;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `<!`, at declaration, comment, or CDATA.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *       ^\n   * > | <!--xxx-->\n   *       ^\n   * > | <![CDATA[>&<]]>\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code);\n      marker = 2;\n      return commentOpenInside;\n    }\n    if (code === 91) {\n      effects.consume(code);\n      marker = 5;\n      index = 0;\n      return cdataOpenInside;\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      marker = 4;\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuationDeclarationInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `<!-`, inside a comment, at another `-`.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code);\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuationDeclarationInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `<![`, inside CDATA, expecting `CDATA[`.\n   *\n   * ```markdown\n   * > | <![CDATA[>&<]]>\n   *        ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataOpenInside(code) {\n    const value = \"CDATA[\";\n    if (code === value.charCodeAt(index++)) {\n      effects.consume(code);\n      if (index === value.length) {\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok : continuation;\n      }\n      return cdataOpenInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `</`, in closing tag, at tag name.\n   *\n   * ```markdown\n   * > | </x>\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      // @ts-expect-error: not null.\n      buffer = String.fromCharCode(code);\n      return tagName;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In tag name.\n   *\n   * ```markdown\n   * > | <ab>\n   *      ^^\n   * > | </ab>\n   *       ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagName(code) {\n    if (code === null || code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      const slash = code === 47;\n      const name = buffer.toLowerCase();\n      if (!slash && !closingTag && htmlRawNames.includes(name)) {\n        marker = 1;\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok(code) : continuation(code);\n      }\n      if (htmlBlockNames.includes(buffer.toLowerCase())) {\n        marker = 6;\n        if (slash) {\n          effects.consume(code);\n          return basicSelfClosing;\n        }\n\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok(code) : continuation(code);\n      }\n      marker = 7;\n      // Do not support complete HTML when interrupting.\n      return self.interrupt && !self.parser.lazy[self.now().line] ? nok(code) : closingTag ? completeClosingTagAfter(code) : completeAttributeNameBefore(code);\n    }\n\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      buffer += String.fromCharCode(code);\n      return tagName;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After closing slash of a basic tag name.\n   *\n   * ```markdown\n   * > | <div/>\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function basicSelfClosing(code) {\n    if (code === 62) {\n      effects.consume(code);\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuation;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After closing slash of a complete tag name.\n   *\n   * ```markdown\n   * > | <x/>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeClosingTagAfter;\n    }\n    return completeEnd(code);\n  }\n\n  /**\n   * At an attribute name.\n   *\n   * At first, this state is used after a complete tag name, after whitespace,\n   * where it expects optional attributes or the end of the tag.\n   * It is also reused after attributes, when expecting more optional\n   * attributes.\n   *\n   * ```markdown\n   * > | <a />\n   *        ^\n   * > | <a :b>\n   *        ^\n   * > | <a _b>\n   *        ^\n   * > | <a b>\n   *        ^\n   * > | <a >\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeNameBefore(code) {\n    if (code === 47) {\n      effects.consume(code);\n      return completeEnd;\n    }\n\n    // ASCII alphanumerical and `:` and `_`.\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code);\n      return completeAttributeName;\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeAttributeNameBefore;\n    }\n    return completeEnd(code);\n  }\n\n  /**\n   * In attribute name.\n   *\n   * ```markdown\n   * > | <a :b>\n   *         ^\n   * > | <a _b>\n   *         ^\n   * > | <a b>\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeName(code) {\n    // ASCII alphanumerical and `-`, `.`, `:`, and `_`.\n    if (code === 45 || code === 46 || code === 58 || code === 95 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      return completeAttributeName;\n    }\n    return completeAttributeNameAfter(code);\n  }\n\n  /**\n   * After attribute name, at an optional initializer, the end of the tag, or\n   * whitespace.\n   *\n   * ```markdown\n   * > | <a b>\n   *         ^\n   * > | <a b=c>\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code);\n      return completeAttributeValueBefore;\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeAttributeNameAfter;\n    }\n    return completeAttributeNameBefore(code);\n  }\n\n  /**\n   * Before unquoted, double quoted, or single quoted attribute value, allowing\n   * whitespace.\n   *\n   * ```markdown\n   * > | <a b=c>\n   *          ^\n   * > | <a b=\"c\">\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueBefore(code) {\n    if (code === null || code === 60 || code === 61 || code === 62 || code === 96) {\n      return nok(code);\n    }\n    if (code === 34 || code === 39) {\n      effects.consume(code);\n      markerB = code;\n      return completeAttributeValueQuoted;\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeAttributeValueBefore;\n    }\n    return completeAttributeValueUnquoted(code);\n  }\n\n  /**\n   * In double or single quoted attribute value.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *           ^\n   * > | <a b='c'>\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueQuoted(code) {\n    if (code === markerB) {\n      effects.consume(code);\n      markerB = null;\n      return completeAttributeValueQuotedAfter;\n    }\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return completeAttributeValueQuoted;\n  }\n\n  /**\n   * In unquoted attribute value.\n   *\n   * ```markdown\n   * > | <a b=c>\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueUnquoted(code) {\n    if (code === null || code === 34 || code === 39 || code === 47 || code === 60 || code === 61 || code === 62 || code === 96 || markdownLineEndingOrSpace(code)) {\n      return completeAttributeNameAfter(code);\n    }\n    effects.consume(code);\n    return completeAttributeValueUnquoted;\n  }\n\n  /**\n   * After double or single quoted attribute value, before whitespace or the\n   * end of the tag.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownSpace(code)) {\n      return completeAttributeNameBefore(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * In certain circumstances of a complete tag where only an `>` is allowed.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeEnd(code) {\n    if (code === 62) {\n      effects.consume(code);\n      return completeAfter;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `>` in a complete tag.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAfter(code) {\n    if (code === null || markdownLineEnding(code)) {\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return continuation(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeAfter;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In continuation of any HTML kind.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuation(code) {\n    if (code === 45 && marker === 2) {\n      effects.consume(code);\n      return continuationCommentInside;\n    }\n    if (code === 60 && marker === 1) {\n      effects.consume(code);\n      return continuationRawTagOpen;\n    }\n    if (code === 62 && marker === 4) {\n      effects.consume(code);\n      return continuationClose;\n    }\n    if (code === 63 && marker === 3) {\n      effects.consume(code);\n      return continuationDeclarationInside;\n    }\n    if (code === 93 && marker === 5) {\n      effects.consume(code);\n      return continuationCdataInside;\n    }\n    if (markdownLineEnding(code) && (marker === 6 || marker === 7)) {\n      effects.exit(\"htmlFlowData\");\n      return effects.check(blankLineBefore, continuationAfter, continuationStart)(code);\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"htmlFlowData\");\n      return continuationStart(code);\n    }\n    effects.consume(code);\n    return continuation;\n  }\n\n  /**\n   * In continuation, at eol.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   *   | asd\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationStart(code) {\n    return effects.check(nonLazyContinuationStart, continuationStartNonLazy, continuationAfter)(code);\n  }\n\n  /**\n   * In continuation, at eol, before non-lazy content.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   *   | asd\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationStartNonLazy(code) {\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return continuationBefore;\n  }\n\n  /**\n   * In continuation, before non-lazy content.\n   *\n   * ```markdown\n   *   | <x>\n   * > | asd\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return continuationStart(code);\n    }\n    effects.enter(\"htmlFlowData\");\n    return continuation(code);\n  }\n\n  /**\n   * In comment continuation, after one `-`, expecting another.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationCommentInside(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return continuationDeclarationInside;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In raw continuation, after `<`, at `/`.\n   *\n   * ```markdown\n   * > | <script>console.log(1)</script>\n   *                            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationRawTagOpen(code) {\n    if (code === 47) {\n      effects.consume(code);\n      buffer = '';\n      return continuationRawEndTag;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In raw continuation, after `</`, in a raw tag name.\n   *\n   * ```markdown\n   * > | <script>console.log(1)</script>\n   *                             ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationRawEndTag(code) {\n    if (code === 62) {\n      const name = buffer.toLowerCase();\n      if (htmlRawNames.includes(name)) {\n        effects.consume(code);\n        return continuationClose;\n      }\n      return continuation(code);\n    }\n    if (asciiAlpha(code) && buffer.length < 8) {\n      effects.consume(code);\n      // @ts-expect-error: not null.\n      buffer += String.fromCharCode(code);\n      return continuationRawEndTag;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In cdata continuation, after `]`, expecting `]>`.\n   *\n   * ```markdown\n   * > | <![CDATA[>&<]]>\n   *                  ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationCdataInside(code) {\n    if (code === 93) {\n      effects.consume(code);\n      return continuationDeclarationInside;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In declaration or instruction continuation, at `>`.\n   *\n   * ```markdown\n   * > | <!-->\n   *         ^\n   * > | <?>\n   *       ^\n   * > | <!q>\n   *        ^\n   * > | <!--ab-->\n   *             ^\n   * > | <![CDATA[>&<]]>\n   *                   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationDeclarationInside(code) {\n    if (code === 62) {\n      effects.consume(code);\n      return continuationClose;\n    }\n\n    // More dashes.\n    if (code === 45 && marker === 2) {\n      effects.consume(code);\n      return continuationDeclarationInside;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In closed continuation: everything we get until the eol/eof is part of it.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationClose(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"htmlFlowData\");\n      return continuationAfter(code);\n    }\n    effects.consume(code);\n    return continuationClose;\n  }\n\n  /**\n   * Done.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationAfter(code) {\n    effects.exit(\"htmlFlow\");\n    // // Feel free to interrupt.\n    // tokenizer.interrupt = false\n    // // No longer concrete.\n    // tokenizer.concrete = false\n    return ok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeNonLazyContinuationStart(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * At eol, before continuation.\n   *\n   * ```markdown\n   * > | * ```js\n   *            ^\n   *   | b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return after;\n    }\n    return nok(code);\n  }\n\n  /**\n   * A continuation.\n   *\n   * ```markdown\n   *   | * ```js\n   * > | b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return self.parser.lazy[self.now().line] ? nok(code) : ok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlankLineBefore(effects, ok, nok) {\n  return start;\n\n  /**\n   * Before eol, expecting blank line.\n   *\n   * ```markdown\n   * > | <div>\n   *          ^\n   *   |\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return effects.attempt(blankLine, ok, nok);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { asciiAlpha, asciiAlphanumeric, markdownLineEnding, markdownLineEndingOrSpace, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n};\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHtmlText(effects, ok, nok) {\n  const self = this;\n  /** @type {NonNullable<Code> | undefined} */\n  let marker;\n  /** @type {number} */\n  let index;\n  /** @type {State} */\n  let returnState;\n  return start;\n\n  /**\n   * Start of HTML (text).\n   *\n   * ```markdown\n   * > | a <b> c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"htmlText\");\n    effects.enter(\"htmlTextData\");\n    effects.consume(code);\n    return open;\n  }\n\n  /**\n   * After `<`, at tag name or other stuff.\n   *\n   * ```markdown\n   * > | a <b> c\n   *        ^\n   * > | a <!doctype> c\n   *        ^\n   * > | a <!--b--> c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code);\n      return declarationOpen;\n    }\n    if (code === 47) {\n      effects.consume(code);\n      return tagCloseStart;\n    }\n    if (code === 63) {\n      effects.consume(code);\n      return instruction;\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return tagOpen;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `<!`, at declaration, comment, or CDATA.\n   *\n   * ```markdown\n   * > | a <!doctype> c\n   *         ^\n   * > | a <!--b--> c\n   *         ^\n   * > | a <![CDATA[>&<]]> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return commentOpenInside;\n    }\n    if (code === 91) {\n      effects.consume(code);\n      index = 0;\n      return cdataOpenInside;\n    }\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return declaration;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In a comment, after `<!-`, at another `-`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return commentEnd;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In comment.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function comment(code) {\n    if (code === null) {\n      return nok(code);\n    }\n    if (code === 45) {\n      effects.consume(code);\n      return commentClose;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = comment;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return comment;\n  }\n\n  /**\n   * In comment, after `-`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return commentEnd;\n    }\n    return comment(code);\n  }\n\n  /**\n   * In comment, after `--`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentEnd(code) {\n    return code === 62 ? end(code) : code === 45 ? commentClose(code) : comment(code);\n  }\n\n  /**\n   * After `<![`, in CDATA, expecting `CDATA[`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *          ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataOpenInside(code) {\n    const value = \"CDATA[\";\n    if (code === value.charCodeAt(index++)) {\n      effects.consume(code);\n      return index === value.length ? cdata : cdataOpenInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In CDATA.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                ^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdata(code) {\n    if (code === null) {\n      return nok(code);\n    }\n    if (code === 93) {\n      effects.consume(code);\n      return cdataClose;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = cdata;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return cdata;\n  }\n\n  /**\n   * In CDATA, after `]`, at another `]`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code);\n      return cdataEnd;\n    }\n    return cdata(code);\n  }\n\n  /**\n   * In CDATA, after `]]`, at `>`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code);\n    }\n    if (code === 93) {\n      effects.consume(code);\n      return cdataEnd;\n    }\n    return cdata(code);\n  }\n\n  /**\n   * In declaration.\n   *\n   * ```markdown\n   * > | a <!b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code);\n    }\n    if (markdownLineEnding(code)) {\n      returnState = declaration;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return declaration;\n  }\n\n  /**\n   * In instruction.\n   *\n   * ```markdown\n   * > | a <?b?> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function instruction(code) {\n    if (code === null) {\n      return nok(code);\n    }\n    if (code === 63) {\n      effects.consume(code);\n      return instructionClose;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = instruction;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return instruction;\n  }\n\n  /**\n   * In instruction, after `?`, at `>`.\n   *\n   * ```markdown\n   * > | a <?b?> c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code);\n  }\n\n  /**\n   * After `</`, in closing tag, at tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseStart(code) {\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return tagClose;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `</x`, in a tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagClose(code) {\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      return tagClose;\n    }\n    return tagCloseBetween(code);\n  }\n\n  /**\n   * In closing tag, after tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween;\n      return lineEndingBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return tagCloseBetween;\n    }\n    return end(code);\n  }\n\n  /**\n   * After `<x`, in opening tag name.\n   *\n   * ```markdown\n   * > | a <b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpen(code) {\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      return tagOpen;\n    }\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * In opening tag, after tag name.\n   *\n   * ```markdown\n   * > | a <b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code);\n      return end;\n    }\n\n    // ASCII alphabetical and `:` and `_`.\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code);\n      return tagOpenAttributeName;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween;\n      return lineEndingBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return tagOpenBetween;\n    }\n    return end(code);\n  }\n\n  /**\n   * In attribute name.\n   *\n   * ```markdown\n   * > | a <b c> d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeName(code) {\n    // ASCII alphabetical and `-`, `.`, `:`, and `_`.\n    if (code === 45 || code === 46 || code === 58 || code === 95 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      return tagOpenAttributeName;\n    }\n    return tagOpenAttributeNameAfter(code);\n  }\n\n  /**\n   * After attribute name, before initializer, the end of the tag, or\n   * whitespace.\n   *\n   * ```markdown\n   * > | a <b c> d\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code);\n      return tagOpenAttributeValueBefore;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter;\n      return lineEndingBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return tagOpenAttributeNameAfter;\n    }\n    return tagOpenBetween(code);\n  }\n\n  /**\n   * Before unquoted, double quoted, or single quoted attribute value, allowing\n   * whitespace.\n   *\n   * ```markdown\n   * > | a <b c=d> e\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueBefore(code) {\n    if (code === null || code === 60 || code === 61 || code === 62 || code === 96) {\n      return nok(code);\n    }\n    if (code === 34 || code === 39) {\n      effects.consume(code);\n      marker = code;\n      return tagOpenAttributeValueQuoted;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore;\n      return lineEndingBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return tagOpenAttributeValueBefore;\n    }\n    effects.consume(code);\n    return tagOpenAttributeValueUnquoted;\n  }\n\n  /**\n   * In double or single quoted attribute value.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code);\n      marker = undefined;\n      return tagOpenAttributeValueQuotedAfter;\n    }\n    if (code === null) {\n      return nok(code);\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return tagOpenAttributeValueQuoted;\n  }\n\n  /**\n   * In unquoted attribute value.\n   *\n   * ```markdown\n   * > | a <b c=d> e\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueUnquoted(code) {\n    if (code === null || code === 34 || code === 39 || code === 60 || code === 61 || code === 96) {\n      return nok(code);\n    }\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code);\n    }\n    effects.consume(code);\n    return tagOpenAttributeValueUnquoted;\n  }\n\n  /**\n   * After double or single quoted attribute value, before whitespace or the end\n   * of the tag.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * In certain circumstances of a tag where only an `>` is allowed.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code);\n      effects.exit(\"htmlTextData\");\n      effects.exit(\"htmlText\");\n      return ok;\n    }\n    return nok(code);\n  }\n\n  /**\n   * At eol.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   * > | a <!--a\n   *            ^\n   *   | b-->\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingBefore(code) {\n    effects.exit(\"htmlTextData\");\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return lineEndingAfter;\n  }\n\n  /**\n   * After eol, at optional whitespace.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   *   | a <!--a\n   * > | b-->\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingAfter(code) {\n    // Always populated by defaults.\n\n    return markdownSpace(code) ? factorySpace(effects, lineEndingAfterPrefix, \"linePrefix\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4)(code) : lineEndingAfterPrefix(code);\n  }\n\n  /**\n   * After eol, after optional whitespace.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   *   | a <!--a\n   * > | b-->\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingAfterPrefix(code) {\n    effects.enter(\"htmlTextData\");\n    return returnState(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { factoryDestination } from 'micromark-factory-destination';\nimport { factoryLabel } from 'micromark-factory-label';\nimport { factoryTitle } from 'micromark-factory-title';\nimport { factoryWhitespace } from 'micromark-factory-whitespace';\nimport { markdownLineEndingOrSpace } from 'micromark-util-character';\nimport { push, splice } from 'micromark-util-chunked';\nimport { normalizeIdentifier } from 'micromark-util-normalize-identifier';\nimport { resolveAll } from 'micromark-util-resolve-all';\n/** @type {Construct} */\nexport const labelEnd = {\n  name: 'labelEnd',\n  tokenize: tokenizeLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  resolveAll: resolveAllLabelEnd\n};\n\n/** @type {Construct} */\nconst resourceConstruct = {\n  tokenize: tokenizeResource\n};\n/** @type {Construct} */\nconst referenceFullConstruct = {\n  tokenize: tokenizeReferenceFull\n};\n/** @type {Construct} */\nconst referenceCollapsedConstruct = {\n  tokenize: tokenizeReferenceCollapsed\n};\n\n/** @type {Resolver} */\nfunction resolveAllLabelEnd(events) {\n  let index = -1;\n  while (++index < events.length) {\n    const token = events[index][1];\n    if (token.type === \"labelImage\" || token.type === \"labelLink\" || token.type === \"labelEnd\") {\n      // Remove the marker.\n      events.splice(index + 1, token.type === \"labelImage\" ? 4 : 2);\n      token.type = \"data\";\n      index++;\n    }\n  }\n  return events;\n}\n\n/** @type {Resolver} */\nfunction resolveToLabelEnd(events, context) {\n  let index = events.length;\n  let offset = 0;\n  /** @type {Token} */\n  let token;\n  /** @type {number | undefined} */\n  let open;\n  /** @type {number | undefined} */\n  let close;\n  /** @type {Array<Event>} */\n  let media;\n\n  // Find an opening.\n  while (index--) {\n    token = events[index][1];\n    if (open) {\n      // If we see another link, or inactive link label, we’ve been here before.\n      if (token.type === \"link\" || token.type === \"labelLink\" && token._inactive) {\n        break;\n      }\n\n      // Mark other link openings as inactive, as we can’t have links in\n      // links.\n      if (events[index][0] === 'enter' && token.type === \"labelLink\") {\n        token._inactive = true;\n      }\n    } else if (close) {\n      if (events[index][0] === 'enter' && (token.type === \"labelImage\" || token.type === \"labelLink\") && !token._balanced) {\n        open = index;\n        if (token.type !== \"labelLink\") {\n          offset = 2;\n          break;\n        }\n      }\n    } else if (token.type === \"labelEnd\") {\n      close = index;\n    }\n  }\n  const group = {\n    type: events[open][1].type === \"labelLink\" ? \"link\" : \"image\",\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  };\n  const label = {\n    type: \"label\",\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[close][1].end)\n  };\n  const text = {\n    type: \"labelText\",\n    start: Object.assign({}, events[open + offset + 2][1].end),\n    end: Object.assign({}, events[close - 2][1].start)\n  };\n  media = [['enter', group, context], ['enter', label, context]];\n\n  // Opening marker.\n  media = push(media, events.slice(open + 1, open + offset + 3));\n\n  // Text open.\n  media = push(media, [['enter', text, context]]);\n\n  // Always populated by defaults.\n\n  // Between.\n  media = push(media, resolveAll(context.parser.constructs.insideSpan.null, events.slice(open + offset + 4, close - 3), context));\n\n  // Text close, marker close, label close.\n  media = push(media, [['exit', text, context], events[close - 2], events[close - 1], ['exit', label, context]]);\n\n  // Reference, resource, or so.\n  media = push(media, events.slice(close + 1));\n\n  // Media close.\n  media = push(media, [['exit', group, context]]);\n  splice(events, open, events.length, media);\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  const self = this;\n  let index = self.events.length;\n  /** @type {Token} */\n  let labelStart;\n  /** @type {boolean} */\n  let defined;\n\n  // Find an opening.\n  while (index--) {\n    if ((self.events[index][1].type === \"labelImage\" || self.events[index][1].type === \"labelLink\") && !self.events[index][1]._balanced) {\n      labelStart = self.events[index][1];\n      break;\n    }\n  }\n  return start;\n\n  /**\n   * Start of label end.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *       ^\n   * > | [a][b] c\n   *       ^\n   * > | [a][] b\n   *       ^\n   * > | [a] b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // If there is not an okay opening.\n    if (!labelStart) {\n      return nok(code);\n    }\n\n    // If the corresponding label (link) start is marked as inactive,\n    // it means we’d be wrapping a link, like this:\n    //\n    // ```markdown\n    // > | a [b [c](d) e](f) g.\n    //                  ^\n    // ```\n    //\n    // We can’t have that, so it’s just balanced brackets.\n    if (labelStart._inactive) {\n      return labelEndNok(code);\n    }\n    defined = self.parser.defined.includes(normalizeIdentifier(self.sliceSerialize({\n      start: labelStart.end,\n      end: self.now()\n    })));\n    effects.enter(\"labelEnd\");\n    effects.enter(\"labelMarker\");\n    effects.consume(code);\n    effects.exit(\"labelMarker\");\n    effects.exit(\"labelEnd\");\n    return after;\n  }\n\n  /**\n   * After `]`.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *       ^\n   * > | [a][b] c\n   *       ^\n   * > | [a][] b\n   *       ^\n   * > | [a] b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // Note: `markdown-rs` also parses GFM footnotes here, which for us is in\n    // an extension.\n\n    // Resource (`[asd](fgh)`)?\n    if (code === 40) {\n      return effects.attempt(resourceConstruct, labelEndOk, defined ? labelEndOk : labelEndNok)(code);\n    }\n\n    // Full (`[asd][fgh]`) or collapsed (`[asd][]`) reference?\n    if (code === 91) {\n      return effects.attempt(referenceFullConstruct, labelEndOk, defined ? referenceNotFull : labelEndNok)(code);\n    }\n\n    // Shortcut (`[asd]`) reference?\n    return defined ? labelEndOk(code) : labelEndNok(code);\n  }\n\n  /**\n   * After `]`, at `[`, but not at a full reference.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] b\n   *        ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceNotFull(code) {\n    return effects.attempt(referenceCollapsedConstruct, labelEndOk, labelEndNok)(code);\n  }\n\n  /**\n   * Done, we found something.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *           ^\n   * > | [a][b] c\n   *           ^\n   * > | [a][] b\n   *          ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEndOk(code) {\n    // Note: `markdown-rs` does a bunch of stuff here.\n    return ok(code);\n  }\n\n  /**\n   * Done, it’s nothing.\n   *\n   * There was an okay opening, but we didn’t match anything.\n   *\n   * ```markdown\n   * > | [a](b c\n   *        ^\n   * > | [a][b c\n   *        ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEndNok(code) {\n    labelStart._balanced = true;\n    return nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeResource(effects, ok, nok) {\n  return resourceStart;\n\n  /**\n   * At a resource.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceStart(code) {\n    effects.enter(\"resource\");\n    effects.enter(\"resourceMarker\");\n    effects.consume(code);\n    effects.exit(\"resourceMarker\");\n    return resourceBefore;\n  }\n\n  /**\n   * In resource, after `(`, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceBefore(code) {\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, resourceOpen)(code) : resourceOpen(code);\n  }\n\n  /**\n   * In resource, after optional whitespace, at `)` or a destination.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceOpen(code) {\n    if (code === 41) {\n      return resourceEnd(code);\n    }\n    return factoryDestination(effects, resourceDestinationAfter, resourceDestinationMissing, \"resourceDestination\", \"resourceDestinationLiteral\", \"resourceDestinationLiteralMarker\", \"resourceDestinationRaw\", \"resourceDestinationString\", 32)(code);\n  }\n\n  /**\n   * In resource, after destination, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceDestinationAfter(code) {\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, resourceBetween)(code) : resourceEnd(code);\n  }\n\n  /**\n   * At invalid destination.\n   *\n   * ```markdown\n   * > | [a](<<) b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceDestinationMissing(code) {\n    return nok(code);\n  }\n\n  /**\n   * In resource, after destination and whitespace, at `(` or title.\n   *\n   * ```markdown\n   * > | [a](b ) c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceBetween(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(effects, resourceTitleAfter, nok, \"resourceTitle\", \"resourceTitleMarker\", \"resourceTitleString\")(code);\n    }\n    return resourceEnd(code);\n  }\n\n  /**\n   * In resource, after title, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b \"c\") d\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceTitleAfter(code) {\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, resourceEnd)(code) : resourceEnd(code);\n  }\n\n  /**\n   * In resource, at `)`.\n   *\n   * ```markdown\n   * > | [a](b) d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceEnd(code) {\n    if (code === 41) {\n      effects.enter(\"resourceMarker\");\n      effects.consume(code);\n      effects.exit(\"resourceMarker\");\n      effects.exit(\"resource\");\n      return ok;\n    }\n    return nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeReferenceFull(effects, ok, nok) {\n  const self = this;\n  return referenceFull;\n\n  /**\n   * In a reference (full), at the `[`.\n   *\n   * ```markdown\n   * > | [a][b] d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFull(code) {\n    return factoryLabel.call(self, effects, referenceFullAfter, referenceFullMissing, \"reference\", \"referenceMarker\", \"referenceString\")(code);\n  }\n\n  /**\n   * In a reference (full), after `]`.\n   *\n   * ```markdown\n   * > | [a][b] d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFullAfter(code) {\n    return self.parser.defined.includes(normalizeIdentifier(self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1))) ? ok(code) : nok(code);\n  }\n\n  /**\n   * In reference (full) that was missing.\n   *\n   * ```markdown\n   * > | [a][b d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFullMissing(code) {\n    return nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeReferenceCollapsed(effects, ok, nok) {\n  return referenceCollapsedStart;\n\n  /**\n   * In reference (collapsed), at `[`.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceCollapsedStart(code) {\n    // We only attempt a collapsed label if there’s a `[`.\n\n    effects.enter(\"reference\");\n    effects.enter(\"referenceMarker\");\n    effects.consume(code);\n    effects.exit(\"referenceMarker\");\n    return referenceCollapsedOpen;\n  }\n\n  /**\n   * In reference (collapsed), at `]`.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] d\n   *         ^\n   * ```\n   *\n   *  @type {State}\n   */\n  function referenceCollapsedOpen(code) {\n    if (code === 93) {\n      effects.enter(\"referenceMarker\");\n      effects.consume(code);\n      effects.exit(\"referenceMarker\");\n      effects.exit(\"reference\");\n      return ok;\n    }\n    return nok(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { labelEnd } from './label-end.js';\n\n/** @type {Construct} */\nexport const labelStartImage = {\n  name: 'labelStartImage',\n  tokenize: tokenizeLabelStartImage,\n  resolveAll: labelEnd.resolveAll\n};\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLabelStartImage(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * Start of label (image) start.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"labelImage\");\n    effects.enter(\"labelImageMarker\");\n    effects.consume(code);\n    effects.exit(\"labelImageMarker\");\n    return open;\n  }\n\n  /**\n   * After `!`, at `[`.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 91) {\n      effects.enter(\"labelMarker\");\n      effects.consume(code);\n      effects.exit(\"labelMarker\");\n      effects.exit(\"labelImage\");\n      return after;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `![`.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *         ^\n   * ```\n   *\n   * This is needed in because, when GFM footnotes are enabled, images never\n   * form when started with a `^`.\n   * Instead, links form:\n   *\n   * ```markdown\n   * ![^a](b)\n   *\n   * ![^a][b]\n   *\n   * [b]: c\n   * ```\n   *\n   * ```html\n   * <p>!<a href=\\\"b\\\">^a</a></p>\n   * <p>!<a href=\\\"c\\\">^a</a></p>\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // To do: use a new field to do this, this is still needed for\n    // `micromark-extension-gfm-footnote`, but the `label-start-link`\n    // behavior isn’t.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs ? nok(code) : ok(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { labelEnd } from './label-end.js';\n\n/** @type {Construct} */\nexport const labelStartLink = {\n  name: 'labelStartLink',\n  tokenize: tokenizeLabelStartLink,\n  resolveAll: labelEnd.resolveAll\n};\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * Start of label (link) start.\n   *\n   * ```markdown\n   * > | a [b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"labelLink\");\n    effects.enter(\"labelMarker\");\n    effects.consume(code);\n    effects.exit(\"labelMarker\");\n    effects.exit(\"labelLink\");\n    return after;\n  }\n\n  /** @type {State} */\n  function after(code) {\n    // To do: this isn’t needed in `micromark-extension-gfm-footnote`,\n    // remove.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs ? nok(code) : ok(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\n/** @type {Construct} */\nexport const lineEnding = {\n  name: 'lineEnding',\n  tokenize: tokenizeLineEnding\n};\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLineEnding(effects, ok) {\n  return start;\n\n  /** @type {State} */\n  function start(code) {\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return factorySpace(effects, ok, \"linePrefix\");\n  }\n}","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n};\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  let size = 0;\n  /** @type {NonNullable<Code>} */\n  let marker;\n  return start;\n\n  /**\n   * Start of thematic break.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"thematicBreak\");\n    // To do: parse indent like `markdown-rs`.\n    return before(code);\n  }\n\n  /**\n   * After optional whitespace, at marker.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    marker = code;\n    return atBreak(code);\n  }\n\n  /**\n   * After something, before something else.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter(\"thematicBreakSequence\");\n      return sequence(code);\n    }\n    if (size >= 3 && (code === null || markdownLineEnding(code))) {\n      effects.exit(\"thematicBreak\");\n      return ok(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * In sequence.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code);\n      size++;\n      return sequence;\n    }\n    effects.exit(\"thematicBreakSequence\");\n    return markdownSpace(code) ? factorySpace(effects, atBreak, \"whitespace\")(code) : atBreak(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').ContainerState} ContainerState\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { asciiDigit, markdownSpace } from 'micromark-util-character';\nimport { blankLine } from './blank-line.js';\nimport { thematicBreak } from './thematic-break.js';\n\n/** @type {Construct} */\nexport const list = {\n  name: 'list',\n  tokenize: tokenizeListStart,\n  continuation: {\n    tokenize: tokenizeListContinuation\n  },\n  exit: tokenizeListEnd\n};\n\n/** @type {Construct} */\nconst listItemPrefixWhitespaceConstruct = {\n  tokenize: tokenizeListItemPrefixWhitespace,\n  partial: true\n};\n\n/** @type {Construct} */\nconst indentConstruct = {\n  tokenize: tokenizeIndent,\n  partial: true\n};\n\n// To do: `markdown-rs` parses list items on their own and later stitches them\n// together.\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeListStart(effects, ok, nok) {\n  const self = this;\n  const tail = self.events[self.events.length - 1];\n  let initialSize = tail && tail[1].type === \"linePrefix\" ? tail[2].sliceSerialize(tail[1], true).length : 0;\n  let size = 0;\n  return start;\n\n  /** @type {State} */\n  function start(code) {\n    const kind = self.containerState.type || (code === 42 || code === 43 || code === 45 ? \"listUnordered\" : \"listOrdered\");\n    if (kind === \"listUnordered\" ? !self.containerState.marker || code === self.containerState.marker : asciiDigit(code)) {\n      if (!self.containerState.type) {\n        self.containerState.type = kind;\n        effects.enter(kind, {\n          _container: true\n        });\n      }\n      if (kind === \"listUnordered\") {\n        effects.enter(\"listItemPrefix\");\n        return code === 42 || code === 45 ? effects.check(thematicBreak, nok, atMarker)(code) : atMarker(code);\n      }\n      if (!self.interrupt || code === 49) {\n        effects.enter(\"listItemPrefix\");\n        effects.enter(\"listItemValue\");\n        return inside(code);\n      }\n    }\n    return nok(code);\n  }\n\n  /** @type {State} */\n  function inside(code) {\n    if (asciiDigit(code) && ++size < 10) {\n      effects.consume(code);\n      return inside;\n    }\n    if ((!self.interrupt || size < 2) && (self.containerState.marker ? code === self.containerState.marker : code === 41 || code === 46)) {\n      effects.exit(\"listItemValue\");\n      return atMarker(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * @type {State}\n   **/\n  function atMarker(code) {\n    effects.enter(\"listItemMarker\");\n    effects.consume(code);\n    effects.exit(\"listItemMarker\");\n    self.containerState.marker = self.containerState.marker || code;\n    return effects.check(blankLine,\n    // Can’t be empty when interrupting.\n    self.interrupt ? nok : onBlank, effects.attempt(listItemPrefixWhitespaceConstruct, endOfPrefix, otherPrefix));\n  }\n\n  /** @type {State} */\n  function onBlank(code) {\n    self.containerState.initialBlankLine = true;\n    initialSize++;\n    return endOfPrefix(code);\n  }\n\n  /** @type {State} */\n  function otherPrefix(code) {\n    if (markdownSpace(code)) {\n      effects.enter(\"listItemPrefixWhitespace\");\n      effects.consume(code);\n      effects.exit(\"listItemPrefixWhitespace\");\n      return endOfPrefix;\n    }\n    return nok(code);\n  }\n\n  /** @type {State} */\n  function endOfPrefix(code) {\n    self.containerState.size = initialSize + self.sliceSerialize(effects.exit(\"listItemPrefix\"), true).length;\n    return ok(code);\n  }\n}\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeListContinuation(effects, ok, nok) {\n  const self = this;\n  self.containerState._closeFlow = undefined;\n  return effects.check(blankLine, onBlank, notBlank);\n\n  /** @type {State} */\n  function onBlank(code) {\n    self.containerState.furtherBlankLines = self.containerState.furtherBlankLines || self.containerState.initialBlankLine;\n\n    // We have a blank line.\n    // Still, try to consume at most the items size.\n    return factorySpace(effects, ok, \"listItemIndent\", self.containerState.size + 1)(code);\n  }\n\n  /** @type {State} */\n  function notBlank(code) {\n    if (self.containerState.furtherBlankLines || !markdownSpace(code)) {\n      self.containerState.furtherBlankLines = undefined;\n      self.containerState.initialBlankLine = undefined;\n      return notInCurrentItem(code);\n    }\n    self.containerState.furtherBlankLines = undefined;\n    self.containerState.initialBlankLine = undefined;\n    return effects.attempt(indentConstruct, ok, notInCurrentItem)(code);\n  }\n\n  /** @type {State} */\n  function notInCurrentItem(code) {\n    // While we do continue, we signal that the flow should be closed.\n    self.containerState._closeFlow = true;\n    // As we’re closing flow, we’re no longer interrupting.\n    self.interrupt = undefined;\n    // Always populated by defaults.\n\n    return factorySpace(effects, effects.attempt(list, ok, nok), \"linePrefix\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4)(code);\n  }\n}\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this;\n  return factorySpace(effects, afterPrefix, \"listItemIndent\", self.containerState.size + 1);\n\n  /** @type {State} */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1];\n    return tail && tail[1].type === \"listItemIndent\" && tail[2].sliceSerialize(tail[1], true).length === self.containerState.size ? ok(code) : nok(code);\n  }\n}\n\n/**\n * @type {Exiter}\n * @this {TokenizeContext}\n */\nfunction tokenizeListEnd(effects) {\n  effects.exit(this.containerState.type);\n}\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeListItemPrefixWhitespace(effects, ok, nok) {\n  const self = this;\n\n  // Always populated by defaults.\n\n  return factorySpace(effects, afterPrefix, \"listItemPrefixWhitespace\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4 + 1);\n\n  /** @type {State} */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1];\n    return !markdownSpace(code) && tail && tail[1].type === \"listItemPrefixWhitespace\" ? ok(code) : nok(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const setextUnderline = {\n  name: 'setextUnderline',\n  tokenize: tokenizeSetextUnderline,\n  resolveTo: resolveToSetextUnderline\n};\n\n/** @type {Resolver} */\nfunction resolveToSetextUnderline(events, context) {\n  // To do: resolve like `markdown-rs`.\n  let index = events.length;\n  /** @type {number | undefined} */\n  let content;\n  /** @type {number | undefined} */\n  let text;\n  /** @type {number | undefined} */\n  let definition;\n\n  // Find the opening of the content.\n  // It’ll always exist: we don’t tokenize if it isn’t there.\n  while (index--) {\n    if (events[index][0] === 'enter') {\n      if (events[index][1].type === \"content\") {\n        content = index;\n        break;\n      }\n      if (events[index][1].type === \"paragraph\") {\n        text = index;\n      }\n    }\n    // Exit\n    else {\n      if (events[index][1].type === \"content\") {\n        // Remove the content end (if needed we’ll add it later)\n        events.splice(index, 1);\n      }\n      if (!definition && events[index][1].type === \"definition\") {\n        definition = index;\n      }\n    }\n  }\n  const heading = {\n    type: \"setextHeading\",\n    start: Object.assign({}, events[text][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  };\n\n  // Change the paragraph to setext heading text.\n  events[text][1].type = \"setextHeadingText\";\n\n  // If we have definitions in the content, we’ll keep on having content,\n  // but we need move it.\n  if (definition) {\n    events.splice(text, 0, ['enter', heading, context]);\n    events.splice(definition + 1, 0, ['exit', events[content][1], context]);\n    events[content][1].end = Object.assign({}, events[definition][1].end);\n  } else {\n    events[content][1] = heading;\n  }\n\n  // Add the heading exit at the end.\n  events.push(['exit', heading, context]);\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeSetextUnderline(effects, ok, nok) {\n  const self = this;\n  /** @type {NonNullable<Code>} */\n  let marker;\n  return start;\n\n  /**\n   * At start of heading (setext) underline.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    let index = self.events.length;\n    /** @type {boolean | undefined} */\n    let paragraph;\n    // Find an opening.\n    while (index--) {\n      // Skip enter/exit of line ending, line prefix, and content.\n      // We can now either have a definition or a paragraph.\n      if (self.events[index][1].type !== \"lineEnding\" && self.events[index][1].type !== \"linePrefix\" && self.events[index][1].type !== \"content\") {\n        paragraph = self.events[index][1].type === \"paragraph\";\n        break;\n      }\n    }\n\n    // To do: handle lazy/pierce like `markdown-rs`.\n    // To do: parse indent like `markdown-rs`.\n    if (!self.parser.lazy[self.now().line] && (self.interrupt || paragraph)) {\n      effects.enter(\"setextHeadingLine\");\n      marker = code;\n      return before(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * After optional whitespace, at `-` or `=`.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter(\"setextHeadingLineSequence\");\n    return inside(code);\n  }\n\n  /**\n   * In sequence.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker) {\n      effects.consume(code);\n      return inside;\n    }\n    effects.exit(\"setextHeadingLineSequence\");\n    return markdownSpace(code) ? factorySpace(effects, after, \"lineSuffix\")(code) : after(code);\n  }\n\n  /**\n   * After sequence, after optional whitespace.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"setextHeadingLine\");\n      return ok(code);\n    }\n    return nok(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\nimport {blankLine, content} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {InitialConstruct} */\nexport const flow = {\n  tokenize: initializeFlow\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Initializer}\n */\nfunction initializeFlow(effects) {\n  const self = this\n  const initial = effects.attempt(\n    // Try to parse a blank line.\n    blankLine,\n    atBlankEnding,\n    // Try to parse initial flow (essentially, only code).\n    effects.attempt(\n      this.parser.constructs.flowInitial,\n      afterConstruct,\n      factorySpace(\n        effects,\n        effects.attempt(\n          this.parser.constructs.flow,\n          afterConstruct,\n          effects.attempt(content, afterConstruct)\n        ),\n        'linePrefix'\n      )\n    )\n  )\n  return initial\n\n  /** @type {State} */\n  function atBlankEnding(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    self.currentConstruct = undefined\n    return initial\n  }\n\n  /** @type {State} */\n  function afterConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    self.currentConstruct = undefined\n    return initial\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\nexport const resolver = {\n  resolveAll: createResolver()\n}\nexport const string = initializeFactory('string')\nexport const text = initializeFactory('text')\n\n/**\n * @param {'string' | 'text'} field\n * @returns {InitialConstruct}\n */\nfunction initializeFactory(field) {\n  return {\n    tokenize: initializeText,\n    resolveAll: createResolver(\n      field === 'text' ? resolveAllLineSuffixes : undefined\n    )\n  }\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Initializer}\n   */\n  function initializeText(effects) {\n    const self = this\n    const constructs = this.parser.constructs[field]\n    const text = effects.attempt(constructs, start, notText)\n    return start\n\n    /** @type {State} */\n    function start(code) {\n      return atBreak(code) ? text(code) : notText(code)\n    }\n\n    /** @type {State} */\n    function notText(code) {\n      if (code === null) {\n        effects.consume(code)\n        return\n      }\n      effects.enter('data')\n      effects.consume(code)\n      return data\n    }\n\n    /** @type {State} */\n    function data(code) {\n      if (atBreak(code)) {\n        effects.exit('data')\n        return text(code)\n      }\n\n      // Data.\n      effects.consume(code)\n      return data\n    }\n\n    /**\n     * @param {Code} code\n     * @returns {boolean}\n     */\n    function atBreak(code) {\n      if (code === null) {\n        return true\n      }\n      const list = constructs[code]\n      let index = -1\n      if (list) {\n        // Always populated by defaults.\n\n        while (++index < list.length) {\n          const item = list[index]\n          if (!item.previous || item.previous.call(self, self.previous)) {\n            return true\n          }\n        }\n      }\n      return false\n    }\n  }\n}\n\n/**\n * @param {Resolver | undefined} [extraResolver]\n * @returns {Resolver}\n */\nfunction createResolver(extraResolver) {\n  return resolveAllText\n\n  /** @type {Resolver} */\n  function resolveAllText(events, context) {\n    let index = -1\n    /** @type {number | undefined} */\n    let enter\n\n    // A rather boring computation (to merge adjacent `data` events) which\n    // improves mm performance by 29%.\n    while (++index <= events.length) {\n      if (enter === undefined) {\n        if (events[index] && events[index][1].type === 'data') {\n          enter = index\n          index++\n        }\n      } else if (!events[index] || events[index][1].type !== 'data') {\n        // Don’t do anything if there is one data token.\n        if (index !== enter + 2) {\n          events[enter][1].end = events[index - 1][1].end\n          events.splice(enter + 2, index - enter - 2)\n          index = enter + 2\n        }\n        enter = undefined\n      }\n    }\n    return extraResolver ? extraResolver(events, context) : events\n  }\n}\n\n/**\n * A rather ugly set of instructions which again looks at chunks in the input\n * stream.\n * The reason to do this here is that it is *much* faster to parse in reverse.\n * And that we can’t hook into `null` to split the line suffix before an EOF.\n * To do: figure out if we can make this into a clean utility, or even in core.\n * As it will be useful for GFMs literal autolink extension (and maybe even\n * tables?)\n *\n * @type {Resolver}\n */\nfunction resolveAllLineSuffixes(events, context) {\n  let eventIndex = 0 // Skip first.\n\n  while (++eventIndex <= events.length) {\n    if (\n      (eventIndex === events.length ||\n        events[eventIndex][1].type === 'lineEnding') &&\n      events[eventIndex - 1][1].type === 'data'\n    ) {\n      const data = events[eventIndex - 1][1]\n      const chunks = context.sliceStream(data)\n      let index = chunks.length\n      let bufferIndex = -1\n      let size = 0\n      /** @type {boolean | undefined} */\n      let tabs\n      while (index--) {\n        const chunk = chunks[index]\n        if (typeof chunk === 'string') {\n          bufferIndex = chunk.length\n          while (chunk.charCodeAt(bufferIndex - 1) === 32) {\n            size++\n            bufferIndex--\n          }\n          if (bufferIndex) break\n          bufferIndex = -1\n        }\n        // Number\n        else if (chunk === -2) {\n          tabs = true\n          size++\n        } else if (chunk === -1) {\n          // Empty\n        } else {\n          // Replacement character, exit.\n          index++\n          break\n        }\n      }\n      if (size) {\n        const token = {\n          type:\n            eventIndex === events.length || tabs || size < 2\n              ? 'lineSuffix'\n              : 'hardBreakTrailing',\n          start: {\n            line: data.end.line,\n            column: data.end.column - size,\n            offset: data.end.offset - size,\n            _index: data.start._index + index,\n            _bufferIndex: index\n              ? bufferIndex\n              : data.start._bufferIndex + bufferIndex\n          },\n          end: Object.assign({}, data.end)\n        }\n        data.end = Object.assign({}, token.start)\n        if (data.start.offset === data.end.offset) {\n          Object.assign(data, token)\n        } else {\n          events.splice(\n            eventIndex,\n            0,\n            ['enter', token, context],\n            ['exit', token, context]\n          )\n          eventIndex += 2\n        }\n      }\n      eventIndex++\n    }\n  }\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenType} TokenType\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\n/**\n * @callback Restore\n * @returns {undefined}\n *\n * @typedef Info\n * @property {Restore} restore\n * @property {number} from\n *\n * @callback ReturnHandle\n *   Handle a successful run.\n * @param {Construct} construct\n * @param {Info} info\n * @returns {undefined}\n */\n\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {resolveAll} from 'micromark-util-resolve-all'\n/**\n * Create a tokenizer.\n * Tokenizers deal with one type of data (e.g., containers, flow, text).\n * The parser is the object dealing with it all.\n * `initialize` works like other constructs, except that only its `tokenize`\n * function is used, in which case it doesn’t receive an `ok` or `nok`.\n * `from` can be given to set the point before the first character, although\n * when further lines are indented, they must be set with `defineSkip`.\n *\n * @param {ParseContext} parser\n * @param {InitialConstruct} initialize\n * @param {Omit<Point, '_bufferIndex' | '_index'> | undefined} [from]\n * @returns {TokenizeContext}\n */\nexport function createTokenizer(parser, initialize, from) {\n  /** @type {Point} */\n  let point = Object.assign(\n    from\n      ? Object.assign({}, from)\n      : {\n          line: 1,\n          column: 1,\n          offset: 0\n        },\n    {\n      _index: 0,\n      _bufferIndex: -1\n    }\n  )\n  /** @type {Record<string, number>} */\n  const columnStart = {}\n  /** @type {Array<Construct>} */\n  const resolveAllConstructs = []\n  /** @type {Array<Chunk>} */\n  let chunks = []\n  /** @type {Array<Token>} */\n  let stack = []\n  /** @type {boolean | undefined} */\n  let consumed = true\n\n  /**\n   * Tools used for tokenizing.\n   *\n   * @type {Effects}\n   */\n  const effects = {\n    consume,\n    enter,\n    exit,\n    attempt: constructFactory(onsuccessfulconstruct),\n    check: constructFactory(onsuccessfulcheck),\n    interrupt: constructFactory(onsuccessfulcheck, {\n      interrupt: true\n    })\n  }\n\n  /**\n   * State and tools for resolving and serializing.\n   *\n   * @type {TokenizeContext}\n   */\n  const context = {\n    previous: null,\n    code: null,\n    containerState: {},\n    events: [],\n    parser,\n    sliceStream,\n    sliceSerialize,\n    now,\n    defineSkip,\n    write\n  }\n\n  /**\n   * The state function.\n   *\n   * @type {State | undefined}\n   */\n  let state = initialize.tokenize.call(context, effects)\n\n  /**\n   * Track which character we expect to be consumed, to catch bugs.\n   *\n   * @type {Code}\n   */\n  let expectedCode\n  if (initialize.resolveAll) {\n    resolveAllConstructs.push(initialize)\n  }\n  return context\n\n  /** @type {TokenizeContext['write']} */\n  function write(slice) {\n    chunks = push(chunks, slice)\n    main()\n\n    // Exit if we’re not done, resolve might change stuff.\n    if (chunks[chunks.length - 1] !== null) {\n      return []\n    }\n    addResult(initialize, 0)\n\n    // Otherwise, resolve, and exit.\n    context.events = resolveAll(resolveAllConstructs, context.events, context)\n    return context.events\n  }\n\n  //\n  // Tools.\n  //\n\n  /** @type {TokenizeContext['sliceSerialize']} */\n  function sliceSerialize(token, expandTabs) {\n    return serializeChunks(sliceStream(token), expandTabs)\n  }\n\n  /** @type {TokenizeContext['sliceStream']} */\n  function sliceStream(token) {\n    return sliceChunks(chunks, token)\n  }\n\n  /** @type {TokenizeContext['now']} */\n  function now() {\n    // This is a hot path, so we clone manually instead of `Object.assign({}, point)`\n    const {line, column, offset, _index, _bufferIndex} = point\n    return {\n      line,\n      column,\n      offset,\n      _index,\n      _bufferIndex\n    }\n  }\n\n  /** @type {TokenizeContext['defineSkip']} */\n  function defineSkip(value) {\n    columnStart[value.line] = value.column\n    accountForPotentialSkip()\n  }\n\n  //\n  // State management.\n  //\n\n  /**\n   * Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\n   * `consume`).\n   * Here is where we walk through the chunks, which either include strings of\n   * several characters, or numerical character codes.\n   * The reason to do this in a loop instead of a call is so the stack can\n   * drain.\n   *\n   * @returns {undefined}\n   */\n  function main() {\n    /** @type {number} */\n    let chunkIndex\n    while (point._index < chunks.length) {\n      const chunk = chunks[point._index]\n\n      // If we’re in a buffer chunk, loop through it.\n      if (typeof chunk === 'string') {\n        chunkIndex = point._index\n        if (point._bufferIndex < 0) {\n          point._bufferIndex = 0\n        }\n        while (\n          point._index === chunkIndex &&\n          point._bufferIndex < chunk.length\n        ) {\n          go(chunk.charCodeAt(point._bufferIndex))\n        }\n      } else {\n        go(chunk)\n      }\n    }\n  }\n\n  /**\n   * Deal with one code.\n   *\n   * @param {Code} code\n   * @returns {undefined}\n   */\n  function go(code) {\n    consumed = undefined\n    expectedCode = code\n    state = state(code)\n  }\n\n  /** @type {Effects['consume']} */\n  function consume(code) {\n    if (markdownLineEnding(code)) {\n      point.line++\n      point.column = 1\n      point.offset += code === -3 ? 2 : 1\n      accountForPotentialSkip()\n    } else if (code !== -1) {\n      point.column++\n      point.offset++\n    }\n\n    // Not in a string chunk.\n    if (point._bufferIndex < 0) {\n      point._index++\n    } else {\n      point._bufferIndex++\n\n      // At end of string chunk.\n      // @ts-expect-error Points w/ non-negative `_bufferIndex` reference\n      // strings.\n      if (point._bufferIndex === chunks[point._index].length) {\n        point._bufferIndex = -1\n        point._index++\n      }\n    }\n\n    // Expose the previous character.\n    context.previous = code\n\n    // Mark as consumed.\n    consumed = true\n  }\n\n  /** @type {Effects['enter']} */\n  function enter(type, fields) {\n    /** @type {Token} */\n    // @ts-expect-error Patch instead of assign required fields to help GC.\n    const token = fields || {}\n    token.type = type\n    token.start = now()\n    context.events.push(['enter', token, context])\n    stack.push(token)\n    return token\n  }\n\n  /** @type {Effects['exit']} */\n  function exit(type) {\n    const token = stack.pop()\n    token.end = now()\n    context.events.push(['exit', token, context])\n    return token\n  }\n\n  /**\n   * Use results.\n   *\n   * @type {ReturnHandle}\n   */\n  function onsuccessfulconstruct(construct, info) {\n    addResult(construct, info.from)\n  }\n\n  /**\n   * Discard results.\n   *\n   * @type {ReturnHandle}\n   */\n  function onsuccessfulcheck(_, info) {\n    info.restore()\n  }\n\n  /**\n   * Factory to attempt/check/interrupt.\n   *\n   * @param {ReturnHandle} onreturn\n   * @param {{interrupt?: boolean | undefined} | undefined} [fields]\n   */\n  function constructFactory(onreturn, fields) {\n    return hook\n\n    /**\n     * Handle either an object mapping codes to constructs, a list of\n     * constructs, or a single construct.\n     *\n     * @param {Array<Construct> | Construct | ConstructRecord} constructs\n     * @param {State} returnState\n     * @param {State | undefined} [bogusState]\n     * @returns {State}\n     */\n    function hook(constructs, returnState, bogusState) {\n      /** @type {Array<Construct>} */\n      let listOfConstructs\n      /** @type {number} */\n      let constructIndex\n      /** @type {Construct} */\n      let currentConstruct\n      /** @type {Info} */\n      let info\n      return Array.isArray(constructs) /* c8 ignore next 1 */\n        ? handleListOfConstructs(constructs)\n        : 'tokenize' in constructs\n        ? // @ts-expect-error Looks like a construct.\n          handleListOfConstructs([constructs])\n        : handleMapOfConstructs(constructs)\n\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ConstructRecord} map\n       * @returns {State}\n       */\n      function handleMapOfConstructs(map) {\n        return start\n\n        /** @type {State} */\n        function start(code) {\n          const def = code !== null && map[code]\n          const all = code !== null && map.null\n          const list = [\n            // To do: add more extension tests.\n            /* c8 ignore next 2 */\n            ...(Array.isArray(def) ? def : def ? [def] : []),\n            ...(Array.isArray(all) ? all : all ? [all] : [])\n          ]\n          return handleListOfConstructs(list)(code)\n        }\n      }\n\n      /**\n       * Handle a list of construct.\n       *\n       * @param {Array<Construct>} list\n       * @returns {State}\n       */\n      function handleListOfConstructs(list) {\n        listOfConstructs = list\n        constructIndex = 0\n        if (list.length === 0) {\n          return bogusState\n        }\n        return handleConstruct(list[constructIndex])\n      }\n\n      /**\n       * Handle a single construct.\n       *\n       * @param {Construct} construct\n       * @returns {State}\n       */\n      function handleConstruct(construct) {\n        return start\n\n        /** @type {State} */\n        function start(code) {\n          // To do: not needed to store if there is no bogus state, probably?\n          // Currently doesn’t work because `inspect` in document does a check\n          // w/o a bogus, which doesn’t make sense. But it does seem to help perf\n          // by not storing.\n          info = store()\n          currentConstruct = construct\n          if (!construct.partial) {\n            context.currentConstruct = construct\n          }\n\n          // Always populated by defaults.\n\n          if (\n            construct.name &&\n            context.parser.constructs.disable.null.includes(construct.name)\n          ) {\n            return nok(code)\n          }\n          return construct.tokenize.call(\n            // If we do have fields, create an object w/ `context` as its\n            // prototype.\n            // This allows a “live binding”, which is needed for `interrupt`.\n            fields ? Object.assign(Object.create(context), fields) : context,\n            effects,\n            ok,\n            nok\n          )(code)\n        }\n      }\n\n      /** @type {State} */\n      function ok(code) {\n        consumed = true\n        onreturn(currentConstruct, info)\n        return returnState\n      }\n\n      /** @type {State} */\n      function nok(code) {\n        consumed = true\n        info.restore()\n        if (++constructIndex < listOfConstructs.length) {\n          return handleConstruct(listOfConstructs[constructIndex])\n        }\n        return bogusState\n      }\n    }\n  }\n\n  /**\n   * @param {Construct} construct\n   * @param {number} from\n   * @returns {undefined}\n   */\n  function addResult(construct, from) {\n    if (construct.resolveAll && !resolveAllConstructs.includes(construct)) {\n      resolveAllConstructs.push(construct)\n    }\n    if (construct.resolve) {\n      splice(\n        context.events,\n        from,\n        context.events.length - from,\n        construct.resolve(context.events.slice(from), context)\n      )\n    }\n    if (construct.resolveTo) {\n      context.events = construct.resolveTo(context.events, context)\n    }\n  }\n\n  /**\n   * Store state.\n   *\n   * @returns {Info}\n   */\n  function store() {\n    const startPoint = now()\n    const startPrevious = context.previous\n    const startCurrentConstruct = context.currentConstruct\n    const startEventsIndex = context.events.length\n    const startStack = Array.from(stack)\n    return {\n      restore,\n      from: startEventsIndex\n    }\n\n    /**\n     * Restore state.\n     *\n     * @returns {undefined}\n     */\n    function restore() {\n      point = startPoint\n      context.previous = startPrevious\n      context.currentConstruct = startCurrentConstruct\n      context.events.length = startEventsIndex\n      stack = startStack\n      accountForPotentialSkip()\n    }\n  }\n\n  /**\n   * Move the current point a bit forward in the line when it’s on a column\n   * skip.\n   *\n   * @returns {undefined}\n   */\n  function accountForPotentialSkip() {\n    if (point.line in columnStart && point.column < 2) {\n      point.column = columnStart[point.line]\n      point.offset += columnStart[point.line] - 1\n    }\n  }\n}\n\n/**\n * Get the chunks from a slice of chunks in the range of a token.\n *\n * @param {Array<Chunk>} chunks\n * @param {Pick<Token, 'end' | 'start'>} token\n * @returns {Array<Chunk>}\n */\nfunction sliceChunks(chunks, token) {\n  const startIndex = token.start._index\n  const startBufferIndex = token.start._bufferIndex\n  const endIndex = token.end._index\n  const endBufferIndex = token.end._bufferIndex\n  /** @type {Array<Chunk>} */\n  let view\n  if (startIndex === endIndex) {\n    // @ts-expect-error `_bufferIndex` is used on string chunks.\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)]\n  } else {\n    view = chunks.slice(startIndex, endIndex)\n    if (startBufferIndex > -1) {\n      const head = view[0]\n      if (typeof head === 'string') {\n        view[0] = head.slice(startBufferIndex)\n      } else {\n        view.shift()\n      }\n    }\n    if (endBufferIndex > 0) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view.push(chunks[endIndex].slice(0, endBufferIndex))\n    }\n  }\n  return view\n}\n\n/**\n * Get the string value of a slice of chunks.\n *\n * @param {Array<Chunk>} chunks\n * @param {boolean | undefined} [expandTabs=false]\n * @returns {string}\n */\nfunction serializeChunks(chunks, expandTabs) {\n  let index = -1\n  /** @type {Array<string>} */\n  const result = []\n  /** @type {boolean | undefined} */\n  let atTab\n  while (++index < chunks.length) {\n    const chunk = chunks[index]\n    /** @type {string} */\n    let value\n    if (typeof chunk === 'string') {\n      value = chunk\n    } else\n      switch (chunk) {\n        case -5: {\n          value = '\\r'\n          break\n        }\n        case -4: {\n          value = '\\n'\n          break\n        }\n        case -3: {\n          value = '\\r' + '\\n'\n          break\n        }\n        case -2: {\n          value = expandTabs ? ' ' : '\\t'\n          break\n        }\n        case -1: {\n          if (!expandTabs && atTab) continue\n          value = ' '\n          break\n        }\n        default: {\n          // Currently only replacement character.\n          value = String.fromCharCode(chunk)\n        }\n      }\n    atTab = chunk === -2\n    result.push(value)\n  }\n  return result.join('')\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n */\n\nimport {\n  attention,\n  autolink,\n  blockQuote,\n  characterEscape,\n  characterReference,\n  codeFenced,\n  codeIndented,\n  codeText,\n  definition,\n  hardBreakEscape,\n  headingAtx,\n  htmlFlow,\n  htmlText,\n  labelEnd,\n  labelStartImage,\n  labelStartLink,\n  lineEnding,\n  list,\n  setextUnderline,\n  thematicBreak\n} from 'micromark-core-commonmark'\nimport {resolver as resolveText} from './initialize/text.js'\n\n/** @satisfies {Extension['document']} */\nexport const document = {\n  [42]: list,\n  [43]: list,\n  [45]: list,\n  [48]: list,\n  [49]: list,\n  [50]: list,\n  [51]: list,\n  [52]: list,\n  [53]: list,\n  [54]: list,\n  [55]: list,\n  [56]: list,\n  [57]: list,\n  [62]: blockQuote\n}\n\n/** @satisfies {Extension['contentInitial']} */\nexport const contentInitial = {\n  [91]: definition\n}\n\n/** @satisfies {Extension['flowInitial']} */\nexport const flowInitial = {\n  [-2]: codeIndented,\n  [-1]: codeIndented,\n  [32]: codeIndented\n}\n\n/** @satisfies {Extension['flow']} */\nexport const flow = {\n  [35]: headingAtx,\n  [42]: thematicBreak,\n  [45]: [setextUnderline, thematicBreak],\n  [60]: htmlFlow,\n  [61]: setextUnderline,\n  [95]: thematicBreak,\n  [96]: codeFenced,\n  [126]: codeFenced\n}\n\n/** @satisfies {Extension['string']} */\nexport const string = {\n  [38]: characterReference,\n  [92]: characterEscape\n}\n\n/** @satisfies {Extension['text']} */\nexport const text = {\n  [-5]: lineEnding,\n  [-4]: lineEnding,\n  [-3]: lineEnding,\n  [33]: labelStartImage,\n  [38]: characterReference,\n  [42]: attention,\n  [60]: [autolink, htmlText],\n  [91]: labelStartLink,\n  [92]: [hardBreakEscape, characterEscape],\n  [93]: labelEnd,\n  [95]: attention,\n  [96]: codeText\n}\n\n/** @satisfies {Extension['insideSpan']} */\nexport const insideSpan = {\n  null: [attention, resolveText]\n}\n\n/** @satisfies {Extension['attentionMarkers']} */\nexport const attentionMarkers = {\n  null: [42, 95]\n}\n\n/** @satisfies {Extension['disable']} */\nexport const disable = {\n  null: []\n}\n","/**\n * @typedef {import('micromark-util-types').Create} Create\n * @typedef {import('micromark-util-types').FullNormalizedExtension} FullNormalizedExtension\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n */\n\nimport {combineExtensions} from 'micromark-util-combine-extensions'\nimport {content} from './initialize/content.js'\nimport {document} from './initialize/document.js'\nimport {flow} from './initialize/flow.js'\nimport {string, text} from './initialize/text.js'\nimport {createTokenizer} from './create-tokenizer.js'\nimport * as defaultConstructs from './constructs.js'\n\n/**\n * @param {ParseOptions | null | undefined} [options]\n * @returns {ParseContext}\n */\nexport function parse(options) {\n  const settings = options || {}\n  const constructs =\n    /** @type {FullNormalizedExtension} */\n    combineExtensions([defaultConstructs, ...(settings.extensions || [])])\n\n  /** @type {ParseContext} */\n  const parser = {\n    defined: [],\n    lazy: {},\n    constructs,\n    content: create(content),\n    document: create(document),\n    flow: create(flow),\n    string: create(string),\n    text: create(text)\n  }\n  return parser\n\n  /**\n   * @param {InitialConstruct} initial\n   */\n  function create(initial) {\n    return creator\n    /** @type {Create} */\n    function creator(from) {\n      return createTokenizer(parser, initial, from)\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n */\n\nimport {subtokenize} from 'micromark-util-subtokenize'\n\n/**\n * @param {Array<Event>} events\n * @returns {Array<Event>}\n */\nexport function postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Value} Value\n */\n\n/**\n * @callback Preprocessor\n * @param {Value} value\n * @param {Encoding | null | undefined} [encoding]\n * @param {boolean | null | undefined} [end=false]\n * @returns {Array<Chunk>}\n */\n\nconst search = /[\\0\\t\\n\\r]/g\n\n/**\n * @returns {Preprocessor}\n */\nexport function preprocess() {\n  let column = 1\n  let buffer = ''\n  /** @type {boolean | undefined} */\n  let start = true\n  /** @type {boolean | undefined} */\n  let atCarriageReturn\n  return preprocessor\n\n  /** @type {Preprocessor} */\n  // eslint-disable-next-line complexity\n  function preprocessor(value, encoding, end) {\n    /** @type {Array<Chunk>} */\n    const chunks = []\n    /** @type {RegExpMatchArray | null} */\n    let match\n    /** @type {number} */\n    let next\n    /** @type {number} */\n    let startPosition\n    /** @type {number} */\n    let endPosition\n    /** @type {Code} */\n    let code\n    value =\n      buffer +\n      (typeof value === 'string'\n        ? value.toString()\n        : new TextDecoder(encoding || undefined).decode(value))\n    startPosition = 0\n    buffer = ''\n    if (start) {\n      // To do: `markdown-rs` actually parses BOMs (byte order mark).\n      if (value.charCodeAt(0) === 65279) {\n        startPosition++\n      }\n      start = undefined\n    }\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition\n      match = search.exec(value)\n      endPosition =\n        match && match.index !== undefined ? match.index : value.length\n      code = value.charCodeAt(endPosition)\n      if (!match) {\n        buffer = value.slice(startPosition)\n        break\n      }\n      if (code === 10 && startPosition === endPosition && atCarriageReturn) {\n        chunks.push(-3)\n        atCarriageReturn = undefined\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(-5)\n          atCarriageReturn = undefined\n        }\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition))\n          column += endPosition - startPosition\n        }\n        switch (code) {\n          case 0: {\n            chunks.push(65533)\n            column++\n            break\n          }\n          case 9: {\n            next = Math.ceil(column / 4) * 4\n            chunks.push(-2)\n            while (column++ < next) chunks.push(-1)\n            break\n          }\n          case 10: {\n            chunks.push(-4)\n            column = 1\n            break\n          }\n          default: {\n            atCarriageReturn = true\n            column = 1\n          }\n        }\n      }\n      startPosition = endPosition + 1\n    }\n    if (end) {\n      if (atCarriageReturn) chunks.push(-5)\n      if (buffer) chunks.push(buffer)\n      chunks.push(null)\n    }\n    return chunks\n  }\n}\n","import {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nconst characterEscapeOrReference =\n  /\\\\([!-/:-@[-`{-~])|&(#(?:\\d{1,7}|x[\\da-f]{1,6})|[\\da-z]{1,31});/gi\n\n/**\n * Decode markdown strings (which occur in places such as fenced code info\n * strings, destinations, labels, and titles).\n *\n * The “string” content type allows character escapes and -references.\n * This decodes those.\n *\n * @param {string} value\n *   Value to decode.\n * @returns {string}\n *   Decoded value.\n */\nexport function decodeString(value) {\n  return value.replace(characterEscapeOrReference, decode)\n}\n\n/**\n * @param {string} $0\n * @param {string} $1\n * @param {string} $2\n * @returns {string}\n */\nfunction decode($0, $1, $2) {\n  if ($1) {\n    // Escape.\n    return $1\n  }\n\n  // Reference.\n  const head = $2.charCodeAt(0)\n  if (head === 35) {\n    const head = $2.charCodeAt(1)\n    const hex = head === 120 || head === 88\n    return decodeNumericCharacterReference($2.slice(hex ? 2 : 1), hex ? 16 : 10)\n  }\n  return decodeNamedCharacterReference($2) || $0\n}\n","/**\n * @typedef {import('mdast').Break} Break\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('mdast').Code} Code\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('mdast').Html} Html\n * @typedef {import('mdast').Image} Image\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').List} List\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Nodes} Nodes\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').ReferenceType} ReferenceType\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('mdast').Text} Text\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n *\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Value} Value\n *\n * @typedef {import('unist').Point} Point\n *\n * @typedef {import('../index.js').CompileData} CompileData\n */\n\n/**\n * @typedef {Omit<Parent, 'children' | 'type'> & {type: 'fragment', children: Array<PhrasingContent>}} Fragment\n */\n\n/**\n * @callback Transform\n *   Extra transform, to change the AST afterwards.\n * @param {Root} tree\n *   Tree to transform.\n * @returns {Root | null | undefined | void}\n *   New tree or nothing (in which case the current tree is used).\n *\n * @callback Handle\n *   Handle a token.\n * @param {CompileContext} this\n *   Context.\n * @param {Token} token\n *   Current token.\n * @returns {undefined | void}\n *   Nothing.\n *\n * @typedef {Record<string, Handle>} Handles\n *   Token types mapping to handles\n *\n * @callback OnEnterError\n *   Handle the case where the `right` token is open, but it is closed (by the\n *   `left` token) or because we reached the end of the document.\n * @param {Omit<CompileContext, 'sliceSerialize'>} this\n *   Context.\n * @param {Token | undefined} left\n *   Left token.\n * @param {Token} right\n *   Right token.\n * @returns {undefined}\n *   Nothing.\n *\n * @callback OnExitError\n *   Handle the case where the `right` token is open but it is closed by\n *   exiting the `left` token.\n * @param {Omit<CompileContext, 'sliceSerialize'>} this\n *   Context.\n * @param {Token} left\n *   Left token.\n * @param {Token} right\n *   Right token.\n * @returns {undefined}\n *   Nothing.\n *\n * @typedef {[Token, OnEnterError | undefined]} TokenTuple\n *   Open token on the stack, with an optional error handler for when\n *   that token isn’t closed properly.\n */\n\n/**\n * @typedef Config\n *   Configuration.\n *\n *   We have our defaults, but extensions will add more.\n * @property {Array<string>} canContainEols\n *   Token types where line endings are used.\n * @property {Handles} enter\n *   Opening handles.\n * @property {Handles} exit\n *   Closing handles.\n * @property {Array<Transform>} transforms\n *   Tree transforms.\n *\n * @typedef {Partial<Config>} Extension\n *   Change how markdown tokens from micromark are turned into mdast.\n *\n * @typedef CompileContext\n *   mdast compiler context.\n * @property {Array<Fragment | Nodes>} stack\n *   Stack of nodes.\n * @property {Array<TokenTuple>} tokenStack\n *   Stack of tokens.\n * @property {(this: CompileContext) => undefined} buffer\n *   Capture some of the output data.\n * @property {(this: CompileContext) => string} resume\n *   Stop capturing and access the output data.\n * @property {(this: CompileContext, node: Nodes, token: Token, onError?: OnEnterError) => undefined} enter\n *   Enter a node.\n * @property {(this: CompileContext, token: Token, onError?: OnExitError) => undefined} exit\n *   Exit a node.\n * @property {TokenizeContext['sliceSerialize']} sliceSerialize\n *   Get the string value of a token.\n * @property {Config} config\n *   Configuration.\n * @property {CompileData} data\n *   Info passed around; key/value store.\n *\n * @typedef FromMarkdownOptions\n *   Configuration for how to build mdast.\n * @property {Array<Extension | Array<Extension>> | null | undefined} [mdastExtensions]\n *   Extensions for this utility to change how tokens are turned into a tree.\n *\n * @typedef {ParseOptions & FromMarkdownOptions} Options\n *   Configuration.\n */\n\nimport { toString } from 'mdast-util-to-string';\nimport { parse, postprocess, preprocess } from 'micromark';\nimport { decodeNumericCharacterReference } from 'micromark-util-decode-numeric-character-reference';\nimport { decodeString } from 'micromark-util-decode-string';\nimport { normalizeIdentifier } from 'micromark-util-normalize-identifier';\nimport { decodeNamedCharacterReference } from 'decode-named-character-reference';\nimport { stringifyPosition } from 'unist-util-stringify-position';\nconst own = {}.hasOwnProperty;\n\n/**\n * Turn markdown into a syntax tree.\n *\n * @overload\n * @param {Value} value\n * @param {Encoding | null | undefined} [encoding]\n * @param {Options | null | undefined} [options]\n * @returns {Root}\n *\n * @overload\n * @param {Value} value\n * @param {Options | null | undefined} [options]\n * @returns {Root}\n *\n * @param {Value} value\n *   Markdown to parse.\n * @param {Encoding | Options | null | undefined} [encoding]\n *   Character encoding for when `value` is `Buffer`.\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {Root}\n *   mdast tree.\n */\nexport function fromMarkdown(value, encoding, options) {\n  if (typeof encoding !== 'string') {\n    options = encoding;\n    encoding = undefined;\n  }\n  return compiler(options)(postprocess(parse(options).document().write(preprocess()(value, encoding, true))));\n}\n\n/**\n * Note this compiler only understand complete buffering, not streaming.\n *\n * @param {Options | null | undefined} [options]\n */\nfunction compiler(options) {\n  /** @type {Config} */\n  const config = {\n    transforms: [],\n    canContainEols: ['emphasis', 'fragment', 'heading', 'paragraph', 'strong'],\n    enter: {\n      autolink: opener(link),\n      autolinkProtocol: onenterdata,\n      autolinkEmail: onenterdata,\n      atxHeading: opener(heading),\n      blockQuote: opener(blockQuote),\n      characterEscape: onenterdata,\n      characterReference: onenterdata,\n      codeFenced: opener(codeFlow),\n      codeFencedFenceInfo: buffer,\n      codeFencedFenceMeta: buffer,\n      codeIndented: opener(codeFlow, buffer),\n      codeText: opener(codeText, buffer),\n      codeTextData: onenterdata,\n      data: onenterdata,\n      codeFlowValue: onenterdata,\n      definition: opener(definition),\n      definitionDestinationString: buffer,\n      definitionLabelString: buffer,\n      definitionTitleString: buffer,\n      emphasis: opener(emphasis),\n      hardBreakEscape: opener(hardBreak),\n      hardBreakTrailing: opener(hardBreak),\n      htmlFlow: opener(html, buffer),\n      htmlFlowData: onenterdata,\n      htmlText: opener(html, buffer),\n      htmlTextData: onenterdata,\n      image: opener(image),\n      label: buffer,\n      link: opener(link),\n      listItem: opener(listItem),\n      listItemValue: onenterlistitemvalue,\n      listOrdered: opener(list, onenterlistordered),\n      listUnordered: opener(list),\n      paragraph: opener(paragraph),\n      reference: onenterreference,\n      referenceString: buffer,\n      resourceDestinationString: buffer,\n      resourceTitleString: buffer,\n      setextHeading: opener(heading),\n      strong: opener(strong),\n      thematicBreak: opener(thematicBreak)\n    },\n    exit: {\n      atxHeading: closer(),\n      atxHeadingSequence: onexitatxheadingsequence,\n      autolink: closer(),\n      autolinkEmail: onexitautolinkemail,\n      autolinkProtocol: onexitautolinkprotocol,\n      blockQuote: closer(),\n      characterEscapeValue: onexitdata,\n      characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,\n      characterReferenceMarkerNumeric: onexitcharacterreferencemarker,\n      characterReferenceValue: onexitcharacterreferencevalue,\n      characterReference: onexitcharacterreference,\n      codeFenced: closer(onexitcodefenced),\n      codeFencedFence: onexitcodefencedfence,\n      codeFencedFenceInfo: onexitcodefencedfenceinfo,\n      codeFencedFenceMeta: onexitcodefencedfencemeta,\n      codeFlowValue: onexitdata,\n      codeIndented: closer(onexitcodeindented),\n      codeText: closer(onexitcodetext),\n      codeTextData: onexitdata,\n      data: onexitdata,\n      definition: closer(),\n      definitionDestinationString: onexitdefinitiondestinationstring,\n      definitionLabelString: onexitdefinitionlabelstring,\n      definitionTitleString: onexitdefinitiontitlestring,\n      emphasis: closer(),\n      hardBreakEscape: closer(onexithardbreak),\n      hardBreakTrailing: closer(onexithardbreak),\n      htmlFlow: closer(onexithtmlflow),\n      htmlFlowData: onexitdata,\n      htmlText: closer(onexithtmltext),\n      htmlTextData: onexitdata,\n      image: closer(onexitimage),\n      label: onexitlabel,\n      labelText: onexitlabeltext,\n      lineEnding: onexitlineending,\n      link: closer(onexitlink),\n      listItem: closer(),\n      listOrdered: closer(),\n      listUnordered: closer(),\n      paragraph: closer(),\n      referenceString: onexitreferencestring,\n      resourceDestinationString: onexitresourcedestinationstring,\n      resourceTitleString: onexitresourcetitlestring,\n      resource: onexitresource,\n      setextHeading: closer(onexitsetextheading),\n      setextHeadingLineSequence: onexitsetextheadinglinesequence,\n      setextHeadingText: onexitsetextheadingtext,\n      strong: closer(),\n      thematicBreak: closer()\n    }\n  };\n  configure(config, (options || {}).mdastExtensions || []);\n\n  /** @type {CompileData} */\n  const data = {};\n  return compile;\n\n  /**\n   * Turn micromark events into an mdast tree.\n   *\n   * @param {Array<Event>} events\n   *   Events.\n   * @returns {Root}\n   *   mdast tree.\n   */\n  function compile(events) {\n    /** @type {Root} */\n    let tree = {\n      type: 'root',\n      children: []\n    };\n    /** @type {Omit<CompileContext, 'sliceSerialize'>} */\n    const context = {\n      stack: [tree],\n      tokenStack: [],\n      config,\n      enter,\n      exit,\n      buffer,\n      resume,\n      data\n    };\n    /** @type {Array<number>} */\n    const listStack = [];\n    let index = -1;\n    while (++index < events.length) {\n      // We preprocess lists to add `listItem` tokens, and to infer whether\n      // items the list itself are spread out.\n      if (events[index][1].type === \"listOrdered\" || events[index][1].type === \"listUnordered\") {\n        if (events[index][0] === 'enter') {\n          listStack.push(index);\n        } else {\n          const tail = listStack.pop();\n          index = prepareList(events, tail, index);\n        }\n      }\n    }\n    index = -1;\n    while (++index < events.length) {\n      const handler = config[events[index][0]];\n      if (own.call(handler, events[index][1].type)) {\n        handler[events[index][1].type].call(Object.assign({\n          sliceSerialize: events[index][2].sliceSerialize\n        }, context), events[index][1]);\n      }\n    }\n\n    // Handle tokens still being open.\n    if (context.tokenStack.length > 0) {\n      const tail = context.tokenStack[context.tokenStack.length - 1];\n      const handler = tail[1] || defaultOnError;\n      handler.call(context, undefined, tail[0]);\n    }\n\n    // Figure out `root` position.\n    tree.position = {\n      start: point(events.length > 0 ? events[0][1].start : {\n        line: 1,\n        column: 1,\n        offset: 0\n      }),\n      end: point(events.length > 0 ? events[events.length - 2][1].end : {\n        line: 1,\n        column: 1,\n        offset: 0\n      })\n    };\n\n    // Call transforms.\n    index = -1;\n    while (++index < config.transforms.length) {\n      tree = config.transforms[index](tree) || tree;\n    }\n    return tree;\n  }\n\n  /**\n   * @param {Array<Event>} events\n   * @param {number} start\n   * @param {number} length\n   * @returns {number}\n   */\n  function prepareList(events, start, length) {\n    let index = start - 1;\n    let containerBalance = -1;\n    let listSpread = false;\n    /** @type {Token | undefined} */\n    let listItem;\n    /** @type {number | undefined} */\n    let lineIndex;\n    /** @type {number | undefined} */\n    let firstBlankLineIndex;\n    /** @type {boolean | undefined} */\n    let atMarker;\n    while (++index <= length) {\n      const event = events[index];\n      switch (event[1].type) {\n        case \"listUnordered\":\n        case \"listOrdered\":\n        case \"blockQuote\":\n          {\n            if (event[0] === 'enter') {\n              containerBalance++;\n            } else {\n              containerBalance--;\n            }\n            atMarker = undefined;\n            break;\n          }\n        case \"lineEndingBlank\":\n          {\n            if (event[0] === 'enter') {\n              if (listItem && !atMarker && !containerBalance && !firstBlankLineIndex) {\n                firstBlankLineIndex = index;\n              }\n              atMarker = undefined;\n            }\n            break;\n          }\n        case \"linePrefix\":\n        case \"listItemValue\":\n        case \"listItemMarker\":\n        case \"listItemPrefix\":\n        case \"listItemPrefixWhitespace\":\n          {\n            // Empty.\n\n            break;\n          }\n        default:\n          {\n            atMarker = undefined;\n          }\n      }\n      if (!containerBalance && event[0] === 'enter' && event[1].type === \"listItemPrefix\" || containerBalance === -1 && event[0] === 'exit' && (event[1].type === \"listUnordered\" || event[1].type === \"listOrdered\")) {\n        if (listItem) {\n          let tailIndex = index;\n          lineIndex = undefined;\n          while (tailIndex--) {\n            const tailEvent = events[tailIndex];\n            if (tailEvent[1].type === \"lineEnding\" || tailEvent[1].type === \"lineEndingBlank\") {\n              if (tailEvent[0] === 'exit') continue;\n              if (lineIndex) {\n                events[lineIndex][1].type = \"lineEndingBlank\";\n                listSpread = true;\n              }\n              tailEvent[1].type = \"lineEnding\";\n              lineIndex = tailIndex;\n            } else if (tailEvent[1].type === \"linePrefix\" || tailEvent[1].type === \"blockQuotePrefix\" || tailEvent[1].type === \"blockQuotePrefixWhitespace\" || tailEvent[1].type === \"blockQuoteMarker\" || tailEvent[1].type === \"listItemIndent\") {\n              // Empty\n            } else {\n              break;\n            }\n          }\n          if (firstBlankLineIndex && (!lineIndex || firstBlankLineIndex < lineIndex)) {\n            listItem._spread = true;\n          }\n\n          // Fix position.\n          listItem.end = Object.assign({}, lineIndex ? events[lineIndex][1].start : event[1].end);\n          events.splice(lineIndex || index, 0, ['exit', listItem, event[2]]);\n          index++;\n          length++;\n        }\n\n        // Create a new list item.\n        if (event[1].type === \"listItemPrefix\") {\n          /** @type {Token} */\n          const item = {\n            type: 'listItem',\n            _spread: false,\n            start: Object.assign({}, event[1].start),\n            // @ts-expect-error: we’ll add `end` in a second.\n            end: undefined\n          };\n          listItem = item;\n          events.splice(index, 0, ['enter', item, event[2]]);\n          index++;\n          length++;\n          firstBlankLineIndex = undefined;\n          atMarker = true;\n        }\n      }\n    }\n    events[start][1]._spread = listSpread;\n    return length;\n  }\n\n  /**\n   * Create an opener handle.\n   *\n   * @param {(token: Token) => Nodes} create\n   *   Create a node.\n   * @param {Handle | undefined} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function opener(create, and) {\n    return open;\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {undefined}\n     */\n    function open(token) {\n      enter.call(this, create(token), token);\n      if (and) and.call(this, token);\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @returns {undefined}\n   */\n  function buffer() {\n    this.stack.push({\n      type: 'fragment',\n      children: []\n    });\n  }\n\n  /**\n   * @this {CompileContext}\n   *   Context.\n   * @param {Nodes} node\n   *   Node to enter.\n   * @param {Token} token\n   *   Corresponding token.\n   * @param {OnEnterError | undefined} [errorHandler]\n   *   Handle the case where this token is open, but it is closed by something else.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function enter(node, token, errorHandler) {\n    const parent = this.stack[this.stack.length - 1];\n    /** @type {Array<Nodes>} */\n    const siblings = parent.children;\n    siblings.push(node);\n    this.stack.push(node);\n    this.tokenStack.push([token, errorHandler]);\n    node.position = {\n      start: point(token.start),\n      // @ts-expect-error: `end` will be patched later.\n      end: undefined\n    };\n  }\n\n  /**\n   * Create a closer handle.\n   *\n   * @param {Handle | undefined} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function closer(and) {\n    return close;\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {undefined}\n     */\n    function close(token) {\n      if (and) and.call(this, token);\n      exit.call(this, token);\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   *   Context.\n   * @param {Token} token\n   *   Corresponding token.\n   * @param {OnExitError | undefined} [onExitError]\n   *   Handle the case where another token is open.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function exit(token, onExitError) {\n    const node = this.stack.pop();\n    const open = this.tokenStack.pop();\n    if (!open) {\n      throw new Error('Cannot close `' + token.type + '` (' + stringifyPosition({\n        start: token.start,\n        end: token.end\n      }) + '): it’s not open');\n    } else if (open[0].type !== token.type) {\n      if (onExitError) {\n        onExitError.call(this, token, open[0]);\n      } else {\n        const handler = open[1] || defaultOnError;\n        handler.call(this, token, open[0]);\n      }\n    }\n    node.position.end = point(token.end);\n  }\n\n  /**\n   * @this {CompileContext}\n   * @returns {string}\n   */\n  function resume() {\n    return toString(this.stack.pop());\n  }\n\n  //\n  // Handlers.\n  //\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistordered() {\n    this.data.expectingFirstListItemValue = true;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistitemvalue(token) {\n    if (this.data.expectingFirstListItemValue) {\n      const ancestor = this.stack[this.stack.length - 2];\n      ancestor.start = Number.parseInt(this.sliceSerialize(token), 10);\n      this.data.expectingFirstListItemValue = undefined;\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfenceinfo() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.lang = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfencemeta() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.meta = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfence() {\n    // Exit if this is the closing fence.\n    if (this.data.flowCodeInside) return;\n    this.buffer();\n    this.data.flowCodeInside = true;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefenced() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.value = data.replace(/^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g, '');\n    this.data.flowCodeInside = undefined;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodeindented() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.value = data.replace(/(\\r?\\n|\\r)$/g, '');\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitionlabelstring(token) {\n    const label = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.label = label;\n    node.identifier = normalizeIdentifier(this.sliceSerialize(token)).toLowerCase();\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiontitlestring() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.title = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiondestinationstring() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.url = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitatxheadingsequence(token) {\n    const node = this.stack[this.stack.length - 1];\n    if (!node.depth) {\n      const depth = this.sliceSerialize(token).length;\n      node.depth = depth;\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadingtext() {\n    this.data.setextHeadingSlurpLineEnding = true;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadinglinesequence(token) {\n    const node = this.stack[this.stack.length - 1];\n    node.depth = this.sliceSerialize(token).codePointAt(0) === 61 ? 1 : 2;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheading() {\n    this.data.setextHeadingSlurpLineEnding = undefined;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterdata(token) {\n    const node = this.stack[this.stack.length - 1];\n    /** @type {Array<Nodes>} */\n    const siblings = node.children;\n    let tail = siblings[siblings.length - 1];\n    if (!tail || tail.type !== 'text') {\n      // Add a new text node.\n      tail = text();\n      tail.position = {\n        start: point(token.start),\n        // @ts-expect-error: we’ll add `end` later.\n        end: undefined\n      };\n      siblings.push(tail);\n    }\n    this.stack.push(tail);\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitdata(token) {\n    const tail = this.stack.pop();\n    tail.value += this.sliceSerialize(token);\n    tail.position.end = point(token.end);\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlineending(token) {\n    const context = this.stack[this.stack.length - 1];\n    // If we’re at a hard break, include the line ending in there.\n    if (this.data.atHardBreak) {\n      const tail = context.children[context.children.length - 1];\n      tail.position.end = point(token.end);\n      this.data.atHardBreak = undefined;\n      return;\n    }\n    if (!this.data.setextHeadingSlurpLineEnding && config.canContainEols.includes(context.type)) {\n      onenterdata.call(this, token);\n      onexitdata.call(this, token);\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithardbreak() {\n    this.data.atHardBreak = true;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmlflow() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.value = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmltext() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.value = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcodetext() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.value = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlink() {\n    const node = this.stack[this.stack.length - 1];\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n\n    // To do: clean.\n    if (this.data.inReference) {\n      /** @type {ReferenceType} */\n      const referenceType = this.data.referenceType || 'shortcut';\n      node.type += 'Reference';\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType;\n      // @ts-expect-error: mutate.\n      delete node.url;\n      delete node.title;\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier;\n      // @ts-expect-error: mutate.\n      delete node.label;\n    }\n    this.data.referenceType = undefined;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitimage() {\n    const node = this.stack[this.stack.length - 1];\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n\n    // To do: clean.\n    if (this.data.inReference) {\n      /** @type {ReferenceType} */\n      const referenceType = this.data.referenceType || 'shortcut';\n      node.type += 'Reference';\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType;\n      // @ts-expect-error: mutate.\n      delete node.url;\n      delete node.title;\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier;\n      // @ts-expect-error: mutate.\n      delete node.label;\n    }\n    this.data.referenceType = undefined;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabeltext(token) {\n    const string = this.sliceSerialize(token);\n    const ancestor = this.stack[this.stack.length - 2];\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    ancestor.label = decodeString(string);\n    // @ts-expect-error: same as above.\n    ancestor.identifier = normalizeIdentifier(string).toLowerCase();\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabel() {\n    const fragment = this.stack[this.stack.length - 1];\n    const value = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    // Assume a reference.\n    this.data.inReference = true;\n    if (node.type === 'link') {\n      /** @type {Array<PhrasingContent>} */\n      const children = fragment.children;\n      node.children = children;\n    } else {\n      node.alt = value;\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcedestinationstring() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.url = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcetitlestring() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.title = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresource() {\n    this.data.inReference = undefined;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterreference() {\n    this.data.referenceType = 'collapsed';\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitreferencestring(token) {\n    const label = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    node.label = label;\n    // @ts-expect-error: same as above.\n    node.identifier = normalizeIdentifier(this.sliceSerialize(token)).toLowerCase();\n    this.data.referenceType = 'full';\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcharacterreferencemarker(token) {\n    this.data.characterReferenceType = token.type;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcharacterreferencevalue(token) {\n    const data = this.sliceSerialize(token);\n    const type = this.data.characterReferenceType;\n    /** @type {string} */\n    let value;\n    if (type) {\n      value = decodeNumericCharacterReference(data, type === \"characterReferenceMarkerNumeric\" ? 10 : 16);\n      this.data.characterReferenceType = undefined;\n    } else {\n      const result = decodeNamedCharacterReference(data);\n      value = result;\n    }\n    const tail = this.stack[this.stack.length - 1];\n    tail.value += value;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcharacterreference(token) {\n    const tail = this.stack.pop();\n    tail.position.end = point(token.end);\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkprotocol(token) {\n    onexitdata.call(this, token);\n    const node = this.stack[this.stack.length - 1];\n    node.url = this.sliceSerialize(token);\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkemail(token) {\n    onexitdata.call(this, token);\n    const node = this.stack[this.stack.length - 1];\n    node.url = 'mailto:' + this.sliceSerialize(token);\n  }\n\n  //\n  // Creaters.\n  //\n\n  /** @returns {Blockquote} */\n  function blockQuote() {\n    return {\n      type: 'blockquote',\n      children: []\n    };\n  }\n\n  /** @returns {Code} */\n  function codeFlow() {\n    return {\n      type: 'code',\n      lang: null,\n      meta: null,\n      value: ''\n    };\n  }\n\n  /** @returns {InlineCode} */\n  function codeText() {\n    return {\n      type: 'inlineCode',\n      value: ''\n    };\n  }\n\n  /** @returns {Definition} */\n  function definition() {\n    return {\n      type: 'definition',\n      identifier: '',\n      label: null,\n      title: null,\n      url: ''\n    };\n  }\n\n  /** @returns {Emphasis} */\n  function emphasis() {\n    return {\n      type: 'emphasis',\n      children: []\n    };\n  }\n\n  /** @returns {Heading} */\n  function heading() {\n    return {\n      type: 'heading',\n      // @ts-expect-error `depth` will be set later.\n      depth: 0,\n      children: []\n    };\n  }\n\n  /** @returns {Break} */\n  function hardBreak() {\n    return {\n      type: 'break'\n    };\n  }\n\n  /** @returns {Html} */\n  function html() {\n    return {\n      type: 'html',\n      value: ''\n    };\n  }\n\n  /** @returns {Image} */\n  function image() {\n    return {\n      type: 'image',\n      title: null,\n      url: '',\n      alt: null\n    };\n  }\n\n  /** @returns {Link} */\n  function link() {\n    return {\n      type: 'link',\n      title: null,\n      url: '',\n      children: []\n    };\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {List}\n   */\n  function list(token) {\n    return {\n      type: 'list',\n      ordered: token.type === 'listOrdered',\n      start: null,\n      spread: token._spread,\n      children: []\n    };\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {ListItem}\n   */\n  function listItem(token) {\n    return {\n      type: 'listItem',\n      spread: token._spread,\n      checked: null,\n      children: []\n    };\n  }\n\n  /** @returns {Paragraph} */\n  function paragraph() {\n    return {\n      type: 'paragraph',\n      children: []\n    };\n  }\n\n  /** @returns {Strong} */\n  function strong() {\n    return {\n      type: 'strong',\n      children: []\n    };\n  }\n\n  /** @returns {Text} */\n  function text() {\n    return {\n      type: 'text',\n      value: ''\n    };\n  }\n\n  /** @returns {ThematicBreak} */\n  function thematicBreak() {\n    return {\n      type: 'thematicBreak'\n    };\n  }\n}\n\n/**\n * Copy a point-like value.\n *\n * @param {Point} d\n *   Point-like value.\n * @returns {Point}\n *   unist point.\n */\nfunction point(d) {\n  return {\n    line: d.line,\n    column: d.column,\n    offset: d.offset\n  };\n}\n\n/**\n * @param {Config} combined\n * @param {Array<Array<Extension> | Extension>} extensions\n * @returns {undefined}\n */\nfunction configure(combined, extensions) {\n  let index = -1;\n  while (++index < extensions.length) {\n    const value = extensions[index];\n    if (Array.isArray(value)) {\n      configure(combined, value);\n    } else {\n      extension(combined, value);\n    }\n  }\n}\n\n/**\n * @param {Config} combined\n * @param {Extension} extension\n * @returns {undefined}\n */\nfunction extension(combined, extension) {\n  /** @type {keyof Extension} */\n  let key;\n  for (key in extension) {\n    if (own.call(extension, key)) {\n      switch (key) {\n        case 'canContainEols':\n          {\n            const right = extension[key];\n            if (right) {\n              combined[key].push(...right);\n            }\n            break;\n          }\n        case 'transforms':\n          {\n            const right = extension[key];\n            if (right) {\n              combined[key].push(...right);\n            }\n            break;\n          }\n        case 'enter':\n        case 'exit':\n          {\n            const right = extension[key];\n            if (right) {\n              Object.assign(combined[key], right);\n            }\n            break;\n          }\n        // No default\n      }\n    }\n  }\n}\n\n/** @type {OnEnterError} */\nfunction defaultOnError(left, right) {\n  if (left) {\n    throw new Error('Cannot close `' + left.type + '` (' + stringifyPosition({\n      start: left.start,\n      end: left.end\n    }) + '): a different token (`' + right.type + '`, ' + stringifyPosition({\n      start: right.start,\n      end: right.end\n    }) + ') is open');\n  } else {\n    throw new Error('Cannot close document, a token (`' + right.type + '`, ' + stringifyPosition({\n      start: right.start,\n      end: right.end\n    }) + ') is still open');\n  }\n}","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').Options} FromMarkdownOptions\n * @typedef {import('unified').Parser<Root>} Parser\n * @typedef {import('unified').Processor<Root>} Processor\n */\n\n/**\n * @typedef {Omit<FromMarkdownOptions, 'extensions' | 'mdastExtensions'>} Options\n */\n\nimport {fromMarkdown} from 'mdast-util-from-markdown'\n\n/**\n * Aadd support for parsing from markdown.\n *\n * @param {Readonly<Options> | null | undefined} [options]\n *   Configuration (optional).\n * @returns {undefined}\n *   Nothing.\n */\nexport default function remarkParse(options) {\n  /** @type {Processor} */\n  // @ts-expect-error: TS in JSDoc generates wrong types if `this` is typed regularly.\n  const self = this\n\n  self.parser = parser\n\n  /**\n   * @type {Parser}\n   */\n  function parser(doc) {\n    return fromMarkdown(doc, {\n      ...self.data('settings'),\n      ...options,\n      // Note: these options are not in the readme.\n      // The goal is for them to be set by plugins on `data` instead of being\n      // passed by users.\n      extensions: self.data('micromarkExtensions') || [],\n      mdastExtensions: self.data('fromMarkdownExtensions') || []\n    })\n  }\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `blockquote` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Blockquote} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function blockquote(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'blockquote',\n    properties: {},\n    children: state.wrap(state.all(node), true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').Break} Break\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `break` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Break} node\n *   mdast node.\n * @returns {Array<Element | Text>}\n *   hast element content.\n */\nexport function hardBreak(state, node) {\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'br', properties: {}, children: []}\n  state.patch(node, result)\n  return [state.applyData(node, result), {type: 'text', value: '\\n'}]\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Code} Code\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `code` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Code} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function code(state, node) {\n  const value = node.value ? node.value + '\\n' : ''\n  /** @type {Properties} */\n  const properties = {}\n\n  if (node.lang) {\n    properties.className = ['language-' + node.lang]\n  }\n\n  // Create `<code>`.\n  /** @type {Element} */\n  let result = {\n    type: 'element',\n    tagName: 'code',\n    properties,\n    children: [{type: 'text', value}]\n  }\n\n  if (node.meta) {\n    result.data = {meta: node.meta}\n  }\n\n  state.patch(node, result)\n  result = state.applyData(node, result)\n\n  // Create `<pre>`.\n  result = {type: 'element', tagName: 'pre', properties: {}, children: [result]}\n  state.patch(node, result)\n  return result\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `delete` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Delete} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strikethrough(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'del',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `emphasis` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Emphasis} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function emphasis(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'em',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `footnoteReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {FootnoteReference} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function footnoteReference(state, node) {\n  const clobberPrefix =\n    typeof state.options.clobberPrefix === 'string'\n      ? state.options.clobberPrefix\n      : 'user-content-'\n  const id = String(node.identifier).toUpperCase()\n  const safeId = normalizeUri(id.toLowerCase())\n  const index = state.footnoteOrder.indexOf(id)\n  /** @type {number} */\n  let counter\n\n  let reuseCounter = state.footnoteCounts.get(id)\n\n  if (reuseCounter === undefined) {\n    reuseCounter = 0\n    state.footnoteOrder.push(id)\n    counter = state.footnoteOrder.length\n  } else {\n    counter = index + 1\n  }\n\n  reuseCounter += 1\n  state.footnoteCounts.set(id, reuseCounter)\n\n  /** @type {Element} */\n  const link = {\n    type: 'element',\n    tagName: 'a',\n    properties: {\n      href: '#' + clobberPrefix + 'fn-' + safeId,\n      id:\n        clobberPrefix +\n        'fnref-' +\n        safeId +\n        (reuseCounter > 1 ? '-' + reuseCounter : ''),\n      dataFootnoteRef: true,\n      ariaDescribedBy: ['footnote-label']\n    },\n    children: [{type: 'text', value: String(counter)}]\n  }\n  state.patch(node, link)\n\n  /** @type {Element} */\n  const sup = {\n    type: 'element',\n    tagName: 'sup',\n    properties: {},\n    children: [link]\n  }\n  state.patch(node, sup)\n  return state.applyData(node, sup)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `heading` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Heading} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function heading(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'h' + node.depth,\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Html} Html\n * @typedef {import('../state.js').State} State\n * @typedef {import('../../index.js').Raw} Raw\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `html` node into hast (`raw` node in dangerous mode, otherwise\n * nothing).\n *\n * @param {State} state\n *   Info passed around.\n * @param {Html} node\n *   mdast node.\n * @returns {Element | Raw | undefined}\n *   hast node.\n */\nexport function html(state, node) {\n  if (state.options.allowDangerousHtml) {\n    /** @type {Raw} */\n    const result = {type: 'raw', value: node.value}\n    state.patch(node, result)\n    return state.applyData(node, result)\n  }\n\n  return undefined\n}\n","/**\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('mdast').Nodes} Nodes\n * @typedef {import('mdast').Reference} Reference\n *\n * @typedef {import('./state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Return the content of a reference without definition as plain text.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Extract<Nodes, Reference>} node\n *   Reference node (image, link).\n * @returns {Array<ElementContent>}\n *   hast content.\n */\nexport function revert(state, node) {\n  const subtype = node.referenceType\n  let suffix = ']'\n\n  if (subtype === 'collapsed') {\n    suffix += '[]'\n  } else if (subtype === 'full') {\n    suffix += '[' + (node.label || node.identifier) + ']'\n  }\n\n  if (node.type === 'imageReference') {\n    return [{type: 'text', value: '![' + node.alt + suffix}]\n  }\n\n  const contents = state.all(node)\n  const head = contents[0]\n\n  if (head && head.type === 'text') {\n    head.value = '[' + head.value\n  } else {\n    contents.unshift({type: 'text', value: '['})\n  }\n\n  const tail = contents[contents.length - 1]\n\n  if (tail && tail.type === 'text') {\n    tail.value += suffix\n  } else {\n    contents.push({type: 'text', value: suffix})\n  }\n\n  return contents\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `imageReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ImageReference} node\n *   mdast node.\n * @returns {Array<ElementContent> | ElementContent}\n *   hast node.\n */\nexport function imageReference(state, node) {\n  const id = String(node.identifier).toUpperCase()\n  const definition = state.definitionById.get(id)\n\n  if (!definition) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(definition.url || ''), alt: node.alt}\n\n  if (definition.title !== null && definition.title !== undefined) {\n    properties.title = definition.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Image} Image\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `image` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Image} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function image(state, node) {\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(node.url)}\n\n  if (node.alt !== null && node.alt !== undefined) {\n    properties.alt = node.alt\n  }\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `inlineCode` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {InlineCode} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function inlineCode(state, node) {\n  /** @type {Text} */\n  const text = {type: 'text', value: node.value.replace(/\\r?\\n|\\r/g, ' ')}\n  state.patch(node, text)\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'code',\n    properties: {},\n    children: [text]\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `linkReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {LinkReference} node\n *   mdast node.\n * @returns {Array<ElementContent> | ElementContent}\n *   hast node.\n */\nexport function linkReference(state, node) {\n  const id = String(node.identifier).toUpperCase()\n  const definition = state.definitionById.get(id)\n\n  if (!definition) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(definition.url || '')}\n\n  if (definition.title !== null && definition.title !== undefined) {\n    properties.title = definition.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Link} Link\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `link` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Link} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function link(state, node) {\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(node.url)}\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `listItem` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ListItem} node\n *   mdast node.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function listItem(state, node, parent) {\n  const results = state.all(node)\n  const loose = parent ? listLoose(parent) : listItemLoose(node)\n  /** @type {Properties} */\n  const properties = {}\n  /** @type {Array<ElementContent>} */\n  const children = []\n\n  if (typeof node.checked === 'boolean') {\n    const head = results[0]\n    /** @type {Element} */\n    let paragraph\n\n    if (head && head.type === 'element' && head.tagName === 'p') {\n      paragraph = head\n    } else {\n      paragraph = {type: 'element', tagName: 'p', properties: {}, children: []}\n      results.unshift(paragraph)\n    }\n\n    if (paragraph.children.length > 0) {\n      paragraph.children.unshift({type: 'text', value: ' '})\n    }\n\n    paragraph.children.unshift({\n      type: 'element',\n      tagName: 'input',\n      properties: {type: 'checkbox', checked: node.checked, disabled: true},\n      children: []\n    })\n\n    // According to github-markdown-css, this class hides bullet.\n    // See: <https://github.com/sindresorhus/github-markdown-css>.\n    properties.className = ['task-list-item']\n  }\n\n  let index = -1\n\n  while (++index < results.length) {\n    const child = results[index]\n\n    // Add eols before nodes, except if this is a loose, first paragraph.\n    if (\n      loose ||\n      index !== 0 ||\n      child.type !== 'element' ||\n      child.tagName !== 'p'\n    ) {\n      children.push({type: 'text', value: '\\n'})\n    }\n\n    if (child.type === 'element' && child.tagName === 'p' && !loose) {\n      children.push(...child.children)\n    } else {\n      children.push(child)\n    }\n  }\n\n  const tail = results[results.length - 1]\n\n  // Add a final eol.\n  if (tail && (loose || tail.type !== 'element' || tail.tagName !== 'p')) {\n    children.push({type: 'text', value: '\\n'})\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'li', properties, children}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * @param {Parents} node\n * @return {Boolean}\n */\nfunction listLoose(node) {\n  let loose = false\n  if (node.type === 'list') {\n    loose = node.spread || false\n    const children = node.children\n    let index = -1\n\n    while (!loose && ++index < children.length) {\n      loose = listItemLoose(children[index])\n    }\n  }\n\n  return loose\n}\n\n/**\n * @param {ListItem} node\n * @return {Boolean}\n */\nfunction listItemLoose(node) {\n  const spread = node.spread\n\n  return spread === null || spread === undefined\n    ? node.children.length > 1\n    : spread\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').List} List\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `list` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {List} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function list(state, node) {\n  /** @type {Properties} */\n  const properties = {}\n  const results = state.all(node)\n  let index = -1\n\n  if (typeof node.start === 'number' && node.start !== 1) {\n    properties.start = node.start\n  }\n\n  // Like GitHub, add a class for custom styling.\n  while (++index < results.length) {\n    const child = results[index]\n\n    if (\n      child.type === 'element' &&\n      child.tagName === 'li' &&\n      child.properties &&\n      Array.isArray(child.properties.className) &&\n      child.properties.className.includes('task-list-item')\n    ) {\n      properties.className = ['contains-task-list']\n      break\n    }\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: node.ordered ? 'ol' : 'ul',\n    properties,\n    children: state.wrap(results, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `paragraph` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Paragraph} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function paragraph(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'p',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Parents} HastParents\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `root` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastRoot} node\n *   mdast node.\n * @returns {HastParents}\n *   hast node.\n */\nexport function root(state, node) {\n  /** @type {HastRoot} */\n  const result = {type: 'root', children: state.wrap(state.all(node))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `strong` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Strong} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strong(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'strong',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Table} Table\n * @typedef {import('../state.js').State} State\n */\n\nimport {pointEnd, pointStart} from 'unist-util-position'\n\n/**\n * Turn an mdast `table` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Table} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function table(state, node) {\n  const rows = state.all(node)\n  const firstRow = rows.shift()\n  /** @type {Array<Element>} */\n  const tableContent = []\n\n  if (firstRow) {\n    /** @type {Element} */\n    const head = {\n      type: 'element',\n      tagName: 'thead',\n      properties: {},\n      children: state.wrap([firstRow], true)\n    }\n    state.patch(node.children[0], head)\n    tableContent.push(head)\n  }\n\n  if (rows.length > 0) {\n    /** @type {Element} */\n    const body = {\n      type: 'element',\n      tagName: 'tbody',\n      properties: {},\n      children: state.wrap(rows, true)\n    }\n\n    const start = pointStart(node.children[1])\n    const end = pointEnd(node.children[node.children.length - 1])\n    if (start && end) body.position = {start, end}\n    tableContent.push(body)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'table',\n    properties: {},\n    children: state.wrap(tableContent, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('mdast').TableRow} TableRow\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `tableRow` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableRow} node\n *   mdast node.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function tableRow(state, node, parent) {\n  const siblings = parent ? parent.children : undefined\n  // Generate a body row when without parent.\n  const rowIndex = siblings ? siblings.indexOf(node) : 1\n  const tagName = rowIndex === 0 ? 'th' : 'td'\n  // To do: option to use `style`?\n  const align = parent && parent.type === 'table' ? parent.align : undefined\n  const length = align ? align.length : node.children.length\n  let cellIndex = -1\n  /** @type {Array<ElementContent>} */\n  const cells = []\n\n  while (++cellIndex < length) {\n    // Note: can also be undefined.\n    const cell = node.children[cellIndex]\n    /** @type {Properties} */\n    const properties = {}\n    const alignValue = align ? align[cellIndex] : undefined\n\n    if (alignValue) {\n      properties.align = alignValue\n    }\n\n    /** @type {Element} */\n    let result = {type: 'element', tagName, properties, children: []}\n\n    if (cell) {\n      result.children = state.all(cell)\n      state.patch(cell, result)\n      result = state.applyData(cell, result)\n    }\n\n    cells.push(result)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'tr',\n    properties: {},\n    children: state.wrap(cells, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `tableCell` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableCell} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function tableCell(state, node) {\n  // Note: this function is normally not called: see `table-row` for how rows\n  // and their cells are compiled.\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'td', // Assume body cell.\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","const tab = 9 /* `\\t` */\nconst space = 32 /* ` ` */\n\n/**\n * Remove initial and final spaces and tabs at the line breaks in `value`.\n * Does not trim initial and final spaces and tabs of the value itself.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Trimmed value.\n */\nexport function trimLines(value) {\n  const source = String(value)\n  const search = /\\r?\\n|\\r/g\n  let match = search.exec(source)\n  let last = 0\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (match) {\n    lines.push(\n      trimLine(source.slice(last, match.index), last > 0, true),\n      match[0]\n    )\n\n    last = match.index + match[0].length\n    match = search.exec(source)\n  }\n\n  lines.push(trimLine(source.slice(last), last > 0, false))\n\n  return lines.join('')\n}\n\n/**\n * @param {string} value\n *   Line to trim.\n * @param {boolean} start\n *   Whether to trim the start of the line.\n * @param {boolean} end\n *   Whether to trim the end of the line.\n * @returns {string}\n *   Trimmed line.\n */\nfunction trimLine(value, start, end) {\n  let startIndex = 0\n  let endIndex = value.length\n\n  if (start) {\n    let code = value.codePointAt(startIndex)\n\n    while (code === tab || code === space) {\n      startIndex++\n      code = value.codePointAt(startIndex)\n    }\n  }\n\n  if (end) {\n    let code = value.codePointAt(endIndex - 1)\n\n    while (code === tab || code === space) {\n      endIndex--\n      code = value.codePointAt(endIndex - 1)\n    }\n  }\n\n  return endIndex > startIndex ? value.slice(startIndex, endIndex) : ''\n}\n","/**\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').Text} HastText\n * @typedef {import('mdast').Text} MdastText\n * @typedef {import('../state.js').State} State\n */\n\nimport {trimLines} from 'trim-lines'\n\n/**\n * Turn an mdast `text` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastText} node\n *   mdast node.\n * @returns {HastElement | HastText}\n *   hast node.\n */\nexport function text(state, node) {\n  /** @type {HastText} */\n  const result = {type: 'text', value: trimLines(String(node.value))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `thematicBreak` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ThematicBreak} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function thematicBreak(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'hr',\n    properties: {},\n    children: []\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {strikethrough} from './delete.js'\nimport {emphasis} from './emphasis.js'\nimport {footnoteReference} from './footnote-reference.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {imageReference} from './image-reference.js'\nimport {image} from './image.js'\nimport {inlineCode} from './inline-code.js'\nimport {linkReference} from './link-reference.js'\nimport {link} from './link.js'\nimport {listItem} from './list-item.js'\nimport {list} from './list.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {table} from './table.js'\nimport {tableRow} from './table-row.js'\nimport {tableCell} from './table-cell.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/**\n * Default handlers for nodes.\n *\n * @satisfies {import('../state.js').Handlers}\n */\nexport const handlers = {\n  blockquote,\n  break: hardBreak,\n  code,\n  delete: strikethrough,\n  emphasis,\n  footnoteReference,\n  heading,\n  html,\n  imageReference,\n  image,\n  inlineCode,\n  linkReference,\n  link,\n  listItem,\n  list,\n  paragraph,\n  // @ts-expect-error: root is different, but hard to type.\n  root,\n  strong,\n  table,\n  tableCell,\n  tableRow,\n  text,\n  thematicBreak,\n  toml: ignore,\n  yaml: ignore,\n  definition: ignore,\n  footnoteDefinition: ignore\n}\n\n// Return nothing for nodes that are ignored.\nfunction ignore() {\n  return undefined\n}\n","export const VOID       = -1;\nexport const PRIMITIVE  = 0;\nexport const ARRAY      = 1;\nexport const OBJECT     = 2;\nexport const DATE       = 3;\nexport const REGEXP     = 4;\nexport const MAP        = 5;\nexport const SET        = 6;\nexport const ERROR      = 7;\nexport const BIGINT     = 8;\n// export const SYMBOL = 9;\n","import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst env = typeof self === 'object' ? self : globalThis;\n\nconst deserializer = ($, _) => {\n  const as = (out, index) => {\n    $.set(index, out);\n    return out;\n  };\n\n  const unpair = index => {\n    if ($.has(index))\n      return $.get(index);\n\n    const [type, value] = _[index];\n    switch (type) {\n      case PRIMITIVE:\n      case VOID:\n        return as(value, index);\n      case ARRAY: {\n        const arr = as([], index);\n        for (const index of value)\n          arr.push(unpair(index));\n        return arr;\n      }\n      case OBJECT: {\n        const object = as({}, index);\n        for (const [key, index] of value)\n          object[unpair(key)] = unpair(index);\n        return object;\n      }\n      case DATE:\n        return as(new Date(value), index);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as(new RegExp(source, flags), index);\n      }\n      case MAP: {\n        const map = as(new Map, index);\n        for (const [key, index] of value)\n          map.set(unpair(key), unpair(index));\n        return map;\n      }\n      case SET: {\n        const set = as(new Set, index);\n        for (const index of value)\n          set.add(unpair(index));\n        return set;\n      }\n      case ERROR: {\n        const {name, message} = value;\n        return as(new env[name](message), index);\n      }\n      case BIGINT:\n        return as(BigInt(value), index);\n      case 'BigInt':\n        return as(Object(BigInt(value)), index);\n    }\n    return as(new env[type](value), index);\n  };\n\n  return unpair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns a deserialized value from a serialized array of Records.\n * @param {Record[]} serialized a previously serialized value.\n * @returns {any}\n */\nexport const deserialize = serialized => deserializer(new Map, serialized)(0);\n","import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst EMPTY = '';\n\nconst {toString} = {};\nconst {keys} = Object;\n\nconst typeOf = value => {\n  const type = typeof value;\n  if (type !== 'object' || !value)\n    return [PRIMITIVE, type];\n\n  const asString = toString.call(value).slice(8, -1);\n  switch (asString) {\n    case 'Array':\n      return [ARRAY, EMPTY];\n    case 'Object':\n      return [OBJECT, EMPTY];\n    case 'Date':\n      return [DATE, EMPTY];\n    case 'RegExp':\n      return [REGEXP, EMPTY];\n    case 'Map':\n      return [MAP, EMPTY];\n    case 'Set':\n      return [SET, EMPTY];\n  }\n\n  if (asString.includes('Array'))\n    return [ARRAY, asString];\n\n  if (asString.includes('Error'))\n    return [ERROR, asString];\n\n  return [OBJECT, asString];\n};\n\nconst shouldSkip = ([TYPE, type]) => (\n  TYPE === PRIMITIVE &&\n  (type === 'function' || type === 'symbol')\n);\n\nconst serializer = (strict, json, $, _) => {\n\n  const as = (out, value) => {\n    const index = _.push(out) - 1;\n    $.set(value, index);\n    return index;\n  };\n\n  const pair = value => {\n    if ($.has(value))\n      return $.get(value);\n\n    let [TYPE, type] = typeOf(value);\n    switch (TYPE) {\n      case PRIMITIVE: {\n        let entry = value;\n        switch (type) {\n          case 'bigint':\n            TYPE = BIGINT;\n            entry = value.toString();\n            break;\n          case 'function':\n          case 'symbol':\n            if (strict)\n              throw new TypeError('unable to serialize ' + type);\n            entry = null;\n            break;\n          case 'undefined':\n            return as([VOID], value);\n        }\n        return as([TYPE, entry], value);\n      }\n      case ARRAY: {\n        if (type)\n          return as([type, [...value]], value);\n  \n        const arr = [];\n        const index = as([TYPE, arr], value);\n        for (const entry of value)\n          arr.push(pair(entry));\n        return index;\n      }\n      case OBJECT: {\n        if (type) {\n          switch (type) {\n            case 'BigInt':\n              return as([type, value.toString()], value);\n            case 'Boolean':\n            case 'Number':\n            case 'String':\n              return as([type, value.valueOf()], value);\n          }\n        }\n\n        if (json && ('toJSON' in value))\n          return pair(value.toJSON());\n\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const key of keys(value)) {\n          if (strict || !shouldSkip(typeOf(value[key])))\n            entries.push([pair(key), pair(value[key])]);\n        }\n        return index;\n      }\n      case DATE:\n        return as([TYPE, value.toISOString()], value);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as([TYPE, {source, flags}], value);\n      }\n      case MAP: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const [key, entry] of value) {\n          if (strict || !(shouldSkip(typeOf(key)) || shouldSkip(typeOf(entry))))\n            entries.push([pair(key), pair(entry)]);\n        }\n        return index;\n      }\n      case SET: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const entry of value) {\n          if (strict || !shouldSkip(typeOf(entry)))\n            entries.push(pair(entry));\n        }\n        return index;\n      }\n    }\n\n    const {message} = value;\n    return as([TYPE, {name: type, message}], value);\n  };\n\n  return pair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns an array of serialized Records.\n * @param {any} value a serializable value.\n * @param {{json?: boolean, lossy?: boolean}?} options an object with a `lossy` or `json` property that,\n *  if `true`, will not throw errors on incompatible types, and behave more\n *  like JSON stringify would behave. Symbol and Function will be discarded.\n * @returns {Record[]}\n */\n export const serialize = (value, {json, lossy} = {}) => {\n  const _ = [];\n  return serializer(!(json || lossy), !!json, new Map, _)(value), _;\n};\n","import {deserialize} from './deserialize.js';\nimport {serialize} from './serialize.js';\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns an array of serialized Records.\n * @param {any} any a serializable value.\n * @param {{transfer?: any[], json?: boolean, lossy?: boolean}?} options an object with\n * a transfer option (ignored when polyfilled) and/or non standard fields that\n * fallback to the polyfill if present.\n * @returns {Record[]}\n */\nexport default typeof structuredClone === \"function\" ?\n  /* c8 ignore start */\n  (any, options) => (\n    options && ('json' in options || 'lossy' in options) ?\n      deserialize(serialize(any, options)) : structuredClone(any)\n  ) :\n  (any, options) => deserialize(serialize(any, options));\n  /* c8 ignore stop */\n\nexport {deserialize, serialize};\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('./state.js').State} State\n */\n\n/**\n * @callback FootnoteBackContentTemplate\n *   Generate content for the backreference dynamically.\n *\n *   For the following markdown:\n *\n *   ```markdown\n *   Alpha[^micromark], bravo[^micromark], and charlie[^remark].\n *\n *   [^remark]: things about remark\n *   [^micromark]: things about micromark\n *   ```\n *\n *   This function will be called with:\n *\n *   *  `0` and `0` for the backreference from `things about micromark` to\n *      `alpha`, as it is the first used definition, and the first call to it\n *   *  `0` and `1` for the backreference from `things about micromark` to\n *      `bravo`, as it is the first used definition, and the second call to it\n *   *  `1` and `0` for the backreference from `things about remark` to\n *      `charlie`, as it is the second used definition\n * @param {number} referenceIndex\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {Array<ElementContent> | ElementContent | string}\n *   Content for the backreference when linking back from definitions to their\n *   reference.\n *\n * @callback FootnoteBackLabelTemplate\n *   Generate a back label dynamically.\n *\n *   For the following markdown:\n *\n *   ```markdown\n *   Alpha[^micromark], bravo[^micromark], and charlie[^remark].\n *\n *   [^remark]: things about remark\n *   [^micromark]: things about micromark\n *   ```\n *\n *   This function will be called with:\n *\n *   *  `0` and `0` for the backreference from `things about micromark` to\n *      `alpha`, as it is the first used definition, and the first call to it\n *   *  `0` and `1` for the backreference from `things about micromark` to\n *      `bravo`, as it is the first used definition, and the second call to it\n *   *  `1` and `0` for the backreference from `things about remark` to\n *      `charlie`, as it is the second used definition\n * @param {number} referenceIndex\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {string}\n *   Back label to use when linking back from definitions to their reference.\n */\n\nimport structuredClone from '@ungap/structured-clone'\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Generate the default content that GitHub uses on backreferences.\n *\n * @param {number} _\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {Array<ElementContent>}\n *   Content.\n */\nexport function defaultFootnoteBackContent(_, rereferenceIndex) {\n  /** @type {Array<ElementContent>} */\n  const result = [{type: 'text', value: '↩'}]\n\n  if (rereferenceIndex > 1) {\n    result.push({\n      type: 'element',\n      tagName: 'sup',\n      properties: {},\n      children: [{type: 'text', value: String(rereferenceIndex)}]\n    })\n  }\n\n  return result\n}\n\n/**\n * Generate the default label that GitHub uses on backreferences.\n *\n * @param {number} referenceIndex\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {string}\n *   Label.\n */\nexport function defaultFootnoteBackLabel(referenceIndex, rereferenceIndex) {\n  return (\n    'Back to reference ' +\n    (referenceIndex + 1) +\n    (rereferenceIndex > 1 ? '-' + rereferenceIndex : '')\n  )\n}\n\n/**\n * Generate a hast footer for called footnote definitions.\n *\n * @param {State} state\n *   Info passed around.\n * @returns {Element | undefined}\n *   `section` element or `undefined`.\n */\n// eslint-disable-next-line complexity\nexport function footer(state) {\n  const clobberPrefix =\n    typeof state.options.clobberPrefix === 'string'\n      ? state.options.clobberPrefix\n      : 'user-content-'\n  const footnoteBackContent =\n    state.options.footnoteBackContent || defaultFootnoteBackContent\n  const footnoteBackLabel =\n    state.options.footnoteBackLabel || defaultFootnoteBackLabel\n  const footnoteLabel = state.options.footnoteLabel || 'Footnotes'\n  const footnoteLabelTagName = state.options.footnoteLabelTagName || 'h2'\n  const footnoteLabelProperties = state.options.footnoteLabelProperties || {\n    className: ['sr-only']\n  }\n  /** @type {Array<ElementContent>} */\n  const listItems = []\n  let referenceIndex = -1\n\n  while (++referenceIndex < state.footnoteOrder.length) {\n    const definition = state.footnoteById.get(\n      state.footnoteOrder[referenceIndex]\n    )\n\n    if (!definition) {\n      continue\n    }\n\n    const content = state.all(definition)\n    const id = String(definition.identifier).toUpperCase()\n    const safeId = normalizeUri(id.toLowerCase())\n    let rereferenceIndex = 0\n    /** @type {Array<ElementContent>} */\n    const backReferences = []\n    const counts = state.footnoteCounts.get(id)\n\n    // eslint-disable-next-line no-unmodified-loop-condition\n    while (counts !== undefined && ++rereferenceIndex <= counts) {\n      if (backReferences.length > 0) {\n        backReferences.push({type: 'text', value: ' '})\n      }\n\n      let children =\n        typeof footnoteBackContent === 'string'\n          ? footnoteBackContent\n          : footnoteBackContent(referenceIndex, rereferenceIndex)\n\n      if (typeof children === 'string') {\n        children = {type: 'text', value: children}\n      }\n\n      backReferences.push({\n        type: 'element',\n        tagName: 'a',\n        properties: {\n          href:\n            '#' +\n            clobberPrefix +\n            'fnref-' +\n            safeId +\n            (rereferenceIndex > 1 ? '-' + rereferenceIndex : ''),\n          dataFootnoteBackref: '',\n          ariaLabel:\n            typeof footnoteBackLabel === 'string'\n              ? footnoteBackLabel\n              : footnoteBackLabel(referenceIndex, rereferenceIndex),\n          className: ['data-footnote-backref']\n        },\n        children: Array.isArray(children) ? children : [children]\n      })\n    }\n\n    const tail = content[content.length - 1]\n\n    if (tail && tail.type === 'element' && tail.tagName === 'p') {\n      const tailTail = tail.children[tail.children.length - 1]\n      if (tailTail && tailTail.type === 'text') {\n        tailTail.value += ' '\n      } else {\n        tail.children.push({type: 'text', value: ' '})\n      }\n\n      tail.children.push(...backReferences)\n    } else {\n      content.push(...backReferences)\n    }\n\n    /** @type {Element} */\n    const listItem = {\n      type: 'element',\n      tagName: 'li',\n      properties: {id: clobberPrefix + 'fn-' + safeId},\n      children: state.wrap(content, true)\n    }\n\n    state.patch(definition, listItem)\n\n    listItems.push(listItem)\n  }\n\n  if (listItems.length === 0) {\n    return\n  }\n\n  return {\n    type: 'element',\n    tagName: 'section',\n    properties: {dataFootnotes: true, className: ['footnotes']},\n    children: [\n      {\n        type: 'element',\n        tagName: footnoteLabelTagName,\n        properties: {\n          ...structuredClone(footnoteLabelProperties),\n          id: 'footnote-label'\n        },\n        children: [{type: 'text', value: footnoteLabel}]\n      },\n      {type: 'text', value: '\\n'},\n      {\n        type: 'element',\n        tagName: 'ol',\n        properties: {},\n        children: state.wrap(listItems, true)\n      },\n      {type: 'text', value: '\\n'}\n    ]\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n */\n\n/**\n * @template Fn\n * @template Fallback\n * @typedef {Fn extends (value: any) => value is infer Thing ? Thing : Fallback} Predicate\n */\n\n/**\n * @callback Check\n *   Check that an arbitrary value is a node.\n * @param {unknown} this\n *   The given context.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean}\n *   Whether this is a node and passes a test.\n *\n * @typedef {Record<string, unknown> | Node} Props\n *   Object to check for equivalence.\n *\n *   Note: `Node` is included as it is common but is not indexable.\n *\n * @typedef {Array<Props | TestFunction | string> | Props | TestFunction | string | null | undefined} Test\n *   Check for an arbitrary node.\n *\n * @callback TestFunction\n *   Check if a node passes a test.\n * @param {unknown} this\n *   The given context.\n * @param {Node} node\n *   A node.\n * @param {number | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean | undefined | void}\n *   Whether this node passes the test.\n *\n *   Note: `void` is included until TS sees no return as `undefined`.\n */\n\n/**\n * Check if `node` is a `Node` and whether it passes the given test.\n *\n * @param {unknown} node\n *   Thing to check, typically `Node`.\n * @param {Test} test\n *   A check for a specific node.\n * @param {number | null | undefined} index\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} parent\n *   The node’s parent.\n * @param {unknown} context\n *   Context object (`this`) to pass to `test` functions.\n * @returns {boolean}\n *   Whether `node` is a node and passes a test.\n */\nexport const is =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((node?: null | undefined) => false) &\n   *   ((node: unknown, test?: null | undefined, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((node: unknown, test?: Test, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function (node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      return looksLikeANode(node)\n        ? check.call(context, node, index, parent)\n        : false\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param {Test} test\n *   *   when nullish, checks if `node` is a `Node`.\n *   *   when `string`, works like passing `(node) => node.type === test`.\n *   *   when `function` checks if function passed the node is true.\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n *   *   when `array`, checks if any one of the subtests pass.\n * @returns {Check}\n *   An assertion.\n */\nexport const convert =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((test?: null | undefined) => (node?: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((test?: Test) => Check)\n   * )}\n   */\n  (\n    /**\n     * @param {Test} [test]\n     * @returns {Check}\n     */\n    function (test) {\n      if (test === null || test === undefined) {\n        return ok\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n\n/**\n * @param {Array<Props | TestFunction | string>} tests\n * @returns {Check}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<Check>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @type {TestFunction}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].apply(this, parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn an object into a test for a node with a certain fields.\n *\n * @param {Props} check\n * @returns {Check}\n */\nfunction propsFactory(check) {\n  const checkAsRecord = /** @type {Record<string, unknown>} */ (check)\n\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    const nodeAsRecord = /** @type {Record<string, unknown>} */ (\n      /** @type {unknown} */ (node)\n    )\n\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      if (nodeAsRecord[key] !== checkAsRecord[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Turn a string into a test for a node with a certain type.\n *\n * @param {string} check\n * @returns {Check}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Turn a custom test into a test for a node that passes that test.\n *\n * @param {TestFunction} testFunction\n * @returns {Check}\n */\nfunction castFactory(testFunction) {\n  return check\n\n  /**\n   * @this {unknown}\n   * @type {Check}\n   */\n  function check(value, index, parent) {\n    return Boolean(\n      looksLikeANode(value) &&\n        testFunction.call(\n          this,\n          value,\n          typeof index === 'number' ? index : undefined,\n          parent || undefined\n        )\n    )\n  }\n}\n\nfunction ok() {\n  return true\n}\n\n/**\n * @param {unknown} value\n * @returns {value is Node}\n */\nfunction looksLikeANode(value) {\n  return value !== null && typeof value === 'object' && 'type' in value\n}\n","/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {InternalAncestor<InclusiveDescendant<Tree>, Child>} Ancestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {'skip' | boolean} Action\n *   Union of the action types.\n *\n * @typedef {number} Index\n *   Move to the sibling at `index` next (after node itself is completely\n *   traversed).\n *\n *   Useful if mutating the tree, such as removing the node the visitor is\n *   currently on, or any of its previous siblings.\n *   Results less than 0 or greater than or equal to `children.length` stop\n *   traversing the parent.\n *\n * @typedef {[(Action | null | undefined | void)?, (Index | null | undefined)?]} ActionTuple\n *   List with one or two values, the first an action, the second an index.\n *\n * @typedef {Action | ActionTuple | Index | null | undefined | void} VisitorResult\n *   Any value that can be returned from a visitor.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform the parent of node (the last of `ancestors`).\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of an ancestor still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Array<VisitedParents>} ancestors\n *   Ancestors of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [VisitedParents=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Matches<InclusiveDescendant<Tree>, Check>, Ancestor<Tree, Matches<InclusiveDescendant<Tree>, Check>>>} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parents`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Tree type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from 'unist-util-visit-parents/do-not-use-color'\n\n/** @type {Readonly<ActionTuple>} */\nconst empty = []\n\n/**\n * Continue traversing as normal.\n */\nexport const CONTINUE = true\n\n/**\n * Stop traversing immediately.\n */\nexport const EXIT = false\n\n/**\n * Do not traverse this node’s children.\n */\nexport const SKIP = 'skip'\n\n/**\n * Visit nodes, with ancestral information.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} test\n *   `unist-util-is`-compatible test\n * @param {Visitor | boolean | null | undefined} [visitor]\n *   Handle each node.\n * @param {boolean | null | undefined} [reverse]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visitParents(tree, test, visitor, reverse) {\n  /** @type {Test} */\n  let check\n\n  if (typeof test === 'function' && typeof visitor !== 'function') {\n    reverse = visitor\n    // @ts-expect-error no visitor given, so `visitor` is test.\n    visitor = test\n  } else {\n    // @ts-expect-error visitor given, so `test` isn’t a visitor.\n    check = test\n  }\n\n  const is = convert(check)\n  const step = reverse ? -1 : 1\n\n  factory(tree, undefined, [])()\n\n  /**\n   * @param {UnistNode} node\n   * @param {number | undefined} index\n   * @param {Array<UnistParent>} parents\n   */\n  function factory(node, index, parents) {\n    const value = /** @type {Record<string, unknown>} */ (\n      node && typeof node === 'object' ? node : {}\n    )\n\n    if (typeof value.type === 'string') {\n      const name =\n        // `hast`\n        typeof value.tagName === 'string'\n          ? value.tagName\n          : // `xast`\n          typeof value.name === 'string'\n          ? value.name\n          : undefined\n\n      Object.defineProperty(visit, 'name', {\n        value:\n          'node (' + color(node.type + (name ? '<' + name + '>' : '')) + ')'\n      })\n    }\n\n    return visit\n\n    function visit() {\n      /** @type {Readonly<ActionTuple>} */\n      let result = empty\n      /** @type {Readonly<ActionTuple>} */\n      let subresult\n      /** @type {number} */\n      let offset\n      /** @type {Array<UnistParent>} */\n      let grandparents\n\n      if (!test || is(node, index, parents[parents.length - 1] || undefined)) {\n        // @ts-expect-error: `visitor` is now a visitor.\n        result = toResult(visitor(node, parents))\n\n        if (result[0] === EXIT) {\n          return result\n        }\n      }\n\n      if ('children' in node && node.children) {\n        const nodeAsParent = /** @type {UnistParent} */ (node)\n\n        if (nodeAsParent.children && result[0] !== SKIP) {\n          offset = (reverse ? nodeAsParent.children.length : -1) + step\n          grandparents = parents.concat(nodeAsParent)\n\n          while (offset > -1 && offset < nodeAsParent.children.length) {\n            const child = nodeAsParent.children[offset]\n\n            subresult = factory(child, offset, grandparents)()\n\n            if (subresult[0] === EXIT) {\n              return subresult\n            }\n\n            offset =\n              typeof subresult[1] === 'number' ? subresult[1] : offset + step\n          }\n        }\n      }\n\n      return result\n    }\n  }\n}\n\n/**\n * Turn a return value into a clean result.\n *\n * @param {VisitorResult} value\n *   Valid return values from visitors.\n * @returns {Readonly<ActionTuple>}\n *   Clean result.\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return value === null || value === undefined ? empty : [value]\n}\n","/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n// To do: use types from `unist-util-visit-parents` when it’s released.\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends UnistNode ? number | undefined : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends UnistParent ? Ancestor | undefined : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [Ancestor=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Visited, Parent<Ancestor, Visited>>} BuildVisitorFromMatch\n *   Build a typed `Visitor` function from a node and all possible parents.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Visited\n *   Node type.\n * @template {UnistParent} Ancestor\n *   Parent type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     Matches<Descendant, Check>,\n *     Extract<Descendant, UnistParent>\n *   >\n * )} BuildVisitorFromDescendants\n *   Build a typed `Visitor` function from a list of descendants and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Node type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} testOrVisitor\n *   `unist-util-is`-compatible test (optional, omit to pass a visitor).\n * @param {Visitor | boolean | null | undefined} [visitorOrReverse]\n *   Handle each node (when test is omitted, pass `reverse`).\n * @param {boolean | null | undefined} [maybeReverse=false]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visit(tree, testOrVisitor, visitorOrReverse, maybeReverse) {\n  /** @type {boolean | null | undefined} */\n  let reverse\n  /** @type {Test} */\n  let test\n  /** @type {Visitor} */\n  let visitor\n\n  if (\n    typeof testOrVisitor === 'function' &&\n    typeof visitorOrReverse !== 'function'\n  ) {\n    test = undefined\n    visitor = testOrVisitor\n    reverse = visitorOrReverse\n  } else {\n    // @ts-expect-error: assume the overload with test was given.\n    test = testOrVisitor\n    // @ts-expect-error: assume the overload with test was given.\n    visitor = visitorOrReverse\n    reverse = maybeReverse\n  }\n\n  visitParents(tree, test, overload, reverse)\n\n  /**\n   * @param {UnistNode} node\n   * @param {Array<UnistParent>} parents\n   */\n  function overload(node, parents) {\n    const parent = parents[parents.length - 1]\n    const index = parent ? parent.children.indexOf(node) : undefined\n    return visitor(node, index, parent)\n  }\n}\n","/**\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').ElementContent} HastElementContent\n * @typedef {import('hast').Nodes} HastNodes\n * @typedef {import('hast').Properties} HastProperties\n * @typedef {import('hast').RootContent} HastRootContent\n * @typedef {import('hast').Text} HastText\n *\n * @typedef {import('mdast').Definition} MdastDefinition\n * @typedef {import('mdast').FootnoteDefinition} MdastFootnoteDefinition\n * @typedef {import('mdast').Nodes} MdastNodes\n * @typedef {import('mdast').Parents} MdastParents\n *\n * @typedef {import('vfile').VFile} VFile\n *\n * @typedef {import('./footer.js').FootnoteBackContentTemplate} FootnoteBackContentTemplate\n * @typedef {import('./footer.js').FootnoteBackLabelTemplate} FootnoteBackLabelTemplate\n */\n\n/**\n * @callback Handler\n *   Handle a node.\n * @param {State} state\n *   Info passed around.\n * @param {any} node\n *   mdast node to handle.\n * @param {MdastParents | undefined} parent\n *   Parent of `node`.\n * @returns {Array<HastElementContent> | HastElementContent | undefined}\n *   hast node.\n *\n * @typedef {Partial<Record<MdastNodes['type'], Handler>>} Handlers\n *   Handle nodes.\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [allowDangerousHtml=false]\n *   Whether to persist raw HTML in markdown in the hast tree (default:\n *   `false`).\n * @property {string | null | undefined} [clobberPrefix='user-content-']\n *   Prefix to use before the `id` property on footnotes to prevent them from\n *   *clobbering* (default: `'user-content-'`).\n *\n *   Pass `''` for trusted markdown and when you are careful with\n *   polyfilling.\n *   You could pass a different prefix.\n *\n *   DOM clobbering is this:\n *\n *   ```html\n *   <p id=\"x\"></p>\n *   <script>alert(x) // `x` now refers to the `p#x` DOM element</script>\n *   ```\n *\n *   The above example shows that elements are made available by browsers, by\n *   their ID, on the `window` object.\n *   This is a security risk because you might be expecting some other variable\n *   at that place.\n *   It can also break polyfills.\n *   Using a prefix solves these problems.\n * @property {VFile | null | undefined} [file]\n *   Corresponding virtual file representing the input document (optional).\n * @property {FootnoteBackContentTemplate | string | null | undefined} [footnoteBackContent]\n *   Content of the backreference back to references (default: `defaultFootnoteBackContent`).\n *\n *   The default value is:\n *\n *   ```js\n *   function defaultFootnoteBackContent(_, rereferenceIndex) {\n *     const result = [{type: 'text', value: '↩'}]\n *\n *     if (rereferenceIndex > 1) {\n *       result.push({\n *         type: 'element',\n *         tagName: 'sup',\n *         properties: {},\n *         children: [{type: 'text', value: String(rereferenceIndex)}]\n *       })\n *     }\n *\n *     return result\n *   }\n *   ```\n *\n *   This content is used in the `a` element of each backreference (the `↩`\n *   links).\n * @property {FootnoteBackLabelTemplate | string | null | undefined} [footnoteBackLabel]\n *   Label to describe the backreference back to references (default:\n *   `defaultFootnoteBackLabel`).\n *\n *   The default value is:\n *\n *   ```js\n *   function defaultFootnoteBackLabel(referenceIndex, rereferenceIndex) {\n *    return (\n *      'Back to reference ' +\n *      (referenceIndex + 1) +\n *      (rereferenceIndex > 1 ? '-' + rereferenceIndex : '')\n *    )\n *   }\n *   ```\n *\n *   Change it when the markdown is not in English.\n *\n *   This label is used in the `ariaLabel` property on each backreference\n *   (the `↩` links).\n *   It affects users of assistive technology.\n * @property {string | null | undefined} [footnoteLabel='Footnotes']\n *   Textual label to use for the footnotes section (default: `'Footnotes'`).\n *\n *   Change it when the markdown is not in English.\n *\n *   This label is typically hidden visually (assuming a `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass different properties with the `footnoteLabelProperties` option.\n * @property {HastProperties | null | undefined} [footnoteLabelProperties={className: ['sr-only']}]\n *   Properties to use on the footnote label (default: `{className:\n *   ['sr-only']}`).\n *\n *   Change it to show the label and add other properties.\n *\n *   This label is typically hidden visually (assuming an `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass an empty string.\n *   You can also add different properties.\n *\n *   > **Note**: `id: 'footnote-label'` is always added, because footnote\n *   > calls use it with `aria-describedby` to provide an accessible label.\n * @property {string | null | undefined} [footnoteLabelTagName='h2']\n *   HTML tag name to use for the footnote label element (default: `'h2'`).\n *\n *   Change it to match your document structure.\n *\n *   This label is typically hidden visually (assuming a `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass different properties with the `footnoteLabelProperties` option.\n * @property {Handlers | null | undefined} [handlers]\n *   Extra handlers for nodes (optional).\n * @property {Array<MdastNodes['type']> | null | undefined} [passThrough]\n *   List of custom mdast node types to pass through (keep) in hast (note that\n *   the node itself is passed, but eventual children are transformed)\n *   (optional).\n * @property {Handler | null | undefined} [unknownHandler]\n *   Handler for all unknown nodes (optional).\n *\n * @typedef State\n *   Info passed around.\n * @property {(node: MdastNodes) => Array<HastElementContent>} all\n *   Transform the children of an mdast parent to hast.\n * @property {<Type extends HastNodes>(from: MdastNodes, to: Type) => HastElement | Type} applyData\n *   Honor the `data` of `from`, and generate an element instead of `node`.\n * @property {Map<string, MdastDefinition>} definitionById\n *   Definitions by their identifier.\n * @property {Map<string, MdastFootnoteDefinition>} footnoteById\n *   Footnote definitions by their identifier.\n * @property {Map<string, number>} footnoteCounts\n *   Counts for how often the same footnote was called.\n * @property {Array<string>} footnoteOrder\n *   Identifiers of order when footnote calls first appear in tree order.\n * @property {Handlers} handlers\n *   Applied handlers.\n * @property {(node: MdastNodes, parent: MdastParents | undefined) => Array<HastElementContent> | HastElementContent | undefined} one\n *   Transform an mdast node to hast.\n * @property {Options} options\n *   Configuration.\n * @property {(from: MdastNodes, node: HastNodes) => undefined} patch\n *   Copy a node’s positional info.\n * @property {<Type extends HastRootContent>(nodes: Array<Type>, loose?: boolean | undefined) => Array<HastText | Type>} wrap\n *   Wrap `nodes` with line endings between each node, adds initial/final line endings when `loose`.\n */\n\nimport structuredClone from '@ungap/structured-clone'\nimport {visit} from 'unist-util-visit'\nimport {position} from 'unist-util-position'\nimport {handlers as defaultHandlers} from './handlers/index.js'\n\nconst own = {}.hasOwnProperty\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Create `state` from an mdast tree.\n *\n * @param {MdastNodes} tree\n *   mdast node to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {State}\n *   `state` function.\n */\nexport function createState(tree, options) {\n  const settings = options || emptyOptions\n  /** @type {Map<string, MdastDefinition>} */\n  const definitionById = new Map()\n  /** @type {Map<string, MdastFootnoteDefinition>} */\n  const footnoteById = new Map()\n  /** @type {Map<string, number>} */\n  const footnoteCounts = new Map()\n  /** @type {Handlers} */\n  // @ts-expect-error: the root handler returns a root.\n  // Hard to type.\n  const handlers = {...defaultHandlers, ...settings.handlers}\n\n  /** @type {State} */\n  const state = {\n    all,\n    applyData,\n    definitionById,\n    footnoteById,\n    footnoteCounts,\n    footnoteOrder: [],\n    handlers,\n    one,\n    options: settings,\n    patch,\n    wrap\n  }\n\n  visit(tree, function (node) {\n    if (node.type === 'definition' || node.type === 'footnoteDefinition') {\n      const map = node.type === 'definition' ? definitionById : footnoteById\n      const id = String(node.identifier).toUpperCase()\n\n      // Mimick CM behavior of link definitions.\n      // See: <https://github.com/syntax-tree/mdast-util-definitions/blob/9032189/lib/index.js#L20-L21>.\n      if (!map.has(id)) {\n        // @ts-expect-error: node type matches map.\n        map.set(id, node)\n      }\n    }\n  })\n\n  return state\n\n  /**\n   * Transform an mdast node into a hast node.\n   *\n   * @param {MdastNodes} node\n   *   mdast node.\n   * @param {MdastParents | undefined} [parent]\n   *   Parent of `node`.\n   * @returns {Array<HastElementContent> | HastElementContent | undefined}\n   *   Resulting hast node.\n   */\n  function one(node, parent) {\n    const type = node.type\n    const handle = state.handlers[type]\n\n    if (own.call(state.handlers, type) && handle) {\n      return handle(state, node, parent)\n    }\n\n    if (state.options.passThrough && state.options.passThrough.includes(type)) {\n      if ('children' in node) {\n        const {children, ...shallow} = node\n        const result = structuredClone(shallow)\n        // @ts-expect-error: TS doesn’t understand…\n        result.children = state.all(node)\n        // @ts-expect-error: TS doesn’t understand…\n        return result\n      }\n\n      // @ts-expect-error: it’s custom.\n      return structuredClone(node)\n    }\n\n    const unknown = state.options.unknownHandler || defaultUnknownHandler\n\n    return unknown(state, node, parent)\n  }\n\n  /**\n   * Transform the children of an mdast node into hast nodes.\n   *\n   * @param {MdastNodes} parent\n   *   mdast node to compile\n   * @returns {Array<HastElementContent>}\n   *   Resulting hast nodes.\n   */\n  function all(parent) {\n    /** @type {Array<HastElementContent>} */\n    const values = []\n\n    if ('children' in parent) {\n      const nodes = parent.children\n      let index = -1\n      while (++index < nodes.length) {\n        const result = state.one(nodes[index], parent)\n\n        // To do: see if we van clean this? Can we merge texts?\n        if (result) {\n          if (index && nodes[index - 1].type === 'break') {\n            if (!Array.isArray(result) && result.type === 'text') {\n              result.value = trimMarkdownSpaceStart(result.value)\n            }\n\n            if (!Array.isArray(result) && result.type === 'element') {\n              const head = result.children[0]\n\n              if (head && head.type === 'text') {\n                head.value = trimMarkdownSpaceStart(head.value)\n              }\n            }\n          }\n\n          if (Array.isArray(result)) {\n            values.push(...result)\n          } else {\n            values.push(result)\n          }\n        }\n      }\n    }\n\n    return values\n  }\n}\n\n/**\n * Copy a node’s positional info.\n *\n * @param {MdastNodes} from\n *   mdast node to copy from.\n * @param {HastNodes} to\n *   hast node to copy into.\n * @returns {undefined}\n *   Nothing.\n */\nfunction patch(from, to) {\n  if (from.position) to.position = position(from)\n}\n\n/**\n * Honor the `data` of `from` and maybe generate an element instead of `to`.\n *\n * @template {HastNodes} Type\n *   Node type.\n * @param {MdastNodes} from\n *   mdast node to use data from.\n * @param {Type} to\n *   hast node to change.\n * @returns {HastElement | Type}\n *   Nothing.\n */\nfunction applyData(from, to) {\n  /** @type {HastElement | Type} */\n  let result = to\n\n  // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n  if (from && from.data) {\n    const hName = from.data.hName\n    const hChildren = from.data.hChildren\n    const hProperties = from.data.hProperties\n\n    if (typeof hName === 'string') {\n      // Transforming the node resulted in an element with a different name\n      // than wanted:\n      if (result.type === 'element') {\n        result.tagName = hName\n      }\n      // Transforming the node resulted in a non-element, which happens for\n      // raw, text, and root nodes (unless custom handlers are passed).\n      // The intent of `hName` is to create an element, but likely also to keep\n      // the content around (otherwise: pass `hChildren`).\n      else {\n        /** @type {Array<HastElementContent>} */\n        // @ts-expect-error: assume no doctypes in `root`.\n        const children = 'children' in result ? result.children : [result]\n        result = {type: 'element', tagName: hName, properties: {}, children}\n      }\n    }\n\n    if (result.type === 'element' && hProperties) {\n      Object.assign(result.properties, structuredClone(hProperties))\n    }\n\n    if (\n      'children' in result &&\n      result.children &&\n      hChildren !== null &&\n      hChildren !== undefined\n    ) {\n      result.children = hChildren\n    }\n  }\n\n  return result\n}\n\n/**\n * Transform an unknown node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} node\n *   Unknown mdast node.\n * @returns {HastElement | HastText}\n *   Resulting hast node.\n */\nfunction defaultUnknownHandler(state, node) {\n  const data = node.data || {}\n  /** @type {HastElement | HastText} */\n  const result =\n    'value' in node &&\n    !(own.call(data, 'hProperties') || own.call(data, 'hChildren'))\n      ? {type: 'text', value: node.value}\n      : {\n          type: 'element',\n          tagName: 'div',\n          properties: {},\n          children: state.all(node)\n        }\n\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * Wrap `nodes` with line endings between each node.\n *\n * @template {HastRootContent} Type\n *   Node type.\n * @param {Array<Type>} nodes\n *   List of nodes to wrap.\n * @param {boolean | undefined} [loose=false]\n *   Whether to add line endings at start and end (default: `false`).\n * @returns {Array<HastText | Type>}\n *   Wrapped nodes.\n */\nexport function wrap(nodes, loose) {\n  /** @type {Array<HastText | Type>} */\n  const result = []\n  let index = -1\n\n  if (loose) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  while (++index < nodes.length) {\n    if (index) result.push({type: 'text', value: '\\n'})\n    result.push(nodes[index])\n  }\n\n  if (loose && nodes.length > 0) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  return result\n}\n\n/**\n * Trim spaces and tabs at the start of `value`.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Result.\n */\nfunction trimMarkdownSpaceStart(value) {\n  let index = 0\n  let code = value.charCodeAt(index)\n\n  while (code === 9 || code === 32) {\n    index++\n    code = value.charCodeAt(index)\n  }\n\n  return value.slice(index)\n}\n","/**\n * @typedef {import('hast').Nodes} HastNodes\n * @typedef {import('mdast').Nodes} MdastNodes\n * @typedef {import('./state.js').Options} Options\n */\n\nimport {ok as assert} from 'devlop'\nimport {footer} from './footer.js'\nimport {createState} from './state.js'\n\n/**\n * Transform mdast to hast.\n *\n * ##### Notes\n *\n * ###### HTML\n *\n * Raw HTML is available in mdast as `html` nodes and can be embedded in hast\n * as semistandard `raw` nodes.\n * Most utilities ignore `raw` nodes but two notable ones don’t:\n *\n * *   `hast-util-to-html` also has an option `allowDangerousHtml` which will\n *     output the raw HTML.\n *     This is typically discouraged as noted by the option name but is useful\n *     if you completely trust authors\n * *   `hast-util-raw` can handle the raw embedded HTML strings by parsing them\n *     into standard hast nodes (`element`, `text`, etc).\n *     This is a heavy task as it needs a full HTML parser, but it is the only\n *     way to support untrusted content\n *\n * ###### Footnotes\n *\n * Many options supported here relate to footnotes.\n * Footnotes are not specified by CommonMark, which we follow by default.\n * They are supported by GitHub, so footnotes can be enabled in markdown with\n * `mdast-util-gfm`.\n *\n * The options `footnoteBackLabel` and `footnoteLabel` define natural language\n * that explains footnotes, which is hidden for sighted users but shown to\n * assistive technology.\n * When your page is not in English, you must define translated values.\n *\n * Back references use ARIA attributes, but the section label itself uses a\n * heading that is hidden with an `sr-only` class.\n * To show it to sighted users, define different attributes in\n * `footnoteLabelProperties`.\n *\n * ###### Clobbering\n *\n * Footnotes introduces a problem, as it links footnote calls to footnote\n * definitions on the page through `id` attributes generated from user content,\n * which results in DOM clobbering.\n *\n * DOM clobbering is this:\n *\n * ```html\n * <p id=x></p>\n * <script>alert(x) // `x` now refers to the DOM `p#x` element</script>\n * ```\n *\n * Elements by their ID are made available by browsers on the `window` object,\n * which is a security risk.\n * Using a prefix solves this problem.\n *\n * More information on how to handle clobbering and the prefix is explained in\n * Example: headings (DOM clobbering) in `rehype-sanitize`.\n *\n * ###### Unknown nodes\n *\n * Unknown nodes are nodes with a type that isn’t in `handlers` or `passThrough`.\n * The default behavior for unknown nodes is:\n *\n * *   when the node has a `value` (and doesn’t have `data.hName`,\n *     `data.hProperties`, or `data.hChildren`, see later), create a hast `text`\n *     node\n * *   otherwise, create a `<div>` element (which could be changed with\n *     `data.hName`), with its children mapped from mdast to hast as well\n *\n * This behavior can be changed by passing an `unknownHandler`.\n *\n * @param {MdastNodes} tree\n *   mdast tree.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {HastNodes}\n *   hast tree.\n */\nexport function toHast(tree, options) {\n  const state = createState(tree, options)\n  const node = state.one(tree, undefined)\n  const foot = footer(state)\n  /** @type {HastNodes} */\n  const result = Array.isArray(node)\n    ? {type: 'root', children: node}\n    : node || {type: 'root', children: []}\n\n  if (foot) {\n    // If there’s a footer, there were definitions, meaning block\n    // content.\n    // So `result` is a parent node.\n    assert('children' in result)\n    result.children.push({type: 'text', value: '\\n'}, foot)\n  }\n\n  return result\n}\n","// Include `data` fields in mdast and `raw` nodes in hast.\n/// <reference types=\"mdast-util-to-hast\" />\n\n/**\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('mdast-util-to-hast').Options} ToHastOptions\n * @typedef {import('unified').Processor} Processor\n * @typedef {import('vfile').VFile} VFile\n */\n\n/**\n * @typedef {Omit<ToHastOptions, 'file'>} Options\n *\n * @callback TransformBridge\n *   Bridge-mode.\n *\n *   Runs the destination with the new hast tree.\n *   Discards result.\n * @param {MdastRoot} tree\n *   Tree.\n * @param {VFile} file\n *   File.\n * @returns {Promise<undefined>}\n *   Nothing.\n *\n * @callback TransformMutate\n *  Mutate-mode.\n *\n *  Further transformers run on the hast tree.\n * @param {MdastRoot} tree\n *   Tree.\n * @param {VFile} file\n *   File.\n * @returns {HastRoot}\n *   Tree (hast).\n */\n\nimport {toHast} from 'mdast-util-to-hast'\n\n/**\n * Turn markdown into HTML.\n *\n * ##### Notes\n *\n * ###### Signature\n *\n * *   if a processor is given, runs the (rehype) plugins used on it with a\n *     hast tree, then discards the result (*bridge mode*)\n * *   otherwise, returns a hast tree, the plugins used after `remarkRehype`\n *     are rehype plugins (*mutate mode*)\n *\n * > 👉 **Note**: It’s highly unlikely that you want to pass a `processor`.\n *\n * ###### HTML\n *\n * Raw HTML is available in mdast as `html` nodes and can be embedded in hast\n * as semistandard `raw` nodes.\n * Most plugins ignore `raw` nodes but two notable ones don’t:\n *\n * *   `rehype-stringify` also has an option `allowDangerousHtml` which will\n *     output the raw HTML.\n *     This is typically discouraged as noted by the option name but is useful if\n *     you completely trust authors\n * *   `rehype-raw` can handle the raw embedded HTML strings by parsing them\n *     into standard hast nodes (`element`, `text`, etc).\n *     This is a heavy task as it needs a full HTML parser, but it is the only way\n *     to support untrusted content\n *\n * ###### Footnotes\n *\n * Many options supported here relate to footnotes.\n * Footnotes are not specified by CommonMark, which we follow by default.\n * They are supported by GitHub, so footnotes can be enabled in markdown with\n * `remark-gfm`.\n *\n * The options `footnoteBackLabel` and `footnoteLabel` define natural language\n * that explains footnotes, which is hidden for sighted users but shown to\n * assistive technology.\n * When your page is not in English, you must define translated values.\n *\n * Back references use ARIA attributes, but the section label itself uses a\n * heading that is hidden with an `sr-only` class.\n * To show it to sighted users, define different attributes in\n * `footnoteLabelProperties`.\n *\n * ###### Clobbering\n *\n * Footnotes introduces a problem, as it links footnote calls to footnote\n * definitions on the page through `id` attributes generated from user content,\n * which results in DOM clobbering.\n *\n * DOM clobbering is this:\n *\n * ```html\n * <p id=x></p>\n * <script>alert(x) // `x` now refers to the DOM `p#x` element</script>\n * ```\n *\n * Elements by their ID are made available by browsers on the `window` object,\n * which is a security risk.\n * Using a prefix solves this problem.\n *\n * More information on how to handle clobbering and the prefix is explained in\n * *Example: headings (DOM clobbering)* in `rehype-sanitize`.\n *\n * ###### Unknown nodes\n *\n * Unknown nodes are nodes with a type that isn’t in `handlers` or `passThrough`.\n * The default behavior for unknown nodes is:\n *\n * *   when the node has a `value` (and doesn’t have `data.hName`,\n *     `data.hProperties`, or `data.hChildren`, see later), create a hast `text`\n *     node\n * *   otherwise, create a `<div>` element (which could be changed with\n *     `data.hName`), with its children mapped from mdast to hast as well\n *\n * This behavior can be changed by passing an `unknownHandler`.\n *\n * @overload\n * @param {Processor} processor\n * @param {Readonly<Options> | null | undefined} [options]\n * @returns {TransformBridge}\n *\n * @overload\n * @param {Readonly<Options> | null | undefined} [options]\n * @returns {TransformMutate}\n *\n * @param {Readonly<Options> | Processor | null | undefined} [destination]\n *   Processor or configuration (optional).\n * @param {Readonly<Options> | null | undefined} [options]\n *   When a processor was given, configuration (optional).\n * @returns {TransformBridge | TransformMutate}\n *   Transform.\n */\nexport default function remarkRehype(destination, options) {\n  if (destination && 'run' in destination) {\n    /**\n     * @type {TransformBridge}\n     */\n    return async function (tree, file) {\n      // Cast because root in -> root out.\n      const hastTree = /** @type {HastRoot} */ (\n        toHast(tree, {file, ...options})\n      )\n      await destination.run(hastTree, file)\n    }\n  }\n\n  /**\n   * @type {TransformMutate}\n   */\n  return function (tree, file) {\n    // Cast because root in -> root out.\n    return /** @type {HastRoot} */ (\n      toHast(tree, {file, ...(options || destination)})\n    )\n  }\n}\n","/**\n * Throw a given error.\n *\n * @param {Error|null|undefined} [error]\n *   Maybe error.\n * @returns {asserts error is null|undefined}\n */\nexport function bail(error) {\n  if (error) {\n    throw error\n  }\n}\n","'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","export default function isPlainObject(value) {\n\tif (typeof value !== 'object' || value === null) {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in value) && !(Symbol.iterator in value);\n}\n","// To do: remove `void`s\n// To do: remove `null` from output of our APIs, allow it as user APIs.\n\n/**\n * @typedef {(error?: Error | null | undefined, ...output: Array<any>) => void} Callback\n *   Callback.\n *\n * @typedef {(...input: Array<any>) => any} Middleware\n *   Ware.\n *\n * @typedef Pipeline\n *   Pipeline.\n * @property {Run} run\n *   Run the pipeline.\n * @property {Use} use\n *   Add middleware.\n *\n * @typedef {(...input: Array<any>) => void} Run\n *   Call all middleware.\n *\n *   Calls `done` on completion with either an error or the output of the\n *   last middleware.\n *\n *   > 👉 **Note**: as the length of input defines whether async functions get a\n *   > `next` function,\n *   > it’s recommended to keep `input` at one value normally.\n\n *\n * @typedef {(fn: Middleware) => Pipeline} Use\n *   Add middleware.\n */\n\n/**\n * Create new middleware.\n *\n * @returns {Pipeline}\n *   Pipeline.\n */\nexport function trough() {\n  /** @type {Array<Middleware>} */\n  const fns = []\n  /** @type {Pipeline} */\n  const pipeline = {run, use}\n\n  return pipeline\n\n  /** @type {Run} */\n  function run(...values) {\n    let middlewareIndex = -1\n    /** @type {Callback} */\n    const callback = values.pop()\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('Expected function as last argument, not ' + callback)\n    }\n\n    next(null, ...values)\n\n    /**\n     * Run the next `fn`, or we’re done.\n     *\n     * @param {Error | null | undefined} error\n     * @param {Array<any>} output\n     */\n    function next(error, ...output) {\n      const fn = fns[++middlewareIndex]\n      let index = -1\n\n      if (error) {\n        callback(error)\n        return\n      }\n\n      // Copy non-nullish input into values.\n      while (++index < values.length) {\n        if (output[index] === null || output[index] === undefined) {\n          output[index] = values[index]\n        }\n      }\n\n      // Save the newly created `output` for the next call.\n      values = output\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next)(...output)\n      } else {\n        callback(null, ...output)\n      }\n    }\n  }\n\n  /** @type {Use} */\n  function use(middelware) {\n    if (typeof middelware !== 'function') {\n      throw new TypeError(\n        'Expected `middelware` to be a function, not ' + middelware\n      )\n    }\n\n    fns.push(middelware)\n    return pipeline\n  }\n}\n\n/**\n * Wrap `middleware` into a uniform interface.\n *\n * You can pass all input to the resulting function.\n * `callback` is then called with the output of `middleware`.\n *\n * If `middleware` accepts more arguments than the later given in input,\n * an extra `done` function is passed to it after that input,\n * which must be called by `middleware`.\n *\n * The first value in `input` is the main input value.\n * All other input values are the rest input values.\n * The values given to `callback` are the input values,\n * merged with every non-nullish output value.\n *\n * * if `middleware` throws an error,\n *   returns a promise that is rejected,\n *   or calls the given `done` function with an error,\n *   `callback` is called with that error\n * * if `middleware` returns a value or returns a promise that is resolved,\n *   that value is the main output value\n * * if `middleware` calls `done`,\n *   all non-nullish values except for the first one (the error) overwrite the\n *   output values\n *\n * @param {Middleware} middleware\n *   Function to wrap.\n * @param {Callback} callback\n *   Callback called with the output of `middleware`.\n * @returns {Run}\n *   Wrapped middleware.\n */\nexport function wrap(middleware, callback) {\n  /** @type {boolean} */\n  let called\n\n  return wrapped\n\n  /**\n   * Call `middleware`.\n   * @this {any}\n   * @param {Array<any>} parameters\n   * @returns {void}\n   */\n  function wrapped(...parameters) {\n    const fnExpectsCallback = middleware.length > parameters.length\n    /** @type {any} */\n    let result\n\n    if (fnExpectsCallback) {\n      parameters.push(done)\n    }\n\n    try {\n      result = middleware.apply(this, parameters)\n    } catch (error) {\n      const exception = /** @type {Error} */ (error)\n\n      // Well, this is quite the pickle.\n      // `middleware` received a callback and called it synchronously, but that\n      // threw an error.\n      // The only thing left to do is to throw the thing instead.\n      if (fnExpectsCallback && called) {\n        throw exception\n      }\n\n      return done(exception)\n    }\n\n    if (!fnExpectsCallback) {\n      if (result && result.then && typeof result.then === 'function') {\n        result.then(then, done)\n      } else if (result instanceof Error) {\n        done(result)\n      } else {\n        then(result)\n      }\n    }\n  }\n\n  /**\n   * Call `callback`, only once.\n   *\n   * @type {Callback}\n   */\n  function done(error, ...output) {\n    if (!called) {\n      called = true\n      callback(error, ...output)\n    }\n  }\n\n  /**\n   * Call `done` with one value.\n   *\n   * @param {any} [value]\n   */\n  function then(value) {\n    done(null, value)\n  }\n}\n","// A derivative work based on:\n// <https://github.com/browserify/path-browserify>.\n// Which is licensed:\n//\n// MIT License\n//\n// Copyright (c) 2013 James Halliday\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A derivative work based on:\n//\n// Parts of that are extracted from Node’s internal `path` module:\n// <https://github.com/nodejs/node/blob/master/lib/path.js>.\n// Which is licensed:\n//\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nexport const path = {basename, dirname, extname, join, sep: '/'}\n\n/* eslint-disable max-depth, complexity */\n\n/**\n * Get the basename from a path.\n *\n * @param {string} path\n *   File path.\n * @param {string | null | undefined} [ext]\n *   Extension to strip.\n * @returns {string}\n *   Stem or basename.\n */\nfunction basename(path, ext) {\n  if (ext !== undefined && typeof ext !== 'string') {\n    throw new TypeError('\"ext\" argument must be a string')\n  }\n\n  assertPath(path)\n  let start = 0\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let seenNonSlash\n\n  if (ext === undefined || ext.length === 0 || ext.length > path.length) {\n    while (index--) {\n      if (path.codePointAt(index) === 47 /* `/` */) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now.\n        if (seenNonSlash) {\n          start = index + 1\n          break\n        }\n      } else if (end < 0) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component.\n        seenNonSlash = true\n        end = index + 1\n      }\n    }\n\n    return end < 0 ? '' : path.slice(start, end)\n  }\n\n  if (ext === path) {\n    return ''\n  }\n\n  let firstNonSlashEnd = -1\n  let extIndex = ext.length - 1\n\n  while (index--) {\n    if (path.codePointAt(index) === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (seenNonSlash) {\n        start = index + 1\n        break\n      }\n    } else {\n      if (firstNonSlashEnd < 0) {\n        // We saw the first non-path separator, remember this index in case\n        // we need it if the extension ends up not matching.\n        seenNonSlash = true\n        firstNonSlashEnd = index + 1\n      }\n\n      if (extIndex > -1) {\n        // Try to match the explicit extension.\n        if (path.codePointAt(index) === ext.codePointAt(extIndex--)) {\n          if (extIndex < 0) {\n            // We matched the extension, so mark this as the end of our path\n            // component\n            end = index\n          }\n        } else {\n          // Extension does not match, so our result is the entire path\n          // component\n          extIndex = -1\n          end = firstNonSlashEnd\n        }\n      }\n    }\n  }\n\n  if (start === end) {\n    end = firstNonSlashEnd\n  } else if (end < 0) {\n    end = path.length\n  }\n\n  return path.slice(start, end)\n}\n\n/**\n * Get the dirname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\nfunction dirname(path) {\n  assertPath(path)\n\n  if (path.length === 0) {\n    return '.'\n  }\n\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  // Prefix `--` is important to not run on `0`.\n  while (--index) {\n    if (path.codePointAt(index) === 47 /* `/` */) {\n      if (unmatchedSlash) {\n        end = index\n        break\n      }\n    } else if (!unmatchedSlash) {\n      // We saw the first non-path separator\n      unmatchedSlash = true\n    }\n  }\n\n  return end < 0\n    ? path.codePointAt(0) === 47 /* `/` */\n      ? '/'\n      : '.'\n    : end === 1 && path.codePointAt(0) === 47 /* `/` */\n    ? '//'\n    : path.slice(0, end)\n}\n\n/**\n * Get an extname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   Extname.\n */\nfunction extname(path) {\n  assertPath(path)\n\n  let index = path.length\n\n  let end = -1\n  let startPart = 0\n  let startDot = -1\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find.\n  let preDotState = 0\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  while (index--) {\n    const code = path.codePointAt(index)\n\n    if (code === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (unmatchedSlash) {\n        startPart = index + 1\n        break\n      }\n\n      continue\n    }\n\n    if (end < 0) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension.\n      unmatchedSlash = true\n      end = index + 1\n    }\n\n    if (code === 46 /* `.` */) {\n      // If this is our first dot, mark it as the start of our extension.\n      if (startDot < 0) {\n        startDot = index\n      } else if (preDotState !== 1) {\n        preDotState = 1\n      }\n    } else if (startDot > -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension.\n      preDotState = -1\n    }\n  }\n\n  if (\n    startDot < 0 ||\n    end < 0 ||\n    // We saw a non-dot character immediately before the dot.\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly `..`.\n    (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\n  ) {\n    return ''\n  }\n\n  return path.slice(startDot, end)\n}\n\n/**\n * Join segments from a path.\n *\n * @param {Array<string>} segments\n *   Path segments.\n * @returns {string}\n *   File path.\n */\nfunction join(...segments) {\n  let index = -1\n  /** @type {string | undefined} */\n  let joined\n\n  while (++index < segments.length) {\n    assertPath(segments[index])\n\n    if (segments[index]) {\n      joined =\n        joined === undefined ? segments[index] : joined + '/' + segments[index]\n    }\n  }\n\n  return joined === undefined ? '.' : normalize(joined)\n}\n\n/**\n * Normalize a basic file path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\n// Note: `normalize` is not exposed as `path.normalize`, so some code is\n// manually removed from it.\nfunction normalize(path) {\n  assertPath(path)\n\n  const absolute = path.codePointAt(0) === 47 /* `/` */\n\n  // Normalize the path according to POSIX rules.\n  let value = normalizeString(path, !absolute)\n\n  if (value.length === 0 && !absolute) {\n    value = '.'\n  }\n\n  if (value.length > 0 && path.codePointAt(path.length - 1) === 47 /* / */) {\n    value += '/'\n  }\n\n  return absolute ? '/' + value : value\n}\n\n/**\n * Resolve `.` and `..` elements in a path with directory names.\n *\n * @param {string} path\n *   File path.\n * @param {boolean} allowAboveRoot\n *   Whether `..` can move above root.\n * @returns {string}\n *   File path.\n */\nfunction normalizeString(path, allowAboveRoot) {\n  let result = ''\n  let lastSegmentLength = 0\n  let lastSlash = -1\n  let dots = 0\n  let index = -1\n  /** @type {number | undefined} */\n  let code\n  /** @type {number} */\n  let lastSlashIndex\n\n  while (++index <= path.length) {\n    if (index < path.length) {\n      code = path.codePointAt(index)\n    } else if (code === 47 /* `/` */) {\n      break\n    } else {\n      code = 47 /* `/` */\n    }\n\n    if (code === 47 /* `/` */) {\n      if (lastSlash === index - 1 || dots === 1) {\n        // Empty.\n      } else if (lastSlash !== index - 1 && dots === 2) {\n        if (\n          result.length < 2 ||\n          lastSegmentLength !== 2 ||\n          result.codePointAt(result.length - 1) !== 46 /* `.` */ ||\n          result.codePointAt(result.length - 2) !== 46 /* `.` */\n        ) {\n          if (result.length > 2) {\n            lastSlashIndex = result.lastIndexOf('/')\n\n            if (lastSlashIndex !== result.length - 1) {\n              if (lastSlashIndex < 0) {\n                result = ''\n                lastSegmentLength = 0\n              } else {\n                result = result.slice(0, lastSlashIndex)\n                lastSegmentLength = result.length - 1 - result.lastIndexOf('/')\n              }\n\n              lastSlash = index\n              dots = 0\n              continue\n            }\n          } else if (result.length > 0) {\n            result = ''\n            lastSegmentLength = 0\n            lastSlash = index\n            dots = 0\n            continue\n          }\n        }\n\n        if (allowAboveRoot) {\n          result = result.length > 0 ? result + '/..' : '..'\n          lastSegmentLength = 2\n        }\n      } else {\n        if (result.length > 0) {\n          result += '/' + path.slice(lastSlash + 1, index)\n        } else {\n          result = path.slice(lastSlash + 1, index)\n        }\n\n        lastSegmentLength = index - lastSlash - 1\n      }\n\n      lastSlash = index\n      dots = 0\n    } else if (code === 46 /* `.` */ && dots > -1) {\n      dots++\n    } else {\n      dots = -1\n    }\n  }\n\n  return result\n}\n\n/**\n * Make sure `path` is a string.\n *\n * @param {string} path\n *   File path.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError(\n      'Path must be a string. Received ' + JSON.stringify(path)\n    )\n  }\n}\n\n/* eslint-enable max-depth, complexity */\n","// Somewhat based on:\n// <https://github.com/defunctzombie/node-process/blob/master/browser.js>.\n// But I don’t think one tiny line of code can be copyrighted. 😅\nexport const proc = {cwd}\n\nfunction cwd() {\n  return '/'\n}\n","/**\n * Checks if a value has the shape of a WHATWG URL object.\n *\n * Using a symbol or instanceof would not be able to recognize URL objects\n * coming from other implementations (e.g. in Electron), so instead we are\n * checking some well known properties for a lack of a better test.\n *\n * We use `href` and `protocol` as they are the only properties that are\n * easy to retrieve and calculate due to the lazy nature of the getters.\n *\n * We check for auth attribute to distinguish legacy url instance with\n * WHATWG URL instance.\n *\n * @param {unknown} fileUrlOrPath\n *   File path or URL.\n * @returns {fileUrlOrPath is URL}\n *   Whether it’s a URL.\n */\n// From: <https://github.com/nodejs/node/blob/6a3403c/lib/internal/url.js#L720>\nexport function isUrl(fileUrlOrPath) {\n  return Boolean(\n    fileUrlOrPath !== null &&\n      typeof fileUrlOrPath === 'object' &&\n      'href' in fileUrlOrPath &&\n      fileUrlOrPath.href &&\n      'protocol' in fileUrlOrPath &&\n      fileUrlOrPath.protocol &&\n      // @ts-expect-error: indexing is fine.\n      fileUrlOrPath.auth === undefined\n  )\n}\n","import {isUrl} from './minurl.shared.js'\n\nexport {isUrl} from './minurl.shared.js'\n\n// See: <https://github.com/nodejs/node/blob/6a3403c/lib/internal/url.js>\n\n/**\n * @param {URL | string} path\n *   File URL.\n * @returns {string}\n *   File URL.\n */\nexport function urlToPath(path) {\n  if (typeof path === 'string') {\n    path = new URL(path)\n  } else if (!isUrl(path)) {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'The \"path\" argument must be of type string or an instance of URL. Received `' +\n        path +\n        '`'\n    )\n    error.code = 'ERR_INVALID_ARG_TYPE'\n    throw error\n  }\n\n  if (path.protocol !== 'file:') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError('The URL must be of scheme file')\n    error.code = 'ERR_INVALID_URL_SCHEME'\n    throw error\n  }\n\n  return getPathFromURLPosix(path)\n}\n\n/**\n * Get a path from a POSIX URL.\n *\n * @param {URL} url\n *   URL.\n * @returns {string}\n *   File path.\n */\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'File URL host must be \"localhost\" or empty on darwin'\n    )\n    error.code = 'ERR_INVALID_FILE_URL_HOST'\n    throw error\n  }\n\n  const pathname = url.pathname\n  let index = -1\n\n  while (++index < pathname.length) {\n    if (\n      pathname.codePointAt(index) === 37 /* `%` */ &&\n      pathname.codePointAt(index + 1) === 50 /* `2` */\n    ) {\n      const third = pathname.codePointAt(index + 2)\n      if (third === 70 /* `F` */ || third === 102 /* `f` */) {\n        /** @type {NodeJS.ErrnoException} */\n        const error = new TypeError(\n          'File URL path must not include encoded / characters'\n        )\n        error.code = 'ERR_INVALID_FILE_URL_PATH'\n        throw error\n      }\n    }\n  }\n\n  return decodeURIComponent(pathname)\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n * @typedef {import('vfile-message').Options} MessageOptions\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Value} Value\n */\n\n/**\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n *\n * @typedef {Options | URL | VFile | Value} Compatible\n *   Things that can be passed to the constructor.\n *\n * @typedef VFileCoreOptions\n *   Set multiple values.\n * @property {string | null | undefined} [basename]\n *   Set `basename` (name).\n * @property {string | null | undefined} [cwd]\n *   Set `cwd` (working directory).\n * @property {Data | null | undefined} [data]\n *   Set `data` (associated info).\n * @property {string | null | undefined} [dirname]\n *   Set `dirname` (path w/o basename).\n * @property {string | null | undefined} [extname]\n *   Set `extname` (extension with dot).\n * @property {Array<string> | null | undefined} [history]\n *   Set `history` (paths the file moved between).\n * @property {URL | string | null | undefined} [path]\n *   Set `path` (current path).\n * @property {string | null | undefined} [stem]\n *   Set `stem` (name without extension).\n * @property {Value | null | undefined} [value]\n *   Set `value` (the contents of the file).\n *\n * @typedef Map\n *   Raw source map.\n *\n *   See:\n *   <https://github.com/mozilla/source-map/blob/60adcb0/source-map.d.ts#L15-L23>.\n * @property {number} version\n *   Which version of the source map spec this map is following.\n * @property {Array<string>} sources\n *   An array of URLs to the original source files.\n * @property {Array<string>} names\n *   An array of identifiers which can be referenced by individual mappings.\n * @property {string | undefined} [sourceRoot]\n *   The URL root from which all sources are relative.\n * @property {Array<string> | undefined} [sourcesContent]\n *   An array of contents of the original source files.\n * @property {string} mappings\n *   A string of base64 VLQs which contain the actual mappings.\n * @property {string} file\n *   The generated file this source map is associated with.\n *\n * @typedef {Record<string, unknown> & VFileCoreOptions} Options\n *   Configuration.\n *\n *   A bunch of keys that will be shallow copied over to the new file.\n *\n * @typedef {Record<string, unknown>} ReporterSettings\n *   Configuration for reporters.\n */\n\n/**\n * @template [Settings=ReporterSettings]\n *   Options type.\n * @callback Reporter\n *   Type for a reporter.\n * @param {Array<VFile>} files\n *   Files to report.\n * @param {Settings} options\n *   Configuration.\n * @returns {string}\n *   Report.\n */\n\nimport {VFileMessage} from 'vfile-message'\nimport {path} from 'vfile/do-not-use-conditional-minpath'\nimport {proc} from 'vfile/do-not-use-conditional-minproc'\nimport {urlToPath, isUrl} from 'vfile/do-not-use-conditional-minurl'\n\n/**\n * Order of setting (least specific to most), we need this because otherwise\n * `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n * stem can be set.\n */\nconst order = /** @type {const} */ ([\n  'history',\n  'path',\n  'basename',\n  'stem',\n  'extname',\n  'dirname'\n])\n\nexport class VFile {\n  /**\n   * Create a new virtual file.\n   *\n   * `options` is treated as:\n   *\n   * *   `string` or `Uint8Array` — `{value: options}`\n   * *   `URL` — `{path: options}`\n   * *   `VFile` — shallow copies its data over to the new file\n   * *   `object` — all fields are shallow copied over to the new file\n   *\n   * Path related fields are set in the following order (least specific to\n   * most specific): `history`, `path`, `basename`, `stem`, `extname`,\n   * `dirname`.\n   *\n   * You cannot set `dirname` or `extname` without setting either `history`,\n   * `path`, `basename`, or `stem` too.\n   *\n   * @param {Compatible | null | undefined} [value]\n   *   File value.\n   * @returns\n   *   New instance.\n   */\n  constructor(value) {\n    /** @type {Options | VFile} */\n    let options\n\n    if (!value) {\n      options = {}\n    } else if (isUrl(value)) {\n      options = {path: value}\n    } else if (typeof value === 'string' || isUint8Array(value)) {\n      options = {value}\n    } else {\n      options = value\n    }\n\n    /* eslint-disable no-unused-expressions */\n\n    /**\n     * Base of `path` (default: `process.cwd()` or `'/'` in browsers).\n     *\n     * @type {string}\n     */\n    this.cwd = proc.cwd()\n\n    /**\n     * Place to store custom info (default: `{}`).\n     *\n     * It’s OK to store custom data directly on the file but moving it to\n     * `data` is recommended.\n     *\n     * @type {Data}\n     */\n    this.data = {}\n\n    /**\n     * List of file paths the file moved between.\n     *\n     * The first is the original path and the last is the current path.\n     *\n     * @type {Array<string>}\n     */\n    this.history = []\n\n    /**\n     * List of messages associated with the file.\n     *\n     * @type {Array<VFileMessage>}\n     */\n    this.messages = []\n\n    /**\n     * Raw value.\n     *\n     * @type {Value}\n     */\n    this.value\n\n    // The below are non-standard, they are “well-known”.\n    // As in, used in several tools.\n    /**\n     * Source map.\n     *\n     * This type is equivalent to the `RawSourceMap` type from the `source-map`\n     * module.\n     *\n     * @type {Map | null | undefined}\n     */\n    this.map\n\n    /**\n     * Custom, non-string, compiled, representation.\n     *\n     * This is used by unified to store non-string results.\n     * One example is when turning markdown into React nodes.\n     *\n     * @type {unknown}\n     */\n    this.result\n\n    /**\n     * Whether a file was saved to disk.\n     *\n     * This is used by vfile reporters.\n     *\n     * @type {boolean}\n     */\n    this.stored\n    /* eslint-enable no-unused-expressions */\n\n    // Set path related properties in the correct order.\n    let index = -1\n\n    while (++index < order.length) {\n      const prop = order[index]\n\n      // Note: we specifically use `in` instead of `hasOwnProperty` to accept\n      // `vfile`s too.\n      if (\n        prop in options &&\n        options[prop] !== undefined &&\n        options[prop] !== null\n      ) {\n        // @ts-expect-error: TS doesn’t understand basic reality.\n        this[prop] = prop === 'history' ? [...options[prop]] : options[prop]\n      }\n    }\n\n    /** @type {string} */\n    let prop\n\n    // Set non-path related properties.\n    for (prop in options) {\n      // @ts-expect-error: fine to set other things.\n      if (!order.includes(prop)) {\n        // @ts-expect-error: fine to set other things.\n        this[prop] = options[prop]\n      }\n    }\n  }\n\n  /**\n   * Get the basename (including extname) (example: `'index.min.js'`).\n   *\n   * @returns {string | undefined}\n   *   Basename.\n   */\n  get basename() {\n    return typeof this.path === 'string' ? path.basename(this.path) : undefined\n  }\n\n  /**\n   * Set basename (including extname) (`'index.min.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   *\n   * @param {string} basename\n   *   Basename.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set basename(basename) {\n    assertNonEmpty(basename, 'basename')\n    assertPart(basename, 'basename')\n    this.path = path.join(this.dirname || '', basename)\n  }\n\n  /**\n   * Get the parent path (example: `'~'`).\n   *\n   * @returns {string | undefined}\n   *   Dirname.\n   */\n  get dirname() {\n    return typeof this.path === 'string' ? path.dirname(this.path) : undefined\n  }\n\n  /**\n   * Set the parent path (example: `'~'`).\n   *\n   * Cannot be set if there’s no `path` yet.\n   *\n   * @param {string | undefined} dirname\n   *   Dirname.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set dirname(dirname) {\n    assertPath(this.basename, 'dirname')\n    this.path = path.join(dirname || '', this.basename)\n  }\n\n  /**\n   * Get the extname (including dot) (example: `'.js'`).\n   *\n   * @returns {string | undefined}\n   *   Extname.\n   */\n  get extname() {\n    return typeof this.path === 'string' ? path.extname(this.path) : undefined\n  }\n\n  /**\n   * Set the extname (including dot) (example: `'.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be set if there’s no `path` yet.\n   *\n   * @param {string | undefined} extname\n   *   Extname.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set extname(extname) {\n    assertPart(extname, 'extname')\n    assertPath(this.dirname, 'extname')\n\n    if (extname) {\n      if (extname.codePointAt(0) !== 46 /* `.` */) {\n        throw new Error('`extname` must start with `.`')\n      }\n\n      if (extname.includes('.', 1)) {\n        throw new Error('`extname` cannot contain multiple dots')\n      }\n    }\n\n    this.path = path.join(this.dirname, this.stem + (extname || ''))\n  }\n\n  /**\n   * Get the full path (example: `'~/index.min.js'`).\n   *\n   * @returns {string}\n   *   Path.\n   */\n  get path() {\n    return this.history[this.history.length - 1]\n  }\n\n  /**\n   * Set the full path (example: `'~/index.min.js'`).\n   *\n   * Cannot be nullified.\n   * You can set a file URL (a `URL` object with a `file:` protocol) which will\n   * be turned into a path with `url.fileURLToPath`.\n   *\n   * @param {URL | string} path\n   *   Path.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set path(path) {\n    if (isUrl(path)) {\n      path = urlToPath(path)\n    }\n\n    assertNonEmpty(path, 'path')\n\n    if (this.path !== path) {\n      this.history.push(path)\n    }\n  }\n\n  /**\n   * Get the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * @returns {string | undefined}\n   *   Stem.\n   */\n  get stem() {\n    return typeof this.path === 'string'\n      ? path.basename(this.path, this.extname)\n      : undefined\n  }\n\n  /**\n   * Set the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   *\n   * @param {string} stem\n   *   Stem.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set stem(stem) {\n    assertNonEmpty(stem, 'stem')\n    assertPart(stem, 'stem')\n    this.path = path.join(this.dirname || '', stem + (this.extname || ''))\n  }\n\n  // Normal prototypal methods.\n  /**\n   * Create a fatal message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `true` (error; file not usable)\n   * and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {never}\n   *   Never.\n   * @throws {VFileMessage}\n   *   Message.\n   */\n  fail(causeOrReason, optionsOrParentOrPlace, origin) {\n    // @ts-expect-error: the overloads are fine.\n    const message = this.message(causeOrReason, optionsOrParentOrPlace, origin)\n\n    message.fatal = true\n\n    throw message\n  }\n\n  /**\n   * Create an info message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `undefined` (info; change\n   * likely not needed) and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  info(causeOrReason, optionsOrParentOrPlace, origin) {\n    // @ts-expect-error: the overloads are fine.\n    const message = this.message(causeOrReason, optionsOrParentOrPlace, origin)\n\n    message.fatal = undefined\n\n    return message\n  }\n\n  /**\n   * Create a message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `false` (warning; change may be\n   * needed) and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  message(causeOrReason, optionsOrParentOrPlace, origin) {\n    const message = new VFileMessage(\n      // @ts-expect-error: the overloads are fine.\n      causeOrReason,\n      optionsOrParentOrPlace,\n      origin\n    )\n\n    if (this.path) {\n      message.name = this.path + ':' + message.name\n      message.file = this.path\n    }\n\n    message.fatal = false\n\n    this.messages.push(message)\n\n    return message\n  }\n\n  /**\n   * Serialize the file.\n   *\n   * > **Note**: which encodings are supported depends on the engine.\n   * > For info on Node.js, see:\n   * > <https://nodejs.org/api/util.html#whatwg-supported-encodings>.\n   *\n   * @param {string | null | undefined} [encoding='utf8']\n   *   Character encoding to understand `value` as when it’s a `Uint8Array`\n   *   (default: `'utf-8'`).\n   * @returns {string}\n   *   Serialized file.\n   */\n  toString(encoding) {\n    if (this.value === undefined) {\n      return ''\n    }\n\n    if (typeof this.value === 'string') {\n      return this.value\n    }\n\n    const decoder = new TextDecoder(encoding || undefined)\n    return decoder.decode(this.value)\n  }\n}\n\n/**\n * Assert that `part` is not a path (as in, does not contain `path.sep`).\n *\n * @param {string | null | undefined} part\n *   File path part.\n * @param {string} name\n *   Part name.\n * @returns {undefined}\n *   Nothing.\n */\nfunction assertPart(part, name) {\n  if (part && part.includes(path.sep)) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + path.sep + '`'\n    )\n  }\n}\n\n/**\n * Assert that `part` is not empty.\n *\n * @param {string | undefined} part\n *   Thing.\n * @param {string} name\n *   Part name.\n * @returns {asserts part is string}\n *   Nothing.\n */\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n/**\n * Assert `path` exists.\n *\n * @param {string | undefined} path\n *   Path.\n * @param {string} name\n *   Dependency name.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n\n/**\n * Assert `value` is an `Uint8Array`.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Uint8Array}\n *   Whether `value` is an `Uint8Array`.\n */\nfunction isUint8Array(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'byteLength' in value &&\n      'byteOffset' in value\n  )\n}\n","export const CallableInstance =\n  /**\n   * @type {new <Parameters extends Array<unknown>, Result>(property: string | symbol) => (...parameters: Parameters) => Result}\n   */\n  (\n    /** @type {unknown} */\n    (\n      /**\n       * @this {Function}\n       * @param {string | symbol} property\n       * @returns {(...parameters: Array<unknown>) => unknown}\n       */\n      function (property) {\n        const self = this\n        const constr = self.constructor\n        const proto = /** @type {Record<string | symbol, Function>} */ (\n          // Prototypes do exist.\n          // type-coverage:ignore-next-line\n          constr.prototype\n        )\n        const func = proto[property]\n        /** @type {(...parameters: Array<unknown>) => unknown} */\n        const apply = function () {\n          return func.apply(apply, arguments)\n        }\n\n        Object.setPrototypeOf(apply, proto)\n\n        const names = Object.getOwnPropertyNames(func)\n\n        for (const p of names) {\n          const descriptor = Object.getOwnPropertyDescriptor(func, p)\n          if (descriptor) Object.defineProperty(apply, p, descriptor)\n        }\n\n        return apply\n      }\n    )\n  )\n","/**\n * @typedef {import('trough').Pipeline} Pipeline\n *\n * @typedef {import('unist').Node} Node\n *\n * @typedef {import('vfile').Compatible} Compatible\n * @typedef {import('vfile').Value} Value\n *\n * @typedef {import('../index.js').CompileResultMap} CompileResultMap\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Settings} Settings\n */\n\n/**\n * @typedef {CompileResultMap[keyof CompileResultMap]} CompileResults\n *   Acceptable results from compilers.\n *\n *   To register custom results, add them to\n *   {@link CompileResultMap `CompileResultMap`}.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The node that the compiler receives (default: `Node`).\n * @template {CompileResults} [Result=CompileResults]\n *   The thing that the compiler yields (default: `CompileResults`).\n * @callback Compiler\n *   A **compiler** handles the compiling of a syntax tree to something else\n *   (in most cases, text) (TypeScript type).\n *\n *   It is used in the stringify phase and called with a {@link Node `Node`}\n *   and {@link VFile `VFile`} representation of the document to compile.\n *   It should return the textual representation of the given tree (typically\n *   `string`).\n *\n *   > 👉 **Note**: unified typically compiles by serializing: most compilers\n *   > return `string` (or `Uint8Array`).\n *   > Some compilers, such as the one configured with\n *   > [`rehype-react`][rehype-react], return other values (in this case, a\n *   > React tree).\n *   > If you’re using a compiler that doesn’t serialize, expect different\n *   > result values.\n *   >\n *   > To register custom results in TypeScript, add them to\n *   > {@link CompileResultMap `CompileResultMap`}.\n *\n *   [rehype-react]: https://github.com/rehypejs/rehype-react\n * @param {Tree} tree\n *   Tree to compile.\n * @param {VFile} file\n *   File associated with `tree`.\n * @returns {Result}\n *   New content: compiled text (`string` or `Uint8Array`, for `file.value`) or\n *   something else (for `file.result`).\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The node that the parser yields (default: `Node`)\n * @callback Parser\n *   A **parser** handles the parsing of text to a syntax tree.\n *\n *   It is used in the parse phase and is called with a `string` and\n *   {@link VFile `VFile`} of the document to parse.\n *   It must return the syntax tree representation of the given file\n *   ({@link Node `Node`}).\n * @param {string} document\n *   Document to parse.\n * @param {VFile} file\n *   File associated with `document`.\n * @returns {Tree}\n *   Node representing the given file.\n */\n\n/**\n * @typedef {(\n *   Plugin<Array<any>, any, any> |\n *   PluginTuple<Array<any>, any, any> |\n *   Preset\n * )} Pluggable\n *   Union of the different ways to add plugins and settings.\n */\n\n/**\n * @typedef {Array<Pluggable>} PluggableList\n *   List of plugins and presets.\n */\n\n// Note: we can’t use `callback` yet as it messes up `this`:\n//  <https://github.com/microsoft/TypeScript/issues/55197>.\n/**\n * @template {Array<unknown>} [PluginParameters=[]]\n *   Arguments passed to the plugin (default: `[]`, the empty tuple).\n * @template {Node | string | undefined} [Input=Node]\n *   Value that is expected as input (default: `Node`).\n *\n *   *   If the plugin returns a {@link Transformer `Transformer`}, this\n *       should be the node it expects.\n *   *   If the plugin sets a {@link Parser `Parser`}, this should be\n *       `string`.\n *   *   If the plugin sets a {@link Compiler `Compiler`}, this should be the\n *       node it expects.\n * @template [Output=Input]\n *   Value that is yielded as output (default: `Input`).\n *\n *   *   If the plugin returns a {@link Transformer `Transformer`}, this\n *       should be the node that that yields.\n *   *   If the plugin sets a {@link Parser `Parser`}, this should be the\n *       node that it yields.\n *   *   If the plugin sets a {@link Compiler `Compiler`}, this should be\n *       result it yields.\n * @typedef {(\n *   (this: Processor, ...parameters: PluginParameters) =>\n *     Input extends string ? // Parser.\n *        Output extends Node | undefined ? undefined | void : never :\n *     Output extends CompileResults ? // Compiler.\n *        Input extends Node | undefined ? undefined | void : never :\n *     Transformer<\n *       Input extends Node ? Input : Node,\n *       Output extends Node ? Output : Node\n *     > | undefined | void\n * )} Plugin\n *   Single plugin.\n *\n *   Plugins configure the processors they are applied on in the following\n *   ways:\n *\n *   *   they change the processor, such as the parser, the compiler, or by\n *       configuring data\n *   *   they specify how to handle trees and files\n *\n *   In practice, they are functions that can receive options and configure the\n *   processor (`this`).\n *\n *   > 👉 **Note**: plugins are called when the processor is *frozen*, not when\n *   > they are applied.\n */\n\n/**\n * Tuple of a plugin and its configuration.\n *\n * The first item is a plugin, the rest are its parameters.\n *\n * @template {Array<unknown>} [TupleParameters=[]]\n *   Arguments passed to the plugin (default: `[]`, the empty tuple).\n * @template {Node | string | undefined} [Input=undefined]\n *   Value that is expected as input (optional).\n *\n *   *   If the plugin returns a {@link Transformer `Transformer`}, this\n *       should be the node it expects.\n *   *   If the plugin sets a {@link Parser `Parser`}, this should be\n *       `string`.\n *   *   If the plugin sets a {@link Compiler `Compiler`}, this should be the\n *       node it expects.\n * @template [Output=undefined] (optional).\n *   Value that is yielded as output.\n *\n *   *   If the plugin returns a {@link Transformer `Transformer`}, this\n *       should be the node that that yields.\n *   *   If the plugin sets a {@link Parser `Parser`}, this should be the\n *       node that it yields.\n *   *   If the plugin sets a {@link Compiler `Compiler`}, this should be\n *       result it yields.\n * @typedef {(\n *   [\n *     plugin: Plugin<TupleParameters, Input, Output>,\n *     ...parameters: TupleParameters\n *   ]\n * )} PluginTuple\n */\n\n/**\n * @typedef Preset\n *   Sharable configuration.\n *\n *   They can contain plugins and settings.\n * @property {PluggableList | undefined} [plugins]\n *   List of plugins and presets (optional).\n * @property {Settings | undefined} [settings]\n *   Shared settings for parsers and compilers (optional).\n */\n\n/**\n * @template {VFile} [File=VFile]\n *   The file that the callback receives (default: `VFile`).\n * @callback ProcessCallback\n *   Callback called when the process is done.\n *\n *   Called with either an error or a result.\n * @param {Error | undefined} [error]\n *   Fatal error (optional).\n * @param {File | undefined} [file]\n *   Processed file (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The tree that the callback receives (default: `Node`).\n * @callback RunCallback\n *   Callback called when transformers are done.\n *\n *   Called with either an error or results.\n * @param {Error | undefined} [error]\n *   Fatal error (optional).\n * @param {Tree | undefined} [tree]\n *   Transformed tree (optional).\n * @param {VFile | undefined} [file]\n *   File (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Output=Node]\n *   Node type that the transformer yields (default: `Node`).\n * @callback TransformCallback\n *   Callback passed to transforms.\n *\n *   If the signature of a `transformer` accepts a third argument, the\n *   transformer may perform asynchronous operations, and must call it.\n * @param {Error | undefined} [error]\n *   Fatal error to stop the process (optional).\n * @param {Output | undefined} [tree]\n *   New, changed, tree (optional).\n * @param {VFile | undefined} [file]\n *   New, changed, file (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Input=Node]\n *   Node type that the transformer expects (default: `Node`).\n * @template {Node} [Output=Input]\n *   Node type that the transformer yields (default: `Input`).\n * @callback Transformer\n *   Transformers handle syntax trees and files.\n *\n *   They are functions that are called each time a syntax tree and file are\n *   passed through the run phase.\n *   When an error occurs in them (either because it’s thrown, returned,\n *   rejected, or passed to `next`), the process stops.\n *\n *   The run phase is handled by [`trough`][trough], see its documentation for\n *   the exact semantics of these functions.\n *\n *   > 👉 **Note**: you should likely ignore `next`: don’t accept it.\n *   > it supports callback-style async work.\n *   > But promises are likely easier to reason about.\n *\n *   [trough]: https://github.com/wooorm/trough#function-fninput-next\n * @param {Input} tree\n *   Tree to handle.\n * @param {VFile} file\n *   File to handle.\n * @param {TransformCallback<Output>} next\n *   Callback.\n * @returns {(\n *   Promise<Output | undefined | void> |\n *   Promise<never> | // For some reason this is needed separately.\n *   Output |\n *   Error |\n *   undefined |\n *   void\n * )}\n *   If you accept `next`, nothing.\n *   Otherwise:\n *\n *   *   `Error` — fatal error to stop the process\n *   *   `Promise<undefined>` or `undefined` — the next transformer keeps using\n *       same tree\n *   *   `Promise<Node>` or `Node` — new, changed, tree\n */\n\n/**\n * @template {Node | undefined} ParseTree\n *   Output of `parse`.\n * @template {Node | undefined} HeadTree\n *   Input for `run`.\n * @template {Node | undefined} TailTree\n *   Output for `run`.\n * @template {Node | undefined} CompileTree\n *   Input of `stringify`.\n * @template {CompileResults | undefined} CompileResult\n *   Output of `stringify`.\n * @template {Node | string | undefined} Input\n *   Input of plugin.\n * @template Output\n *   Output of plugin (optional).\n * @typedef {(\n *   Input extends string\n *     ? Output extends Node | undefined\n *       ? // Parser.\n *         Processor<\n *           Output extends undefined ? ParseTree : Output,\n *           HeadTree,\n *           TailTree,\n *           CompileTree,\n *           CompileResult\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : Output extends CompileResults\n *     ? Input extends Node | undefined\n *       ? // Compiler.\n *         Processor<\n *           ParseTree,\n *           HeadTree,\n *           TailTree,\n *           Input extends undefined ? CompileTree : Input,\n *           Output extends undefined ? CompileResult : Output\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : Input extends Node | undefined\n *     ? Output extends Node | undefined\n *       ? // Transform.\n *         Processor<\n *           ParseTree,\n *           HeadTree extends undefined ? Input : HeadTree,\n *           Output extends undefined ? TailTree : Output,\n *           CompileTree,\n *           CompileResult\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : // Unknown.\n *       Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n * )} UsePlugin\n *   Create a processor based on the input/output of a {@link Plugin plugin}.\n */\n\n/**\n * @template {CompileResults | undefined} Result\n *   Node type that the transformer yields.\n * @typedef {(\n *   Result extends Value | undefined ?\n *     VFile :\n *     VFile & {result: Result}\n *   )} VFileWithOutput\n *   Type to generate a {@link VFile `VFile`} corresponding to a compiler result.\n *\n *   If a result that is not acceptable on a `VFile` is used, that will\n *   be stored on the `result` field of {@link VFile `VFile`}.\n */\n\nimport {bail} from 'bail'\nimport extend from 'extend'\nimport {ok as assert} from 'devlop'\nimport isPlainObj from 'is-plain-obj'\nimport {trough} from 'trough'\nimport {VFile} from 'vfile'\nimport {CallableInstance} from './callable-instance.js'\n\n// To do: next major: drop `Compiler`, `Parser`: prefer lowercase.\n\n// To do: we could start yielding `never` in TS when a parser is missing and\n// `parse` is called.\n// Currently, we allow directly setting `processor.parser`, which is untyped.\n\nconst own = {}.hasOwnProperty\n\n/**\n * @template {Node | undefined} [ParseTree=undefined]\n *   Output of `parse` (optional).\n * @template {Node | undefined} [HeadTree=undefined]\n *   Input for `run` (optional).\n * @template {Node | undefined} [TailTree=undefined]\n *   Output for `run` (optional).\n * @template {Node | undefined} [CompileTree=undefined]\n *   Input of `stringify` (optional).\n * @template {CompileResults | undefined} [CompileResult=undefined]\n *   Output of `stringify` (optional).\n * @extends {CallableInstance<[], Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>>}\n */\nexport class Processor extends CallableInstance {\n  /**\n   * Create a processor.\n   */\n  constructor() {\n    // If `Processor()` is called (w/o new), `copy` is called instead.\n    super('copy')\n\n    /**\n     * Compiler to use (deprecated).\n     *\n     * @deprecated\n     *   Use `compiler` instead.\n     * @type {(\n     *   Compiler<\n     *     CompileTree extends undefined ? Node : CompileTree,\n     *     CompileResult extends undefined ? CompileResults : CompileResult\n     *   > |\n     *   undefined\n     * )}\n     */\n    this.Compiler = undefined\n\n    /**\n     * Parser to use (deprecated).\n     *\n     * @deprecated\n     *   Use `parser` instead.\n     * @type {(\n     *   Parser<ParseTree extends undefined ? Node : ParseTree> |\n     *   undefined\n     * )}\n     */\n    this.Parser = undefined\n\n    // Note: the following fields are considered private.\n    // However, they are needed for tests, and TSC generates an untyped\n    // `private freezeIndex` field for, which trips `type-coverage` up.\n    // Instead, we use `@deprecated` to visualize that they shouldn’t be used.\n    /**\n     * Internal list of configured plugins.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Array<PluginTuple<Array<unknown>>>}\n     */\n    this.attachers = []\n\n    /**\n     * Compiler to use.\n     *\n     * @type {(\n     *   Compiler<\n     *     CompileTree extends undefined ? Node : CompileTree,\n     *     CompileResult extends undefined ? CompileResults : CompileResult\n     *   > |\n     *   undefined\n     * )}\n     */\n    this.compiler = undefined\n\n    /**\n     * Internal state to track where we are while freezing.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {number}\n     */\n    this.freezeIndex = -1\n\n    /**\n     * Internal state to track whether we’re frozen.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {boolean | undefined}\n     */\n    this.frozen = undefined\n\n    /**\n     * Internal state.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Data}\n     */\n    this.namespace = {}\n\n    /**\n     * Parser to use.\n     *\n     * @type {(\n     *   Parser<ParseTree extends undefined ? Node : ParseTree> |\n     *   undefined\n     * )}\n     */\n    this.parser = undefined\n\n    /**\n     * Internal list of configured transformers.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Pipeline}\n     */\n    this.transformers = trough()\n  }\n\n  /**\n   * Copy a processor.\n   *\n   * @deprecated\n   *   This is a private internal method and should not be used.\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   New *unfrozen* processor ({@link Processor `Processor`}) that is\n   *   configured to work the same as its ancestor.\n   *   When the descendant processor is configured in the future it does not\n   *   affect the ancestral processor.\n   */\n  copy() {\n    // Cast as the type parameters will be the same after attaching.\n    const destination =\n      /** @type {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>} */ (\n        new Processor()\n      )\n    let index = -1\n\n    while (++index < this.attachers.length) {\n      const attacher = this.attachers[index]\n      destination.use(...attacher)\n    }\n\n    destination.data(extend(true, {}, this.namespace))\n\n    return destination\n  }\n\n  /**\n   * Configure the processor with info available to all plugins.\n   * Information is stored in an object.\n   *\n   * Typically, options can be given to a specific plugin, but sometimes it\n   * makes sense to have information shared with several plugins.\n   * For example, a list of HTML elements that are self-closing, which is\n   * needed during all phases.\n   *\n   * > 👉 **Note**: setting information cannot occur on *frozen* processors.\n   * > Call the processor first to create a new unfrozen processor.\n   *\n   * > 👉 **Note**: to register custom data in TypeScript, augment the\n   * > {@link Data `Data`} interface.\n   *\n   * @example\n   *   This example show how to get and set info:\n   *\n   *   ```js\n   *   import {unified} from 'unified'\n   *\n   *   const processor = unified().data('alpha', 'bravo')\n   *\n   *   processor.data('alpha') // => 'bravo'\n   *\n   *   processor.data() // => {alpha: 'bravo'}\n   *\n   *   processor.data({charlie: 'delta'})\n   *\n   *   processor.data() // => {charlie: 'delta'}\n   *   ```\n   *\n   * @template {keyof Data} Key\n   *\n   * @overload\n   * @returns {Data}\n   *\n   * @overload\n   * @param {Data} dataset\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {Key} key\n   * @returns {Data[Key]}\n   *\n   * @overload\n   * @param {Key} key\n   * @param {Data[Key]} value\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @param {Data | Key} [key]\n   *   Key to get or set, or entire dataset to set, or nothing to get the\n   *   entire dataset (optional).\n   * @param {Data[Key]} [value]\n   *   Value to set (optional).\n   * @returns {unknown}\n   *   The current processor when setting, the value at `key` when getting, or\n   *   the entire dataset when getting without key.\n   */\n  data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', this.frozen)\n        this.namespace[key] = value\n        return this\n      }\n\n      // Get `key`.\n      return (own.call(this.namespace, key) && this.namespace[key]) || undefined\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', this.frozen)\n      this.namespace = key\n      return this\n    }\n\n    // Get space.\n    return this.namespace\n  }\n\n  /**\n   * Freeze a processor.\n   *\n   * Frozen processors are meant to be extended and not to be configured\n   * directly.\n   *\n   * When a processor is frozen it cannot be unfrozen.\n   * New processors working the same way can be created by calling the\n   * processor.\n   *\n   * It’s possible to freeze processors explicitly by calling `.freeze()`.\n   * Processors freeze automatically when `.parse()`, `.run()`, `.runSync()`,\n   * `.stringify()`, `.process()`, or `.processSync()` are called.\n   *\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   The current processor.\n   */\n  freeze() {\n    if (this.frozen) {\n      return this\n    }\n\n    // Cast so that we can type plugins easier.\n    // Plugins are supposed to be usable on different processors, not just on\n    // this exact processor.\n    const self = /** @type {Processor} */ (/** @type {unknown} */ (this))\n\n    while (++this.freezeIndex < this.attachers.length) {\n      const [attacher, ...options] = this.attachers[this.freezeIndex]\n\n      if (options[0] === false) {\n        continue\n      }\n\n      if (options[0] === true) {\n        options[0] = undefined\n      }\n\n      const transformer = attacher.call(self, ...options)\n\n      if (typeof transformer === 'function') {\n        this.transformers.use(transformer)\n      }\n    }\n\n    this.frozen = true\n    this.freezeIndex = Number.POSITIVE_INFINITY\n\n    return this\n  }\n\n  /**\n   * Parse text to a syntax tree.\n   *\n   * > 👉 **Note**: `parse` freezes the processor if not already *frozen*.\n   *\n   * > 👉 **Note**: `parse` performs the parse phase, not the run phase or other\n   * > phases.\n   *\n   * @param {Compatible | undefined} [file]\n   *   file to parse (optional); typically `string` or `VFile`; any value\n   *   accepted as `x` in `new VFile(x)`.\n   * @returns {ParseTree extends undefined ? Node : ParseTree}\n   *   Syntax tree representing `file`.\n   */\n  parse(file) {\n    this.freeze()\n    const realFile = vfile(file)\n    const parser = this.parser || this.Parser\n    assertParser('parse', parser)\n    return parser(String(realFile), realFile)\n  }\n\n  /**\n   * Process the given file as configured on the processor.\n   *\n   * > 👉 **Note**: `process` freezes the processor if not already *frozen*.\n   *\n   * > 👉 **Note**: `process` performs the parse, run, and stringify phases.\n   *\n   * @overload\n   * @param {Compatible | undefined} file\n   * @param {ProcessCallback<VFileWithOutput<CompileResult>>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {Compatible | undefined} [file]\n   * @returns {Promise<VFileWithOutput<CompileResult>>}\n   *\n   * @param {Compatible | undefined} [file]\n   *   File (optional); typically `string` or `VFile`]; any value accepted as\n   *   `x` in `new VFile(x)`.\n   * @param {ProcessCallback<VFileWithOutput<CompileResult>> | undefined} [done]\n   *   Callback (optional).\n   * @returns {Promise<VFile> | undefined}\n   *   Nothing if `done` is given.\n   *   Otherwise a promise, rejected with a fatal error or resolved with the\n   *   processed file.\n   *\n   *   The parsed, transformed, and compiled value is available at\n   *   `file.value` (see note).\n   *\n   *   > 👉 **Note**: unified typically compiles by serializing: most\n   *   > compilers return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@link CompileResultMap `CompileResultMap`}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  process(file, done) {\n    const self = this\n\n    this.freeze()\n    assertParser('process', this.parser || this.Parser)\n    assertCompiler('process', this.compiler || this.Compiler)\n\n    return done ? executor(undefined, done) : new Promise(executor)\n\n    // Note: `void`s needed for TS.\n    /**\n     * @param {((file: VFileWithOutput<CompileResult>) => undefined | void) | undefined} resolve\n     * @param {(error: Error | undefined) => undefined | void} reject\n     * @returns {undefined}\n     */\n    function executor(resolve, reject) {\n      const realFile = vfile(file)\n      // Assume `ParseTree` (the result of the parser) matches `HeadTree` (the\n      // input of the first transform).\n      const parseTree =\n        /** @type {HeadTree extends undefined ? Node : HeadTree} */ (\n          /** @type {unknown} */ (self.parse(realFile))\n        )\n\n      self.run(parseTree, realFile, function (error, tree, file) {\n        if (error || !tree || !file) {\n          return realDone(error)\n        }\n\n        // Assume `TailTree` (the output of the last transform) matches\n        // `CompileTree` (the input of the compiler).\n        const compileTree =\n          /** @type {CompileTree extends undefined ? Node : CompileTree} */ (\n            /** @type {unknown} */ (tree)\n          )\n\n        const compileResult = self.stringify(compileTree, file)\n\n        if (looksLikeAValue(compileResult)) {\n          file.value = compileResult\n        } else {\n          file.result = compileResult\n        }\n\n        realDone(error, /** @type {VFileWithOutput<CompileResult>} */ (file))\n      })\n\n      /**\n       * @param {Error | undefined} error\n       * @param {VFileWithOutput<CompileResult> | undefined} [file]\n       * @returns {undefined}\n       */\n      function realDone(error, file) {\n        if (error || !file) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          assert(done, '`done` is defined if `resolve` is not')\n          done(undefined, file)\n        }\n      }\n    }\n  }\n\n  /**\n   * Process the given file as configured on the processor.\n   *\n   * An error is thrown if asynchronous transforms are configured.\n   *\n   * > 👉 **Note**: `processSync` freezes the processor if not already *frozen*.\n   *\n   * > 👉 **Note**: `processSync` performs the parse, run, and stringify phases.\n   *\n   * @param {Compatible | undefined} [file]\n   *   File (optional); typically `string` or `VFile`; any value accepted as\n   *   `x` in `new VFile(x)`.\n   * @returns {VFileWithOutput<CompileResult>}\n   *   The processed file.\n   *\n   *   The parsed, transformed, and compiled value is available at\n   *   `file.value` (see note).\n   *\n   *   > 👉 **Note**: unified typically compiles by serializing: most\n   *   > compilers return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@link CompileResultMap `CompileResultMap`}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  processSync(file) {\n    /** @type {boolean} */\n    let complete = false\n    /** @type {VFileWithOutput<CompileResult> | undefined} */\n    let result\n\n    this.freeze()\n    assertParser('processSync', this.parser || this.Parser)\n    assertCompiler('processSync', this.compiler || this.Compiler)\n\n    this.process(file, realDone)\n    assertDone('processSync', 'process', complete)\n    assert(result, 'we either bailed on an error or have a tree')\n\n    return result\n\n    /**\n     * @type {ProcessCallback<VFileWithOutput<CompileResult>>}\n     */\n    function realDone(error, file) {\n      complete = true\n      bail(error)\n      result = file\n    }\n  }\n\n  /**\n   * Run *transformers* on a syntax tree.\n   *\n   * > 👉 **Note**: `run` freezes the processor if not already *frozen*.\n   *\n   * > 👉 **Note**: `run` performs the run phase, not other phases.\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {Compatible | undefined} file\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {Compatible | undefined} [file]\n   * @returns {Promise<TailTree extends undefined ? Node : TailTree>}\n   *\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   *   Tree to transform and inspect.\n   * @param {(\n   *   RunCallback<TailTree extends undefined ? Node : TailTree> |\n   *   Compatible\n   * )} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} [done]\n   *   Callback (optional).\n   * @returns {Promise<TailTree extends undefined ? Node : TailTree> | undefined}\n   *   Nothing if `done` is given.\n   *   Otherwise, a promise rejected with a fatal error or resolved with the\n   *   transformed tree.\n   */\n  run(tree, file, done) {\n    assertNode(tree)\n    this.freeze()\n\n    const transformers = this.transformers\n\n    if (!done && typeof file === 'function') {\n      done = file\n      file = undefined\n    }\n\n    return done ? executor(undefined, done) : new Promise(executor)\n\n    // Note: `void`s needed for TS.\n    /**\n     * @param {(\n     *   ((tree: TailTree extends undefined ? Node : TailTree) => undefined | void) |\n     *   undefined\n     * )} resolve\n     * @param {(error: Error) => undefined | void} reject\n     * @returns {undefined}\n     */\n    function executor(resolve, reject) {\n      assert(\n        typeof file !== 'function',\n        '`file` can’t be a `done` anymore, we checked'\n      )\n      const realFile = vfile(file)\n      transformers.run(tree, realFile, realDone)\n\n      /**\n       * @param {Error | undefined} error\n       * @param {Node} outputTree\n       * @param {VFile} file\n       * @returns {undefined}\n       */\n      function realDone(error, outputTree, file) {\n        const resultingTree =\n          /** @type {TailTree extends undefined ? Node : TailTree} */ (\n            outputTree || tree\n          )\n\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(resultingTree)\n        } else {\n          assert(done, '`done` is defined if `resolve` is not')\n          done(undefined, resultingTree, file)\n        }\n      }\n    }\n  }\n\n  /**\n   * Run *transformers* on a syntax tree.\n   *\n   * An error is thrown if asynchronous transforms are configured.\n   *\n   * > 👉 **Note**: `runSync` freezes the processor if not already *frozen*.\n   *\n   * > 👉 **Note**: `runSync` performs the run phase, not other phases.\n   *\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   *   Tree to transform and inspect.\n   * @param {Compatible | undefined} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @returns {TailTree extends undefined ? Node : TailTree}\n   *   Transformed tree.\n   */\n  runSync(tree, file) {\n    /** @type {boolean} */\n    let complete = false\n    /** @type {(TailTree extends undefined ? Node : TailTree) | undefined} */\n    let result\n\n    this.run(tree, file, realDone)\n\n    assertDone('runSync', 'run', complete)\n    assert(result, 'we either bailed on an error or have a tree')\n    return result\n\n    /**\n     * @type {RunCallback<TailTree extends undefined ? Node : TailTree>}\n     */\n    function realDone(error, tree) {\n      bail(error)\n      result = tree\n      complete = true\n    }\n  }\n\n  /**\n   * Compile a syntax tree.\n   *\n   * > 👉 **Note**: `stringify` freezes the processor if not already *frozen*.\n   *\n   * > 👉 **Note**: `stringify` performs the stringify phase, not the run phase\n   * > or other phases.\n   *\n   * @param {CompileTree extends undefined ? Node : CompileTree} tree\n   *   Tree to compile.\n   * @param {Compatible | undefined} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @returns {CompileResult extends undefined ? Value : CompileResult}\n   *   Textual representation of the tree (see note).\n   *\n   *   > 👉 **Note**: unified typically compiles by serializing: most compilers\n   *   > return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@link CompileResultMap `CompileResultMap`}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  stringify(tree, file) {\n    this.freeze()\n    const realFile = vfile(file)\n    const compiler = this.compiler || this.Compiler\n    assertCompiler('stringify', compiler)\n    assertNode(tree)\n\n    return compiler(tree, realFile)\n  }\n\n  /**\n   * Configure the processor to use a plugin, a list of usable values, or a\n   * preset.\n   *\n   * If the processor is already using a plugin, the previous plugin\n   * configuration is changed based on the options that are passed in.\n   * In other words, the plugin is not added a second time.\n   *\n   * > 👉 **Note**: `use` cannot be called on *frozen* processors.\n   * > Call the processor first to create a new unfrozen processor.\n   *\n   * @example\n   *   There are many ways to pass plugins to `.use()`.\n   *   This example gives an overview:\n   *\n   *   ```js\n   *   import {unified} from 'unified'\n   *\n   *   unified()\n   *     // Plugin with options:\n   *     .use(pluginA, {x: true, y: true})\n   *     // Passing the same plugin again merges configuration (to `{x: true, y: false, z: true}`):\n   *     .use(pluginA, {y: false, z: true})\n   *     // Plugins:\n   *     .use([pluginB, pluginC])\n   *     // Two plugins, the second with options:\n   *     .use([pluginD, [pluginE, {}]])\n   *     // Preset with plugins and settings:\n   *     .use({plugins: [pluginF, [pluginG, {}]], settings: {position: false}})\n   *     // Settings only:\n   *     .use({settings: {position: false}})\n   *   ```\n   *\n   * @template {Array<unknown>} [Parameters=[]]\n   * @template {Node | string | undefined} [Input=undefined]\n   * @template [Output=Input]\n   *\n   * @overload\n   * @param {Preset | null | undefined} [preset]\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {PluggableList} list\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {Plugin<Parameters, Input, Output>} plugin\n   * @param {...(Parameters | [boolean])} parameters\n   * @returns {UsePlugin<ParseTree, HeadTree, TailTree, CompileTree, CompileResult, Input, Output>}\n   *\n   * @param {PluggableList | Plugin | Preset | null | undefined} value\n   *   Usable value.\n   * @param {...unknown} parameters\n   *   Parameters, when a plugin is given as a usable value.\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   Current processor.\n   */\n  use(value, ...parameters) {\n    const attachers = this.attachers\n    const namespace = this.namespace\n\n    assertUnfrozen('use', this.frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin(value, parameters)\n    } else if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new TypeError('Expected usable value, not `' + value + '`')\n    }\n\n    return this\n\n    /**\n     * @param {Pluggable} value\n     * @returns {undefined}\n     */\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value, [])\n      } else if (typeof value === 'object') {\n        if (Array.isArray(value)) {\n          const [plugin, ...parameters] =\n            /** @type {PluginTuple<Array<unknown>>} */ (value)\n          addPlugin(plugin, parameters)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new TypeError('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    /**\n     * @param {Preset} result\n     * @returns {undefined}\n     */\n    function addPreset(result) {\n      if (!('plugins' in result) && !('settings' in result)) {\n        throw new Error(\n          'Expected usable value but received an empty preset, which is probably a mistake: presets typically come with `plugins` and sometimes with `settings`, but this has neither'\n        )\n      }\n\n      addList(result.plugins)\n\n      if (result.settings) {\n        namespace.settings = extend(true, namespace.settings, result.settings)\n      }\n    }\n\n    /**\n     * @param {PluggableList | null | undefined} plugins\n     * @returns {undefined}\n     */\n    function addList(plugins) {\n      let index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (Array.isArray(plugins)) {\n        while (++index < plugins.length) {\n          const thing = plugins[index]\n          add(thing)\n        }\n      } else {\n        throw new TypeError('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    /**\n     * @param {Plugin} plugin\n     * @param {Array<unknown>} parameters\n     * @returns {undefined}\n     */\n    function addPlugin(plugin, parameters) {\n      let index = -1\n      let entryIndex = -1\n\n      while (++index < attachers.length) {\n        if (attachers[index][0] === plugin) {\n          entryIndex = index\n          break\n        }\n      }\n\n      if (entryIndex === -1) {\n        attachers.push([plugin, ...parameters])\n      }\n      // Only set if there was at least a `primary` value, otherwise we’d change\n      // `arguments.length`.\n      else if (parameters.length > 0) {\n        let [primary, ...rest] = parameters\n        const currentPrimary = attachers[entryIndex][1]\n        if (isPlainObj(currentPrimary) && isPlainObj(primary)) {\n          primary = extend(true, currentPrimary, primary)\n        }\n\n        attachers[entryIndex] = [plugin, primary, ...rest]\n      }\n    }\n  }\n}\n\n// Note: this returns a *callable* instance.\n// That’s why it’s documented as a function.\n/**\n * Create a new processor.\n *\n * @example\n *   This example shows how a new processor can be created (from `remark`) and linked\n *   to **stdin**(4) and **stdout**(4).\n *\n *   ```js\n *   import process from 'node:process'\n *   import concatStream from 'concat-stream'\n *   import {remark} from 'remark'\n *\n *   process.stdin.pipe(\n *     concatStream(function (buf) {\n *       process.stdout.write(String(remark().processSync(buf)))\n *     })\n *   )\n *   ```\n *\n * @returns\n *   New *unfrozen* processor (`processor`).\n *\n *   This processor is configured to work the same as its ancestor.\n *   When the descendant processor is configured in the future it does not\n *   affect the ancestral processor.\n */\nexport const unified = new Processor().freeze()\n\n/**\n * Assert a parser is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Parser}\n */\nfunction assertParser(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `parser`')\n  }\n}\n\n/**\n * Assert a compiler is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Compiler}\n */\nfunction assertCompiler(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `compiler`')\n  }\n}\n\n/**\n * Assert the processor is not frozen.\n *\n * @param {string} name\n * @param {unknown} frozen\n * @returns {asserts frozen is false}\n */\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot call `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n/**\n * Assert `node` is a unist node.\n *\n * @param {unknown} node\n * @returns {asserts node is Node}\n */\nfunction assertNode(node) {\n  // `isPlainObj` unfortunately uses `any` instead of `unknown`.\n  // type-coverage:ignore-next-line\n  if (!isPlainObj(node) || typeof node.type !== 'string') {\n    throw new TypeError('Expected node, got `' + node + '`')\n    // Fine.\n  }\n}\n\n/**\n * Assert that `complete` is `true`.\n *\n * @param {string} name\n * @param {string} asyncName\n * @param {unknown} complete\n * @returns {asserts complete is true}\n */\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n\n/**\n * @param {Compatible | undefined} [value]\n * @returns {VFile}\n */\nfunction vfile(value) {\n  return looksLikeAVFile(value) ? value : new VFile(value)\n}\n\n/**\n * @param {Compatible | undefined} [value]\n * @returns {value is VFile}\n */\nfunction looksLikeAVFile(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'message' in value &&\n      'messages' in value\n  )\n}\n\n/**\n * @param {unknown} [value]\n * @returns {value is Value}\n */\nfunction looksLikeAValue(value) {\n  return typeof value === 'string' || isUint8Array(value)\n}\n\n/**\n * Assert `value` is an `Uint8Array`.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Uint8Array}\n *   Whether `value` is an `Uint8Array`.\n */\nfunction isUint8Array(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'byteLength' in value &&\n      'byteOffset' in value\n  )\n}\n","// Register `Raw` in tree:\n/// <reference types=\"mdast-util-to-hast\" />\n\n/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Parents} Parents\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast-util-to-jsx-runtime').Components} JsxRuntimeComponents\n * @typedef {import('remark-rehype').Options} RemarkRehypeOptions\n * @typedef {import('unist-util-visit').BuildVisitor<Root>} Visitor\n * @typedef {import('unified').PluggableList} PluggableList\n */\n\n/**\n * @callback AllowElement\n *   Filter elements.\n * @param {Readonly<Element>} element\n *   Element to check.\n * @param {number} index\n *   Index of `element` in `parent`.\n * @param {Readonly<Parents> | undefined} parent\n *   Parent of `element`.\n * @returns {boolean | null | undefined}\n *   Whether to allow `element` (default: `false`).\n *\n * @typedef {Partial<JsxRuntimeComponents>} Components\n *   Map tag names to components.\n *\n * @typedef Deprecation\n *   Deprecation.\n * @property {string} from\n *   Old field.\n * @property {string} id\n *   ID in readme.\n * @property {keyof Options} [to]\n *   New field.\n *\n * @typedef Options\n *   Configuration.\n * @property {AllowElement | null | undefined} [allowElement]\n *   Filter elements (optional);\n *   `allowedElements` / `disallowedElements` is used first.\n * @property {ReadonlyArray<string> | null | undefined} [allowedElements]\n *   Tag names to allow (default: all tag names);\n *   cannot combine w/ `disallowedElements`.\n * @property {string | null | undefined} [children]\n *   Markdown.\n * @property {string | null | undefined} [className]\n *   Wrap in a `div` with this class name.\n * @property {Components | null | undefined} [components]\n *   Map tag names to components.\n * @property {ReadonlyArray<string> | null | undefined} [disallowedElements]\n *   Tag names to disallow (default: `[]`);\n *   cannot combine w/ `allowedElements`.\n * @property {PluggableList | null | undefined} [rehypePlugins]\n *   List of rehype plugins to use.\n * @property {PluggableList | null | undefined} [remarkPlugins]\n *   List of remark plugins to use.\n * @property {Readonly<RemarkRehypeOptions> | null | undefined} [remarkRehypeOptions]\n *   Options to pass through to `remark-rehype`.\n * @property {boolean | null | undefined} [skipHtml=false]\n *   Ignore HTML in markdown completely (default: `false`).\n * @property {boolean | null | undefined} [unwrapDisallowed=false]\n *   Extract (unwrap) what’s in disallowed elements (default: `false`);\n *   normally when say `strong` is not allowed, it and it’s children are dropped,\n *   with `unwrapDisallowed` the element itself is replaced by its children.\n * @property {UrlTransform | null | undefined} [urlTransform]\n *   Change URLs (default: `defaultUrlTransform`)\n *\n * @callback UrlTransform\n *   Transform all URLs.\n * @param {string} url\n *   URL.\n * @param {string} key\n *   Property name (example: `'href'`).\n * @param {Readonly<Element>} node\n *   Node.\n * @returns {string | null | undefined}\n *   Transformed URL (optional).\n */\n\nimport {unreachable} from 'devlop'\nimport {toJsxRuntime} from 'hast-util-to-jsx-runtime'\nimport {urlAttributes} from 'html-url-attributes'\n// @ts-expect-error: untyped.\nimport {Fragment, jsx, jsxs} from 'react/jsx-runtime'\nimport remarkParse from 'remark-parse'\nimport remarkRehype from 'remark-rehype'\nimport {unified} from 'unified'\nimport {visit} from 'unist-util-visit'\nimport {VFile} from 'vfile'\n\nconst changelog =\n  'https://github.com/remarkjs/react-markdown/blob/main/changelog.md'\n\n/** @type {PluggableList} */\nconst emptyPlugins = []\n/** @type {Readonly<RemarkRehypeOptions>} */\nconst emptyRemarkRehypeOptions = {allowDangerousHtml: true}\nconst safeProtocol = /^(https?|ircs?|mailto|xmpp)$/i\n\n// Mutable because we `delete` any time it’s used and a message is sent.\n/** @type {ReadonlyArray<Readonly<Deprecation>>} */\nconst deprecations = [\n  {from: 'astPlugins', id: 'remove-buggy-html-in-markdown-parser'},\n  {from: 'allowDangerousHtml', id: 'remove-buggy-html-in-markdown-parser'},\n  {\n    from: 'allowNode',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes',\n    to: 'allowElement'\n  },\n  {\n    from: 'allowedTypes',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes',\n    to: 'allowedElements'\n  },\n  {\n    from: 'disallowedTypes',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes',\n    to: 'disallowedElements'\n  },\n  {from: 'escapeHtml', id: 'remove-buggy-html-in-markdown-parser'},\n  {from: 'includeElementIndex', id: '#remove-includeelementindex'},\n  {\n    from: 'includeNodeIndex',\n    id: 'change-includenodeindex-to-includeelementindex'\n  },\n  {from: 'linkTarget', id: 'remove-linktarget'},\n  {from: 'plugins', id: 'change-plugins-to-remarkplugins', to: 'remarkPlugins'},\n  {from: 'rawSourcePos', id: '#remove-rawsourcepos'},\n  {from: 'renderers', id: 'change-renderers-to-components', to: 'components'},\n  {from: 'source', id: 'change-source-to-children', to: 'children'},\n  {from: 'sourcePos', id: '#remove-sourcepos'},\n  {from: 'transformImageUri', id: '#add-urltransform', to: 'urlTransform'},\n  {from: 'transformLinkUri', id: '#add-urltransform', to: 'urlTransform'}\n]\n\n/**\n * Component to render markdown.\n *\n * @param {Readonly<Options>} options\n *   Props.\n * @returns {JSX.Element}\n *   React element.\n */\nexport function Markdown(options) {\n  const allowedElements = options.allowedElements\n  const allowElement = options.allowElement\n  const children = options.children || ''\n  const className = options.className\n  const components = options.components\n  const disallowedElements = options.disallowedElements\n  const rehypePlugins = options.rehypePlugins || emptyPlugins\n  const remarkPlugins = options.remarkPlugins || emptyPlugins\n  const remarkRehypeOptions = options.remarkRehypeOptions\n    ? {...options.remarkRehypeOptions, ...emptyRemarkRehypeOptions}\n    : emptyRemarkRehypeOptions\n  const skipHtml = options.skipHtml\n  const unwrapDisallowed = options.unwrapDisallowed\n  const urlTransform = options.urlTransform || defaultUrlTransform\n\n  const processor = unified()\n    .use(remarkParse)\n    .use(remarkPlugins)\n    .use(remarkRehype, remarkRehypeOptions)\n    .use(rehypePlugins)\n\n  const file = new VFile()\n\n  if (typeof children === 'string') {\n    file.value = children\n  } else {\n    unreachable(\n      'Unexpected value `' +\n        children +\n        '` for `children` prop, expected `string`'\n    )\n  }\n\n  if (allowedElements && disallowedElements) {\n    unreachable(\n      'Unexpected combined `allowedElements` and `disallowedElements`, expected one or the other'\n    )\n  }\n\n  for (const deprecation of deprecations) {\n    if (Object.hasOwn(options, deprecation.from)) {\n      unreachable(\n        'Unexpected `' +\n          deprecation.from +\n          '` prop, ' +\n          (deprecation.to\n            ? 'use `' + deprecation.to + '` instead'\n            : 'remove it') +\n          ' (see <' +\n          changelog +\n          '#' +\n          deprecation.id +\n          '> for more info)'\n      )\n    }\n  }\n\n  const mdastTree = processor.parse(file)\n  /** @type {Nodes} */\n  let hastTree = processor.runSync(mdastTree, file)\n\n  // Wrap in `div` if there’s a class name.\n  if (className) {\n    hastTree = {\n      type: 'element',\n      tagName: 'div',\n      properties: {className},\n      // Assume no doctypes.\n      children: /** @type {Array<ElementContent>} */ (\n        hastTree.type === 'root' ? hastTree.children : [hastTree]\n      )\n    }\n  }\n\n  visit(hastTree, transform)\n\n  return toJsxRuntime(hastTree, {\n    Fragment,\n    components,\n    ignoreInvalidStyle: true,\n    jsx,\n    jsxs,\n    passKeys: true,\n    passNode: true\n  })\n\n  /** @type {Visitor} */\n  function transform(node, index, parent) {\n    if (node.type === 'raw' && parent && typeof index === 'number') {\n      if (skipHtml) {\n        parent.children.splice(index, 1)\n      } else {\n        parent.children[index] = {type: 'text', value: node.value}\n      }\n\n      return index\n    }\n\n    if (node.type === 'element') {\n      /** @type {string} */\n      let key\n\n      for (key in urlAttributes) {\n        if (\n          Object.hasOwn(urlAttributes, key) &&\n          Object.hasOwn(node.properties, key)\n        ) {\n          const value = node.properties[key]\n          const test = urlAttributes[key]\n          if (test === null || test.includes(node.tagName)) {\n            node.properties[key] = urlTransform(String(value || ''), key, node)\n          }\n        }\n      }\n    }\n\n    if (node.type === 'element') {\n      let remove = allowedElements\n        ? !allowedElements.includes(node.tagName)\n        : disallowedElements\n        ? disallowedElements.includes(node.tagName)\n        : false\n\n      if (!remove && allowElement && typeof index === 'number') {\n        remove = !allowElement(node, index, parent)\n      }\n\n      if (remove && parent && typeof index === 'number') {\n        if (unwrapDisallowed && node.children) {\n          parent.children.splice(index, 1, ...node.children)\n        } else {\n          parent.children.splice(index, 1)\n        }\n\n        return index\n      }\n    }\n  }\n}\n\n/**\n * Make a URL safe.\n *\n * @satisfies {UrlTransform}\n * @param {string} value\n *   URL.\n * @returns {string}\n *   Safe URL.\n */\nexport function defaultUrlTransform(value) {\n  // Same as:\n  // <https://github.com/micromark/micromark/blob/929275e/packages/micromark-util-sanitize-uri/dev/index.js#L34>\n  // But without the `encode` part.\n  const colon = value.indexOf(':')\n  const questionMark = value.indexOf('?')\n  const numberSign = value.indexOf('#')\n  const slash = value.indexOf('/')\n\n  if (\n    // If there is no protocol, it’s relative.\n    colon < 0 ||\n    // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash > -1 && colon > slash) ||\n    (questionMark > -1 && colon > questionMark) ||\n    (numberSign > -1 && colon > numberSign) ||\n    // It is a protocol, it should be allowed.\n    safeProtocol.test(value.slice(0, colon))\n  ) {\n    return value\n  }\n\n  return ''\n}\n","// EnBook.tsx\r\nimport { useEffect, useState } from \"react\";\r\nimport FlipBook from \"../../src/FlipBook\";\r\nimport Markdown from \"react-markdown\";\r\n\r\nconst markdownFiles = import.meta.glob(\"/assets/pages_data/en/content/*.md\");\r\n\r\ninterface MarkdownModule {\r\n  default: string;\r\n}\r\n\r\nexport const EnBook = () => {\r\n  const [enPages, setEnPages] = useState<JSX.Element[]>([]);\r\n\r\n  useEffect(() => {\r\n    const loadMarkdownFiles = async () => {\r\n      const files = await Promise.all(\r\n        Object.entries(markdownFiles).map(async ([path, resolver]) => {\r\n          const content = await resolver();\r\n          assertIsMarkdownModule(content);\r\n          return {\r\n            path,\r\n            content: content.default,\r\n          };\r\n        })\r\n      );\r\n      const pages = files.map(({ content }, index) => (\r\n        <div key={index} className=\"en-page\">\r\n          <Markdown>{content}</Markdown>\r\n        </div>\r\n      ));\r\n\r\n      setEnPages(pages);\r\n    };\r\n\r\n    loadMarkdownFiles();\r\n  }, []);\r\n\r\n  function assertIsMarkdownModule(\r\n    module: unknown\r\n  ): asserts module is MarkdownModule {\r\n    if (typeof (module as MarkdownModule).default !== \"string\") {\r\n      throw new Error(\"Invalid markdown module\");\r\n    }\r\n  }\r\n\r\n  return enPages.length ? (\r\n    <FlipBook className=\"en-book\" pages={enPages} debug={true} />\r\n  ) : null;\r\n};\r\n\r\nexport default EnBook;\r\n","// HeBook.tsx\r\nimport FlipBook from \"../../src/FlipBook\";\r\nimport { PageSemantics } from \"flip-book\";\r\n\r\nconst hePages = Array.from({ length: 10 }, (_, index) => (\r\n  <div key={index}>\r\n    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\r\n  </div>\r\n));\r\n\r\nconst hePageSemanticsDict: Record<number, string> = {\r\n  4: \"א\",\r\n  5: \"ב\",\r\n  6: \"ג\",\r\n};\r\n\r\nconst hePageSemantics: PageSemantics = {\r\n  indexToSemanticName(pageIndex: number): string {\r\n    return hePageSemanticsDict[pageIndex] ?? \"\";\r\n  },\r\n  semanticNameToIndex(semanticPageName: string): number | null {\r\n    const entry = Object.entries(hePageSemanticsDict).find(\r\n      ([, value]) => value === semanticPageName\r\n    );\r\n    return entry ? parseInt(entry[0]) : null;\r\n  },\r\n  indexToTitle(pageIndex: number): string {\r\n    const chapter = hePageSemanticsDict[pageIndex];\r\n    return chapter ? `פרק ${chapter}` : \"\";\r\n  },\r\n};\r\n\r\nexport const HeBook = () => {\r\n  return (\r\n    <FlipBook\r\n      className=\"he-book\"\r\n      pages={hePages}\r\n      pageSemantics={hePageSemantics}\r\n      debug={true}\r\n      direction=\"rtl\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default HeBook;\r\n","// App.tsx\nimport type { FC } from \"react\";\nimport \"./App.css\"; // Import the CSS file\nimport EnBook from \"./EnBook\";\nimport HeBook from \"./HeBook\";\n\nexport const App: FC = () => {\n  return (\n    <div className=\"app\">\n      <header>\n        <h1>HTML Flip Book Example</h1>\n      </header>\n      <section className=\"books-container\">\n        <section className=\"en-book-container\">\n          <EnBook />\n        </section>\n        <section className=\"he-book-container\">\n          <HeBook />\n        </section>\n      </section>\n    </div>\n  );\n};\n\nexport default App;\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom/client';\nimport { App } from './App';\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement,\n);\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n);\n"],"file":"assets/index-D1i8C1bl.js"}